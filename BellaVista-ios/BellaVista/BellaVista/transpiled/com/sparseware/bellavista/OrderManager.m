//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/OrderManager.java
//
//  Created by decoteaud on 12/2/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/aWorkerTask.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/spot/PasswordField.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/AlertPanel.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UICompoundIcon.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UINotifier.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/UITextIcon.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/border/UILineBorder.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/viewer/FormViewer.h"
#include "com/appnativa/rare/viewer/ListBoxViewer.h"
#include "com/appnativa/rare/viewer/TableViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/CheckBoxWidget.h"
#include "com/appnativa/rare/widget/ComboBoxWidget.h"
#include "com/appnativa/rare/widget/LabelWidget.h"
#include "com/appnativa/rare/widget/PushButtonWidget.h"
#include "com/appnativa/rare/widget/TextFieldWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/ObjectCache.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/StringCache.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/MessageException.h"
#include "com/sparseware/bellavista/OrderManager.h"
#include "com/sparseware/bellavista/Orders.h"
#include "com/sparseware/bellavista/PatientSelect.h"
#include "com/sparseware/bellavista/PickList.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/oe/FieldValue.h"
#include "com/sparseware/bellavista/oe/FormsManager.h"
#include "com/sparseware/bellavista/oe/Order.h"
#include "com/sparseware/bellavista/oe/OrderFields.h"
#include "java/io/FileNotFoundException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Runnable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/net/MalformedURLException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation CCPBVOrderManager

static NSString * CCPBVOrderManager_ORDER_CART_KEY_ = @"_orderCart";
static NSString * CCPBVOrderManager_ORDER_STATUSES_KEY_ = @"_orderStatuses";
static RAREUTObjectCache * CCPBVOrderManager_cachedLists_;
static int CCPBVOrderManager_pendingOrderCount_;
static int CCPBVOrderManager_lastPendingOrderCount_;
static RAREUITextIcon * CCPBVOrderManager_pendingOrderCountIcon_;
static RAREUICompoundIcon * CCPBVOrderManager_compoundIcon1_;
static RAREUICompoundIcon * CCPBVOrderManager_compoundIcon2_;
static NSString * CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_ = @"_demoOrderInfo";
static NSString * CCPBVOrderManager_DEMO_ORDER_STATUS_FLAGS_KEY_ = @"statusFlags";
static RAREUTJSONObject * CCPBVOrderManager_ordersFilter_;
static RARESPOTViewer * CCPBVOrderManager_filterConfiguration_;
static RARESPOTViewer * CCPBVOrderManager_cartConfiguration_;
static id<JavaUtilList> CCPBVOrderManager_orderRoutes_;
static id<JavaUtilList> CCPBVOrderManager_orderTypes_;
static CCPBVOrder * CCPBVOrderManager_editorOrder_;
static long long int CCPBVOrderManager_lastActionTime_;
static id CCPBVOrderManager_orderCart_;
static id CCPBVOrderManager_demoOrderInfo_;
static id CCPBVOrderManager_orderStatuses_;
static NSString * CCPBVOrderManager_orderingUser_;
static NSString * CCPBVOrderManager_patientForOrders_;
static CCPBVOrderManager_ShowOrderFormCallback * CCPBVOrderManager_showOrderFormCallback_;

+ (NSString *)ORDER_CART_KEY {
  return CCPBVOrderManager_ORDER_CART_KEY_;
}

+ (NSString *)ORDER_STATUSES_KEY {
  return CCPBVOrderManager_ORDER_STATUSES_KEY_;
}

+ (RAREUTObjectCache *)cachedLists {
  return CCPBVOrderManager_cachedLists_;
}

+ (void)setCachedLists:(RAREUTObjectCache *)cachedLists {
  CCPBVOrderManager_cachedLists_ = cachedLists;
}

+ (int)pendingOrderCount {
  return CCPBVOrderManager_pendingOrderCount_;
}

+ (int *)pendingOrderCountRef {
  return &CCPBVOrderManager_pendingOrderCount_;
}

+ (int)lastPendingOrderCount {
  return CCPBVOrderManager_lastPendingOrderCount_;
}

+ (int *)lastPendingOrderCountRef {
  return &CCPBVOrderManager_lastPendingOrderCount_;
}

+ (RAREUITextIcon *)pendingOrderCountIcon {
  return CCPBVOrderManager_pendingOrderCountIcon_;
}

+ (void)setPendingOrderCountIcon:(RAREUITextIcon *)pendingOrderCountIcon {
  CCPBVOrderManager_pendingOrderCountIcon_ = pendingOrderCountIcon;
}

+ (RAREUICompoundIcon *)compoundIcon1 {
  return CCPBVOrderManager_compoundIcon1_;
}

+ (void)setCompoundIcon1:(RAREUICompoundIcon *)compoundIcon1 {
  CCPBVOrderManager_compoundIcon1_ = compoundIcon1;
}

+ (RAREUICompoundIcon *)compoundIcon2 {
  return CCPBVOrderManager_compoundIcon2_;
}

+ (void)setCompoundIcon2:(RAREUICompoundIcon *)compoundIcon2 {
  CCPBVOrderManager_compoundIcon2_ = compoundIcon2;
}

+ (NSString *)DEMO_PATIENT_ORDER_KEY {
  return CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_;
}

+ (void)setDEMO_PATIENT_ORDER_KEY:(NSString *)DEMO_PATIENT_ORDER_KEY {
  CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_ = DEMO_PATIENT_ORDER_KEY;
}

+ (NSString *)DEMO_ORDER_STATUS_FLAGS_KEY {
  return CCPBVOrderManager_DEMO_ORDER_STATUS_FLAGS_KEY_;
}

+ (void)setDEMO_ORDER_STATUS_FLAGS_KEY:(NSString *)DEMO_ORDER_STATUS_FLAGS_KEY {
  CCPBVOrderManager_DEMO_ORDER_STATUS_FLAGS_KEY_ = DEMO_ORDER_STATUS_FLAGS_KEY;
}

+ (RAREUTJSONObject *)ordersFilter {
  return CCPBVOrderManager_ordersFilter_;
}

+ (void)setOrdersFilter:(RAREUTJSONObject *)ordersFilter {
  CCPBVOrderManager_ordersFilter_ = ordersFilter;
}

+ (RARESPOTViewer *)filterConfiguration {
  return CCPBVOrderManager_filterConfiguration_;
}

+ (void)setFilterConfiguration:(RARESPOTViewer *)filterConfiguration {
  CCPBVOrderManager_filterConfiguration_ = filterConfiguration;
}

+ (RARESPOTViewer *)cartConfiguration {
  return CCPBVOrderManager_cartConfiguration_;
}

+ (void)setCartConfiguration:(RARESPOTViewer *)cartConfiguration {
  CCPBVOrderManager_cartConfiguration_ = cartConfiguration;
}

+ (id<JavaUtilList>)orderRoutes {
  return CCPBVOrderManager_orderRoutes_;
}

+ (void)setOrderRoutes:(id<JavaUtilList>)orderRoutes {
  CCPBVOrderManager_orderRoutes_ = orderRoutes;
}

+ (id<JavaUtilList>)orderTypes {
  return CCPBVOrderManager_orderTypes_;
}

+ (void)setOrderTypes:(id<JavaUtilList>)orderTypes {
  CCPBVOrderManager_orderTypes_ = orderTypes;
}

+ (CCPBVOrder *)editorOrder {
  return CCPBVOrderManager_editorOrder_;
}

+ (void)setEditorOrder:(CCPBVOrder *)editorOrder {
  CCPBVOrderManager_editorOrder_ = editorOrder;
}

+ (long long int)lastActionTime {
  return CCPBVOrderManager_lastActionTime_;
}

+ (long long int *)lastActionTimeRef {
  return &CCPBVOrderManager_lastActionTime_;
}

+ (id)orderCart {
  return CCPBVOrderManager_orderCart_;
}

+ (void)setOrderCart:(id)orderCart {
  CCPBVOrderManager_orderCart_ = orderCart;
}

+ (id)demoOrderInfo {
  return CCPBVOrderManager_demoOrderInfo_;
}

+ (void)setDemoOrderInfo:(id)demoOrderInfo {
  CCPBVOrderManager_demoOrderInfo_ = demoOrderInfo;
}

+ (id)orderStatuses {
  return CCPBVOrderManager_orderStatuses_;
}

+ (void)setOrderStatuses:(id)orderStatuses {
  CCPBVOrderManager_orderStatuses_ = orderStatuses;
}

+ (NSString *)orderingUser {
  return CCPBVOrderManager_orderingUser_;
}

+ (void)setOrderingUser:(NSString *)orderingUser {
  CCPBVOrderManager_orderingUser_ = orderingUser;
}

+ (NSString *)patientForOrders {
  return CCPBVOrderManager_patientForOrders_;
}

+ (void)setPatientForOrders:(NSString *)patientForOrders {
  CCPBVOrderManager_patientForOrders_ = patientForOrders;
}

+ (CCPBVOrderManager_ShowOrderFormCallback *)showOrderFormCallback {
  return CCPBVOrderManager_showOrderFormCallback_;
}

+ (void)setShowOrderFormCallback:(CCPBVOrderManager_ShowOrderFormCallback *)showOrderFormCallback {
  CCPBVOrderManager_showOrderFormCallback_ = showOrderFormCallback;
}

- (id)init {
  return [super init];
}

- (void)cleanupAfterOrdering {
  CCPBVOrderManager_filterConfiguration_ = nil;
}

+ (void)addOrderToCartWithCCPBVOrder:(CCPBVOrder *)order {
  CCPBVOrderManager_lastActionTime_ = [JavaLangSystem currentTimeMillis];
  RAREUTIdentityArrayList *list = [CCPBVOrderManager getOrderCartWithBoolean:YES];
  [((RAREUTIdentityArrayList *) nil_chk(list)) addIfNotPresentWithId:order];
  NSString *id_ = ((CCPBVOrder *) nil_chk(order))->linkedOrderID_;
  if (id_ != nil) {
    id<JavaUtilMap> map = [CCPBVOrderManager getOrderStatusesWithBoolean:YES];
    (void) [((id<JavaUtilMap>) nil_chk(map)) putWithId:id_ withId:order->actionType_];
  }
  CCPBVOrderManager_pendingOrderCount_ = [list size];
  [CCPBVOrderManager updateCartIcon];
}

+ (BOOL)canChangePatientOrExitWithBoolean:(BOOL)exit
                      withCCPBVActionPath:(CCPBVActionPath *)path {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  int oc = [CCPBVOrderManager getPendingOrderCount];
  if (oc == 0) {
    while ([CCPBVUtils popViewerStack]) {
    }
    ;
    if ([CCPBVUtils getViewerStackSize] > 0) {
      return NO;
    }
    return YES;
  }
  if ((path != nil) && ![path isEmpty]) {
    return YES;
  }
  id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$1 alloc] initWithRAREWindowViewer:w withBoolean:exit withCCPBVActionPath:path];
  NSString *s = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.oe.text.has_pending_orders" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [JavaLangInteger valueOfWithInt:oc] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  NSString *no = [w getStringWithNSString:exit ? @"bv.oe.text.exit_app" : @"bv.oe.text.delete_cart"];
  [w yesNoCancelWithNSString:nil withId:s withNSString:[w getStringWithNSString:@"bv.oe.text.goto_cart"] withNSString:no withRAREiFunctionCallback:cb];
  return NO;
}

+ (void)emptyOrderCart {
  [CCPBVOrderManager emptyOrderCartEx];
  [CCPBVOrderManager updateCartIcon];
  RARETableViewer *table = (RARETableViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"ordersTable"], [RARETableViewer class]);
  if (table != nil) {
    int len = [table getRowCount];
    for (int i = 0; i < len; i++) {
      RARERenderableDataItem *row = [table getWithInt:i];
      [((RARERenderableDataItem *) nil_chk(row)) unsetUserStateFlagWithByte:CCPBVOrders_STOPPED_FLAG];
      [row setFontWithRAREUIFont:nil];
      [row setForegroundWithRAREUIColor:nil];
    }
    [table refreshItems];
  }
}

+ (void)getCachedListWithNSString:(NSString *)name
                     withNSString:(NSString *)href
        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (CCPBVOrderManager_cachedLists_ != nil) {
    id o = [CCPBVOrderManager_cachedLists_ getWithId:name];
    if (o != nil) {
      [((id<RAREiFunctionCallback>) nil_chk(cb)) finishedWithBoolean:NO withId:o];
      return;
    }
  }
  RAREaWorkerTask *task = [[CCPBVOrderManager_$2 alloc] initWithNSString:href withRAREiFunctionCallback:cb withNSString:name];
  (void) [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

+ (RAREUTJSONObject *)getDemoOrderObjectWithBoolean:(BOOL)create {
  if ([CCPBVUtils isDemo]) {
    RAREUTJSONObject *patient = [CCPBVUtils getPatient];
    RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(patient)) optJSONObjectWithNSString:CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_];
    if ((o == nil) && create) {
      o = [[RAREUTJSONObject alloc] init];
      (void) [patient putWithNSString:CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_ withJavaUtilMap:o];
    }
    return o;
  }
  return nil;
}

+ (int)getDemoOrderStatusWithRAREUTJSONObject:(RAREUTJSONObject *)order {
  return [((RAREUTJSONObject *) nil_chk(order)) optIntWithNSString:CCPBVOrderManager_DEMO_ORDER_STATUS_FLAGS_KEY_ withInt:-1];
}

+ (long long int)getLastOrderActionTtime {
  return CCPBVOrderManager_lastActionTime_;
}

+ (CCPBVOrder *)getOrderBeingEdited {
  return CCPBVOrderManager_editorOrder_;
}

+ (RAREUTIdentityArrayList *)getOrderCartWithBoolean:(BOOL)create {
  RAREUTJSONObject *o = [CCPBVUtils getPatient];
  RAREUTObjectHolder *oh = (RAREUTObjectHolder *) check_class_cast([((RAREUTJSONObject *) nil_chk(o)) optWithNSString:CCPBVOrderManager_ORDER_CART_KEY_], [RAREUTObjectHolder class]);
  RAREUTIdentityArrayList *list = (oh == nil) ? nil : (RAREUTIdentityArrayList *) check_class_cast(oh->value_, [RAREUTIdentityArrayList class]);
  if ((list == nil) && create) {
    list = [[RAREUTIdentityArrayList alloc] init];
    oh = [[RAREUTObjectHolder alloc] initWithId:list];
    oh->source_ = [JavaLangLong valueOfWithLong:[JavaLangSystem currentTimeMillis]];
    (void) [o putWithNSString:CCPBVOrderManager_ORDER_CART_KEY_ withId:oh];
  }
  return list;
}

+ (long long int)getOrderCartLastModifiedTime {
  RAREUTJSONObject *o = [CCPBVUtils getPatient];
  RAREUTObjectHolder *oh = (RAREUTObjectHolder *) check_class_cast([((RAREUTJSONObject *) nil_chk(o)) optWithNSString:CCPBVOrderManager_ORDER_CART_KEY_], [RAREUTObjectHolder class]);
  return (oh == nil) ? 0 : [((JavaLangLong *) check_class_cast(oh->source_, [JavaLangLong class])) longLongValue];
}

+ (RAREUTJSONObject *)getOrdersFilter {
  return CCPBVOrderManager_ordersFilter_;
}

+ (RAREUTJSONObject *)getOrdersInfoWithNSString:(NSString *)key {
  RAREUTJSONObject *info = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"ordersInfo"], [RAREUTJSONObject class]);
  info = [((RAREUTJSONObject *) nil_chk(info)) getJSONObjectWithNSString:key];
  if (info != nil) {
    if (![info optBooleanWithNSString:@"_resolved"]) {
      (void) [info putWithNSString:@"_resolved" withBoolean:YES];
      RAREUTJSONArray *a = [info optJSONArrayWithNSString:@"fields"];
      NSString *link = [info optStringWithNSString:@"linkedFields" withNSString:nil];
      RAREUTJSONObject *linfo = (link == nil) ? nil : [CCPBVOrderManager getOrdersInfoWithNSString:link];
      RAREUTJSONArray *la = (linfo == nil) ? nil : [linfo optJSONArrayWithNSString:@"fields"];
      if (la != nil) {
        if (a == nil) {
          a = la;
        }
        else {
          [a addAllWithJavaUtilCollection:la];
        }
      }
      if ((a != nil) && ![a isEmpty]) {
        (void) [info putWithNSString:@"fields" withJavaUtilCollection:a];
      }
      else {
        (void) [info removeWithNSString:@"fields"];
      }
    }
  }
  return info;
}

+ (id<JavaUtilMap>)getOrderStatusesWithBoolean:(BOOL)create {
  RAREUTJSONObject *o = [CCPBVUtils getPatient];
  id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast([((RAREUTJSONObject *) nil_chk(o)) optWithNSString:CCPBVOrderManager_ORDER_STATUSES_KEY_], @protocol(JavaUtilMap));
  if ((map == nil) && create) {
    map = [[JavaUtilHashMap alloc] init];
    (void) [o putWithNSString:CCPBVOrderManager_ORDER_STATUSES_KEY_ withJavaUtilMap:map];
  }
  return map;
}

+ (int)getPendingOrderCount {
  return CCPBVOrderManager_pendingOrderCount_;
}

+ (id<RAREiPlatformIcon>)getPendingOrderCountIcon {
  int taskCount = [CCPBVOrderManager getPendingOrderCount];
  if (taskCount == 0) {
    CCPBVOrderManager_lastPendingOrderCount_ = 0;
    return nil;
  }
  if ((taskCount == CCPBVOrderManager_lastPendingOrderCount_) && (CCPBVOrderManager_pendingOrderCountIcon_ != nil)) {
    return CCPBVOrderManager_pendingOrderCountIcon_;
  }
  NSString *value;
  if (taskCount > 9) {
    value = @"9+";
  }
  else {
    value = [RAREUTStringCache valueOfWithInt:taskCount];
  }
  RAREUILineBorder *b;
  if (CCPBVOrderManager_pendingOrderCountIcon_ == nil) {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    b = [[RAREUILineBorder alloc] initWithRAREUIColor:[RAREUIColor WHITE] withFloat:[RAREUIScreen PLATFORM_PIXELS_2] withFloat:8 withFloat:8];
    [b setInsetsPaddingWithFloat:[RAREUIScreen PLATFORM_PIXELS_2] withFloat:[RAREUIScreen PLATFORM_PIXELS_2] withFloat:[RAREUIScreen PLATFORM_PIXELS_2] withFloat:[RAREUIScreen PLATFORM_PIXELS_2]];
    RAREUIFont *font = [((RAREWindowViewer *) nil_chk(w)) getFont];
    font = [font deriveFontWithInt:[RAREUIFont BOLD] withFloat:[((RAREUIFont *) nil_chk(font)) getSize] - 4];
    RAREUITextIcon *icon = [[RAREUITextIcon alloc] initWithJavaLangCharSequence:value withRAREUIColor:[RAREUIColor WHITE] withRAREUIFont:font withRAREiPlatformBorder:b];
    [icon setForegroundColorWithRAREUIColor:[RAREUIColor WHITE]];
    [icon setSquareWithBoolean:YES];
    [icon setBackgroundColorWithRAREUIColor:[((RAREUIColor *) nil_chk([RAREUIColor GREEN])) alphaWithInt:128]];
    CCPBVOrderManager_pendingOrderCountIcon_ = icon;
  }
  else {
    b = (RAREUILineBorder *) check_class_cast([CCPBVOrderManager_pendingOrderCountIcon_ getBorder], [RAREUILineBorder class]);
    [CCPBVOrderManager_pendingOrderCountIcon_ setTextWithJavaLangCharSequence:value];
  }
  CCPBVOrderManager_lastPendingOrderCount_ = taskCount;
  [((RAREUITextIcon *) nil_chk(CCPBVOrderManager_pendingOrderCountIcon_)) setBorderWithRAREiPlatformBorder:nil];
  [CCPBVOrderManager_pendingOrderCountIcon_ setPaddingWithInt:0 withInt:0];
  int w = [CCPBVOrderManager_pendingOrderCountIcon_ getIconWidth];
  [((RAREUILineBorder *) nil_chk(b)) setCornerArcWithFloat:w];
  [CCPBVOrderManager_pendingOrderCountIcon_ setBorderWithRAREiPlatformBorder:b];
  [CCPBVOrderManager_pendingOrderCountIcon_ setPaddingWithInt:0 withInt:0];
  return CCPBVOrderManager_pendingOrderCountIcon_;
}

+ (void)getSignatureWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  CCPBVOrderManager_SignatureHandler *handler = [[CCPBVOrderManager_SignatureHandler alloc] initWithRAREiFunctionCallback:cb];
  [handler handle];
}

+ (BOOL)isDiscontinuedWithNSString:(NSString *)orderID
                   withJavaUtilMap:(id<JavaUtilMap>)orderStatuses {
  CCPBVOrder_ActionTypeEnum *type = (orderStatuses == nil) ? nil : (CCPBVOrder_ActionTypeEnum *) [orderStatuses getWithId:orderID];
  return (type == nil) ? NO : type == [CCPBVOrder_ActionTypeEnum DISCONTINUED];
}

+ (void)lockingApplication {
  if ((CCPBVOrderManager_editorOrder_ != nil) && (CCPBVOrderManager_showOrderFormCallback_ != nil)) {
    [CCPBVOrderManager_showOrderFormCallback_ finishedWithBoolean:NO withId:[JavaLangBoolean getTRUE]];
  }
  RAREUTJSONObject *patient = [CCPBVUtils getPatient];
  CCPBVOrderManager_demoOrderInfo_ = (patient == nil) ? nil : [patient optWithNSString:CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_];
  CCPBVOrderManager_orderCart_ = (patient == nil) ? nil : [patient optWithNSString:CCPBVOrderManager_ORDER_CART_KEY_];
  CCPBVOrderManager_orderStatuses_ = (patient == nil) ? nil : [patient optWithNSString:CCPBVOrderManager_ORDER_STATUSES_KEY_];
  CCPBVOrderManager_patientForOrders_ = [CCPBVUtils getPatientID];
  CCPBVOrderManager_orderingUser_ = [CCPBVUtils getUserID];
  CCPBVOrderManager_editorOrder_ = nil;
  CCPBVOrderManager_pendingOrderCount_ = 0;
}

+ (void)lockPatientRecord {
}

+ (void)orderChangeFlagStatusWithRARETableViewer:(RARETableViewer *)table
                                         withInt:(int)index
                                     withBoolean:(BOOL)flag {
  RAREUTJSONObject *info = [CCPBVOrderManager getOrdersInfoWithNSString:flag ? @"flagInfo" : @"unflagInfo"];
  if ([((RAREUTJSONObject *) nil_chk(info)) optJSONArrayWithNSString:@"fields"] == nil) {
    [CCPBVOrderManager orderChangeFlagStatusWithRARETableViewer:table withInt:index withBoolean:flag withJavaUtilMap:nil];
  }
  else {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
    JavaUtilArrayList *links = [[JavaUtilArrayList alloc] initWithInt:2];
    id<RAREiContainer> c = [CCPBVFormsManager createFormContainerWithRAREWindowViewer:w withRARERenderableDataItem:row withRAREUTJSONObject:info withJavaUtilMap:nil withJavaUtilArrayList:links];
    id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$3 alloc] initWithRAREiContainer:c withRARETableViewer:table withInt:index withBoolean:flag];
    if ([links isEmpty]) {
      [CCPBVOrderManager yesNoWithRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
    }
    else {
      [CCPBVOrderManager handleLinksWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
    }
  }
}

+ (void)orderChangeFlagStatusWithRARETableViewer:(RARETableViewer *)table
                                         withInt:(int)index
                                     withBoolean:(BOOL)flag
                                 withJavaUtilMap:(id<JavaUtilMap>)data {
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVOrderManager_$4 alloc] initWithRARERenderableDataItem:row withBoolean:flag withJavaUtilMap:data withRARETableViewer:table withRAREWindowViewer:w withInt:index];
  if ([CCPBVOrders showActionWaitMessage]) {
    [w showProgressPopupWithJavaLangCharSequence:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:flag ? @"bv.oe.text.flagging_order" : @"bv.oe.text.unflagging_order"]];
  }
  else {
    [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
  }
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

+ (void)orderChangeHoldStatusWithRARETableViewer:(RARETableViewer *)table
                                         withInt:(int)index
                                     withBoolean:(BOOL)hold {
  RAREUTJSONObject *info = [CCPBVOrderManager getOrdersInfoWithNSString:hold ? @"holdInfo" : @"unholdInfo"];
  if ([((RAREUTJSONObject *) nil_chk(info)) optJSONArrayWithNSString:@"fields"] == nil) {
    [CCPBVOrderManager orderChangeHoldStatusWithRARETableViewer:table withInt:index withBoolean:hold withJavaUtilMap:nil];
  }
  else {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
    JavaUtilArrayList *links = [[JavaUtilArrayList alloc] initWithInt:2];
    id<RAREiContainer> c = [CCPBVFormsManager createFormContainerWithRAREWindowViewer:w withRARERenderableDataItem:row withRAREUTJSONObject:info withJavaUtilMap:nil withJavaUtilArrayList:links];
    id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$5 alloc] initWithRAREiContainer:c withRARETableViewer:table withInt:index withBoolean:hold];
    if ([links isEmpty]) {
      [CCPBVOrderManager yesNoWithRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
    }
    else {
      [CCPBVOrderManager handleLinksWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
    }
  }
}

+ (void)orderChangeHoldStatusWithRARETableViewer:(RARETableViewer *)table
                                         withInt:(int)index
                                     withBoolean:(BOOL)hold
                                 withJavaUtilMap:(id<JavaUtilMap>)data {
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVOrderManager_$6 alloc] initWithRARERenderableDataItem:row withBoolean:hold withJavaUtilMap:data withRARETableViewer:table withRAREWindowViewer:w withInt:index];
  if ([CCPBVOrders showActionWaitMessage]) {
    [w showProgressPopupWithJavaLangCharSequence:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:hold ? @"bv.oe.text.holding_order" : @"bv.oe.text.resuming_order"]];
  }
  else {
    [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
  }
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

+ (void)orderDiscontinueWithRARETableViewer:(RARETableViewer *)table
                                    withInt:(int)index {
  RAREUTJSONObject *info = [CCPBVOrderManager getOrdersInfoWithNSString:@"discontinueInfo"];
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
  BOOL itemfields = [(info == nil) ? nil : [JavaLangBoolean valueOfWithBoolean:[info optBooleanWithNSString:@"hasItemSpecificFields"]] booleanValue];
  if ((info == nil) || (([info optJSONArrayWithNSString:@"fields"] == nil) && !itemfields)) {
    [CCPBVOrderManager orderDiscontinueWithRARETableViewer:table withInt:index withCCPBVOrderFields:nil withJavaUtilMap:nil];
  }
  else if (itemfields) {
    NSString *itemID = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([CCPBVOrders getOrderedItemWithRARERenderableDataItem:row])) getLinkedData], [NSString class]);
    [CCPBVOrderFields getItemDiscontinueFieldsWithNSString:itemID withRAREiFunctionCallback:[[CCPBVOrderManager_$7 alloc] initWithRAREUTJSONObject:info withRARETableViewer:table withInt:index withRARERenderableDataItem:row]];
  }
  else {
    [CCPBVOrderManager orderDiscontinueExWithRARETableViewer:table withInt:index withRARERenderableDataItem:row withRAREUTJSONObject:info];
  }
}

+ (void)orderDiscontinueWithRARETableViewer:(RARETableViewer *)table
                                    withInt:(int)index
                       withCCPBVOrderFields:(CCPBVOrderFields *)fields
                            withJavaUtilMap:(id<JavaUtilMap>)values {
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
  CCPBVOrder *order = [CCPBVOrder createDiscontinuedOrderWithRARERenderableDataItem:row withCCPBVOrderFields:fields withJavaUtilMap:values];
  [CCPBVOrderManager addOrderToCartWithCCPBVOrder:order];
  [((RARERenderableDataItem *) nil_chk(row)) setFontWithRAREUIFont:[((RAREUIFont *) nil_chk([((RAREUIFont *) nil_chk([table getFont])) deriveItalic])) deriveStrikethrough]];
  NSString *color = [((RAREUTJSONObject *) nil_chk([CCPBVOrders statusColors])) optStringWithNSString:@"Discontinued" withNSString:nil];
  if (color == nil) {
    color = [[CCPBVOrders statusColors] optStringWithNSString:@"Stopped" withNSString:nil];
  }
  if (color != nil) {
    [row setForegroundWithRAREUIColor:[RAREUIColorHelper getColorWithNSString:color]];
  }
  else {
    [row setForegroundWithRAREUIColor:nil];
  }
  [row setUserStateFlagWithByte:CCPBVOrders_STOPPED_FLAG];
  [table rowChangedWithInt:index];
  CCPBVOrderManager_lastActionTime_ = [JavaLangSystem currentTimeMillis];
}

+ (void)orderNewWithNSString:(NSString *)type
  withRARERenderableDataItem:(RARERenderableDataItem *)orderItem {
  [CCPBVOrderManager showOrderingScreenWithNSString:type withRARERenderableDataItem:orderItem withBoolean:NO];
}

+ (void)orderRenewWithNSString:(NSString *)type
    withRARERenderableDataItem:(RARERenderableDataItem *)orderItem {
  [CCPBVOrderManager showOrderingScreenWithNSString:type withRARERenderableDataItem:orderItem withBoolean:YES];
}

+ (void)orderRenewAndDiscontinueWithNSString:(NSString *)type
                  withRARERenderableDataItem:(RARERenderableDataItem *)orderItem
                                withNSString:(NSString *)linkedID {
}

+ (void)orderSignWithRARETableViewer:(RARETableViewer *)table
                             withInt:(int)index {
  RAREUTJSONObject *info = [CCPBVOrderManager getOrdersInfoWithNSString:@"signingInfo"];
  if ([((RAREUTJSONObject *) nil_chk(info)) optJSONArrayWithNSString:@"fields"] == nil) {
    [CCPBVOrderManager orderSignExWithRARETableViewer:table withInt:index withJavaUtilMap:nil];
  }
  else {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
    JavaUtilArrayList *links = [[JavaUtilArrayList alloc] initWithInt:2];
    id<RAREiContainer> c = [CCPBVFormsManager createFormContainerWithRAREWindowViewer:w withRARERenderableDataItem:row withRAREUTJSONObject:info withJavaUtilMap:nil withJavaUtilArrayList:links];
    id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$8 alloc] initWithRAREiContainer:c withRARETableViewer:table withInt:index];
    if ([links isEmpty]) {
      [CCPBVOrderManager yesNoWithRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
    }
    else {
      [CCPBVOrderManager handleLinksWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
    }
  }
}

+ (void)orderSignExWithRARETableViewer:(RARETableViewer *)table
                               withInt:(int)index
                       withJavaUtilMap:(id<JavaUtilMap>)values {
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(table)) getWithInt:index];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVOrderManager_$9 alloc] initWithRARERenderableDataItem:row withRARETableViewer:table withJavaUtilMap:values withRAREWindowViewer:w withInt:index];
  if ([CCPBVOrders showActionWaitMessage]) {
    [w showProgressPopupWithJavaLangCharSequence:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.oe.text.signing_order"]];
  }
  else {
    [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
  }
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

+ (void)patientChanged {
  BOOL ok = NO;
  do {
    NSString *s = [CCPBVUtils getPatientID];
    if ((s == nil) || ![s isEqual:CCPBVOrderManager_patientForOrders_]) {
      break;
    }
    s = [CCPBVUtils getUserID];
    if ((s == nil) || ![s isEqual:CCPBVOrderManager_orderingUser_]) {
      break;
    }
    ok = YES;
  }
  while (NO);
  if (ok) {
    RAREUTJSONObject *patient = [CCPBVUtils getPatient];
    (void) [((RAREUTJSONObject *) nil_chk(patient)) putWithNSString:CCPBVOrderManager_ORDER_CART_KEY_ withId:CCPBVOrderManager_orderCart_];
    (void) [patient putWithNSString:CCPBVOrderManager_ORDER_STATUSES_KEY_ withId:CCPBVOrderManager_orderStatuses_];
    (void) [patient putWithNSString:CCPBVOrderManager_DEMO_PATIENT_ORDER_KEY_ withId:CCPBVOrderManager_demoOrderInfo_];
  }
  CCPBVOrderManager_orderCart_ = nil;
  CCPBVOrderManager_orderStatuses_ = nil;
  CCPBVOrderManager_demoOrderInfo_ = nil;
  CCPBVOrderManager_patientForOrders_ = nil;
  CCPBVOrderManager_orderingUser_ = nil;
  RAREUTIdentityArrayList *list = [CCPBVOrderManager getOrderCartWithBoolean:NO];
  CCPBVOrderManager_pendingOrderCount_ = (list == nil) ? 0 : [list size];
  [CCPBVOrderManager updateCartIcon];
}

+ (void)pushOrderEntryViewerWithRAREiViewer:(id<RAREiViewer>)v
                       withJavaLangRunnable:(id<JavaLangRunnable>)r {
  [CCPBVUtils pushViewerWithRAREiViewer:v withRAREiTarget:[((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getTargetWithNSString:@"tabsTarget"] withBoolean:NO withJavaLangRunnable:r];
}

+ (int)removeOrderFromCartWithCCPBVOrder:(CCPBVOrder *)order {
  id<JavaUtilList> cart = [CCPBVOrderManager getOrderCartWithBoolean:YES];
  if ([CCPBVOrderManager removeOrderFromCartExWithJavaUtilList:cart withCCPBVOrder:order]) {
    [CCPBVOrderManager updateCartIcon];
  }
  return CCPBVOrderManager_pendingOrderCount_;
}

+ (void)searchCatalogWithNSString:(NSString *)text
        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:@"/hub/main/util/ordering/catalog"];
  RAREUTJSONObject *o = CCPBVOrderManager_ordersFilter_;
  NSString *type = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"type" withNSString:@"all"];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"/"])) appendWithNSString:type];
  if (![CCPBVUtils isDemo]) {
    if ([((NSString *) nil_chk([CCPBVOrders medicationOrderType])) isEqual:type]) {
      (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"/"])) appendWithNSString:[o optStringWithNSString:@"route" withNSString:@"all"]];
    }
    if ([o optBooleanWithNSString:@"startsWith"]) {
      (void) [sb appendWithNSString:@"?startsWith=true"];
    }
  }
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"/"])) appendWithNSString:text];
  (void) [((RAREWindowViewer *) nil_chk(w)) parseDataLinkWithRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:w withNSString:[sb description] withBoolean:NO] withBoolean:YES withRAREiFunctionCallback:cb];
}

+ (void)showCart {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if (CCPBVOrderManager_cartConfiguration_ == nil) {
    @try {
      (void) [((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithNSString:@"/oe/cart.rml"] withRAREiFunctionCallback:[[CCPBVOrderManager_$10 alloc] init]];
    }
    @catch (JavaLangException *e) {
      [CCPBVUtils handleErrorWithJavaLangThrowable:e];
    }
    return;
  }
  id<RAREiViewer> v = [((RAREWindowViewer *) nil_chk(w)) createViewerWithRAREiWidget:w withRARESPOTWidget:CCPBVOrderManager_cartConfiguration_];
  (void) [((id<RAREiViewer>) nil_chk(v)) showAsDialogWithJavaUtilMap:[JavaUtilCollections singletonMapWithId:@"title" withId:[w getStringWithNSString:@"bv.text.order_cart"]]];
}

+ (void)showFilterDialogWithRAREiWidget:(id<RAREiWidget>)filterValueWidget
                            withBoolean:(BOOL)always {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  BOOL show = always || ([((RAREUTJSONObject *) nil_chk(CCPBVOrderManager_ordersFilter_)) optStringWithNSString:@"type" withNSString:nil] == nil);
  if (!show) {
    [CCPBVOrderManager updateFilterWidgetWithRAREiWidget:filterValueWidget];
    return;
  }
  id<RAREiContainer> viewer = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(w)) createViewerWithRAREiWidget:w withRARESPOTWidget:CCPBVOrderManager_filterConfiguration_], @protocol(RAREiContainer));
  RAREComboBoxWidget *type = (RAREComboBoxWidget *) check_class_cast([((id<RAREiContainer>) nil_chk(viewer)) getWidgetWithNSString:@"type"], [RAREComboBoxWidget class]);
  [((RAREComboBoxWidget *) nil_chk(type)) setAllWithJavaUtilCollection:CCPBVOrderManager_orderTypes_];
  int n = [type indexOfLinkedDataEqualsWithId:[((RAREUTJSONObject *) nil_chk(CCPBVOrderManager_ordersFilter_)) optStringWithNSString:[type getName] withNSString:[CCPBVOrders defaultOrderType]]];
  [type setSelectedIndexWithInt:(n == -1) ? 0 : n];
  RARECheckBoxWidget *startsWith = (RARECheckBoxWidget *) check_class_cast([viewer getWidgetWithNSString:@"startsWith"], [RARECheckBoxWidget class]);
  [startsWith setCheckedWithBoolean:[CCPBVOrderManager_ordersFilter_ optBooleanWithNSString:[((RARECheckBoxWidget *) nil_chk(startsWith)) getName]]];
  RAREListBoxViewer *route = (RAREListBoxViewer *) check_class_cast([viewer getWidgetWithNSString:@"route"], [RAREListBoxViewer class]);
  [((RAREListBoxViewer *) nil_chk(route)) setLinkedDataWithId:CCPBVOrderManager_orderRoutes_];
  ;
  if ([((NSString *) nil_chk([CCPBVOrders medicationOrderType])) isEqual:[type getSelectionDataAsString]]) {
    [route setAllWithJavaUtilCollection:CCPBVOrderManager_orderRoutes_];
    n = [route indexOfLinkedDataEqualsWithId:[CCPBVOrderManager_ordersFilter_ optStringWithNSString:[route getName] withNSString:[CCPBVOrders defaultRoute]]];
    [route setSelectedIndexWithInt:(n == -1) ? 0 : n];
  }
  id<RAREiFunctionCallback> callback = [[CCPBVOrderManager_$11 alloc] initWithRARECheckBoxWidget:startsWith withRAREComboBoxWidget:type withRAREListBoxViewer:route withRAREiContainer:viewer withRAREiWidget:filterValueWidget];
  RAREAlertPanel *p = [RAREAlertPanel okWithRAREiWidget:w withNSString:[viewer getTitle] withId:viewer withRAREiPlatformIcon:nil withNSString:@"bv.button.alert"];
  RAREPushButtonWidget *ok = [((RAREAlertPanel *) nil_chk(p)) getYesOrOkButton];
  [route setEventHandlerWithNSString:[RAREiConstants ATTRIBUTE_ON_DOUBLECLICK] withId:[[CCPBVOrderManager_$12 alloc] initWithRAREPushButtonWidget:ok] withBoolean:YES];
  [p showDialogWithRAREiFunctionCallback:callback];
}

+ (void)showOrderFormWithCCPBVOrder:(CCPBVOrder *)order {
  if (((CCPBVOrder *) nil_chk(order))->actionType_ == [CCPBVOrder_ActionTypeEnum DISCONTINUED]) {
    [CCPBVOrderManager orderDiscontinueExWithCCPBVOrder:order];
    return;
  }
  CCPBVOrderManager_editorOrder_ = order;
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  @try {
    (void) [RAREViewerCreator createViewerWithRAREiWidget:w withRAREActionLink:[[RAREActionLink alloc] initWithNSString:@"oe/order_form.rml"] withRAREiFunctionCallback:[[CCPBVOrderManager_$13 alloc] initWithCCPBVOrder:order withRAREWindowViewer:w]];
  }
  @catch (JavaNetMalformedURLException *e) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:e];
  }
}

+ (void)showOrderFormWithNSString:(NSString *)type
                     withNSString:(NSString *)renewID
       withRARERenderableDataItem:(RARERenderableDataItem *)orderedItem
                     withNSString:(NSString *)fieldsID {
  CCPBVOrder *order = [[CCPBVOrder alloc] initWithNSString:type withCCPBVOrder_ActionTypeEnum:(renewID != nil) ? [CCPBVOrder_ActionTypeEnum RENEWED] : [CCPBVOrder_ActionTypeEnum NEW] withRARERenderableDataItem:orderedItem];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVOrderManager_$14 alloc] initWithNSString:fieldsID withNSString:renewID withCCPBVOrder:order withRAREWindowViewer:w];
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  [w showWaitCursor];
}

+ (void)submitOrdersWithJavaUtilList:(id<JavaUtilList>)orders
           withRAREiFunctionCallback:(id<RAREiFunctionCallback>)notifier {
  if (![CCPBVOrders signatureRequiredForSumbission]) {
    [CCPBVOrderManager submitOrdersWithNSString:nil withJavaUtilList:orders withRAREiFunctionCallback:notifier];
  }
  else {
    id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$15 alloc] initWithRAREiFunctionCallback:notifier withJavaUtilList:orders];
    [CCPBVOrderManager getSignatureWithRAREiFunctionCallback:cb];
  }
}

+ (void)submitOrdersWithNSString:(NSString *)signatureToken
                withJavaUtilList:(id<JavaUtilList>)orders
       withRAREiFunctionCallback:(id<RAREiFunctionCallback>)notifier {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  int len = [((id<JavaUtilList>) nil_chk(orders)) size];
  NSString *s;
  if (len == 1) {
    s = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.oe.text.submitting_order"];
  }
  else {
    s = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.oe.format.submitting_orders" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [RAREUTStringCache valueOfWithInt:len] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  [((RAREWindowViewer *) nil_chk(w)) showProgressPopupWithJavaLangCharSequence:s];
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVOrderManager_$16 alloc] initWithJavaUtilList:orders withRAREWindowViewer:w withRAREiFunctionCallback:notifier] withInt:2000];
}

+ (void)sumbitOrderWithCCPBVOrder:(CCPBVOrder *)order
        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)notifier {
  [CCPBVOrderManager submitOrdersWithJavaUtilList:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ order } count:1 type:[IOSClass classWithClass:[NSObject class]]]] withRAREiFunctionCallback:notifier];
}

+ (void)sumbitOrderCartWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)notifier {
  id<JavaUtilList> cart = [CCPBVOrderManager getOrderCartWithBoolean:NO];
  if ((cart != nil) && ![cart isEmpty]) {
    int len = [cart size];
    JavaUtilArrayList *a = [[JavaUtilArrayList alloc] initWithInt:len];
    for (int i = 0; i < len; i++) {
      CCPBVOrder *o = [cart getWithInt:i];
      if ([((CCPBVOrder *) nil_chk(o)) isComplete]) {
        [a addWithId:o];
      }
    }
    if ([a isEmpty]) {
      if (notifier != nil) {
        [notifier finishedWithBoolean:NO withId:[JavaLangInteger valueOfWithInt:[a size]]];
      }
    }
    else {
      [CCPBVOrderManager submitOrdersWithJavaUtilList:a withRAREiFunctionCallback:notifier];
    }
  }
}

+ (void)testSignature {
  [CCPBVOrderManager getSignatureWithRAREiFunctionCallback:[[CCPBVOrderManager_$17 alloc] init]];
}

+ (void)unlockPatientRecord {
}

+ (void)updateCartIcon {
  [CCPBVOrderManager updateOrderCartTimestamp];
  RAREUIAction *a = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getActionWithNSString:@"bv.action.orders_cart"];
  if (a == nil) {
    return;
  }
  id<RAREiPlatformIcon> ai = [RAREPlatform getResourceAsIconWithNSString:@"bv.icon.cart"];
  id<RAREiPlatformIcon> icon = [CCPBVOrderManager getPendingOrderCountIcon];
  if (icon == nil) {
    icon = ai;
  }
  else {
    if (CCPBVOrderManager_compoundIcon1_ == nil) {
      CCPBVOrderManager_compoundIcon1_ = [[CCPBVUtils_BadgeCompoundIcon alloc] initWithRAREiPlatformIcon:ai withRAREiPlatformIcon:icon];
      CCPBVOrderManager_compoundIcon2_ = [[CCPBVUtils_BadgeCompoundIcon alloc] initWithRAREiPlatformIcon:ai withRAREiPlatformIcon:icon];
    }
    else {
      [CCPBVOrderManager_compoundIcon1_ setSecondIconWithRAREiPlatformIcon:icon];
      [((RAREUICompoundIcon *) nil_chk(CCPBVOrderManager_compoundIcon2_)) setSecondIconWithRAREiPlatformIcon:icon];
    }
    if ([((RAREUIAction *) nil_chk(a)) getIcon] == CCPBVOrderManager_compoundIcon1_) {
      icon = CCPBVOrderManager_compoundIcon2_;
    }
    else {
      icon = CCPBVOrderManager_compoundIcon2_;
    }
  }
  [((RAREUIAction *) nil_chk(a)) setEnabledWithBoolean:icon != ai];
  [a setIconWithRAREiPlatformIcon:nil];
  [a setIconWithRAREiPlatformIcon:icon];
}

+ (void)updateDemoOrderObjectWithNSString:(NSString *)id_
                             withNSString:(NSString *)key
                                   withId:(id)value {
  if ([CCPBVUtils isDemo]) {
    RAREUTJSONObject *o = [CCPBVOrderManager getDemoOrderObjectWithBoolean:YES];
    RAREUTJSONObject *oo = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:id_];
    if (oo == nil) {
      oo = [[RAREUTJSONObject alloc] init];
      (void) [o putWithNSString:id_ withJavaUtilMap:oo];
    }
    (void) [((RAREUTJSONObject *) nil_chk(oo)) putWithNSString:key withId:value];
  }
}

+ (void)updateFilterWidgetWithRAREiWidget:(id<RAREiWidget>)filterValueWidget {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  NSString *type = [((RAREUTJSONObject *) nil_chk(CCPBVOrderManager_ordersFilter_)) optStringWithNSString:@"type"];
  NSString *s = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:[CCPBVOrderManager_ordersFilter_ optBooleanWithNSString:@"startsWith"] ? @"bv.oe.text.that_starts_with" : @"bv.oe.text.that_contains"];
  if ([((NSString *) nil_chk([CCPBVOrders medicationOrderType])) isEqual:type]) {
    [((id<RAREiWidget>) nil_chk(filterValueWidget)) setValueWithId:[w getStringWithNSString:@"bv.oe.format.search_meds_description" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [CCPBVOrderManager_ordersFilter_ optStringWithNSString:@"route_string"], s } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  else {
    [((id<RAREiWidget>) nil_chk(filterValueWidget)) setValueWithId:[w getStringWithNSString:@"bv.oe.format.search_filter_description" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [CCPBVOrderManager_ordersFilter_ optStringWithNSString:@"type_string"], s } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  if ([RAREPlatform hasPhysicalKeyboard]) {
    [((id<RAREiWidget>) nil_chk([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(filterValueWidget)) getFormViewer])) getWidgetWithNSString:@"searchField"])) requestFocus];
  }
}

+ (void)updateOrderCartTimestamp {
  RAREUTJSONObject *o = [CCPBVUtils getPatient];
  RAREUTObjectHolder *oh = (RAREUTObjectHolder *) check_class_cast([((RAREUTJSONObject *) nil_chk(o)) optWithNSString:CCPBVOrderManager_ORDER_CART_KEY_], [RAREUTObjectHolder class]);
  if (oh != nil) {
    oh->source_ = [JavaLangLong valueOfWithLong:[JavaLangSystem currentTimeMillis]];
  }
}

+ (void)yesNoWithRAREWindowViewer:(RAREWindowViewer *)w
             withRAREUTJSONObject:(RAREUTJSONObject *)info
               withRAREiContainer:(id<RAREiContainer>)content
        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  NSString *ok = [((RAREUTJSONObject *) nil_chk(info)) optStringWithNSString:@"okText" withNSString:nil];
  if (ok != nil) {
    ok = [((RAREWindowViewer *) nil_chk(w)) expandStringWithNSString:ok];
  }
  else {
    ok = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"Rare.text.ok"];
  }
  NSString *cancel = [info optStringWithNSString:@"cancelText" withNSString:nil];
  if (cancel != nil) {
    cancel = [((RAREWindowViewer *) nil_chk(w)) expandStringWithNSString:cancel];
  }
  else {
    cancel = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"Rare.text.cancel"];
  }
  NSString *title = [info optStringWithNSString:@"titleText" withNSString:nil];
  if (title != nil) {
    title = [((RAREWindowViewer *) nil_chk(w)) expandStringWithNSString:title];
  }
  else {
    title = [((RAREWindowViewer *) nil_chk(w)) getTitle];
  }
  [((id<RAREiContainer>) nil_chk(content)) setEventHandlerWithNSString:[RAREiConstants ATTRIBUTE_ON_SHOWN] withId:@"class:MainEventHandler#requestFocusIfKeyboardPresent" withBoolean:YES];
  RAREAlertPanel *d = [RAREAlertPanel yesNoWithRAREiWidget:w withNSString:title withId:content withRAREiPlatformIcon:nil withNSString:ok withNSString:cancel withBoolean:NO withNSString:@"bv.button.alert"];
  [((RAREPushButtonWidget *) nil_chk([((RAREAlertPanel *) nil_chk(d)) getYesOrOkButton])) removeActionListenerWithRAREiActionListener:d];
  [((RAREPushButtonWidget *) nil_chk([d getYesOrOkButton])) addActionListenerWithRAREiActionListener:[[CCPBVOrderManager_$18 alloc] initWithRAREiContainer:content withRAREAlertPanel:d withRAREWindowViewer:w]];
  [d showDialogWithRAREiFunctionCallback:cb];
}

+ (void)orderDiscontinueExWithCCPBVOrder:(CCPBVOrder *)order {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  JavaUtilArrayList *links = [[JavaUtilArrayList alloc] initWithInt:2];
  id<RAREiContainer> c = [CCPBVFormsManager createFormContainerWithRAREWindowViewer:w withCCPBVOrder:order withJavaUtilArrayList:links];
  id<JavaUtilMap> values = [((CCPBVOrder *) nil_chk(order)) copyValues];
  id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$19 alloc] initWithCCPBVOrder:order withJavaUtilMap:values withRAREiContainer:c];
  if ([links isEmpty]) {
    [CCPBVOrderManager yesNoWithRAREWindowViewer:w withRAREUTJSONObject:[CCPBVOrderManager getOrdersInfoWithNSString:@"discontinueInfo"] withRAREiContainer:c withRAREiFunctionCallback:cb];
  }
  else {
    [CCPBVOrderManager handleLinksWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:[CCPBVOrderManager getOrdersInfoWithNSString:@"discontinueInfo"] withRAREiContainer:c withRAREiFunctionCallback:cb];
  }
}

+ (void)orderDiscontinueExWithRARETableViewer:(RARETableViewer *)table
                                      withInt:(int)index
                   withRARERenderableDataItem:(RARERenderableDataItem *)row
                         withRAREUTJSONObject:(RAREUTJSONObject *)info {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  JavaUtilArrayList *links = [[JavaUtilArrayList alloc] initWithInt:2];
  id<RAREiContainer> c = [CCPBVFormsManager createFormContainerWithRAREWindowViewer:w withRARERenderableDataItem:row withRAREUTJSONObject:info withJavaUtilMap:nil withJavaUtilArrayList:links];
  id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_$20 alloc] initWithRAREiContainer:c withRARETableViewer:table withInt:index withRAREUTJSONObject:info];
  if ([links isEmpty]) {
    [CCPBVOrderManager yesNoWithRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
  }
  else {
    [CCPBVOrderManager handleLinksWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:c withRAREiFunctionCallback:cb];
  }
}

+ (CCPBVOrderFields *)getOrderFieldsWithNSString:(NSString *)id_
                            withRAREUTJSONObject:(RAREUTJSONObject *)info {
  CCPBVOrderFields *fields = (CCPBVOrderFields *) check_class_cast([((RAREUTJSONObject *) nil_chk(info)) optWithNSString:@"_ORDER_FIELDS"], [CCPBVOrderFields class]);
  if (fields == nil) {
    fields = [[CCPBVOrderFields alloc] initWithNSString:id_ withJavaUtilList:[((RAREUTJSONArray *) nil_chk([info getJSONArrayWithNSString:@"fields"])) getObjectList]];
  }
  return fields;
}

+ (void)handleLinksWithJavaUtilArrayList:(JavaUtilArrayList *)links
                    withRAREWindowViewer:(RAREWindowViewer *)w
                    withRAREUTJSONObject:(RAREUTJSONObject *)info
                      withRAREiContainer:(id<RAREiContainer>)content
               withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<JavaLangRunnable> r = [[CCPBVOrderManager_$21 alloc] initWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:info withRAREiContainer:content withRAREiFunctionCallback:cb];
  [((RAREWindowViewer *) nil_chk(w)) hideWaitCursor];
  (void) [w spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ r } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

+ (void)removeOrdersWithJavaUtilList:(id<JavaUtilList>)orders {
  id<JavaUtilList> cart = [CCPBVOrderManager getOrderCartWithBoolean:NO];
  for (id __strong o in nil_chk(orders)) {
    [CCPBVOrderManager removeOrderFromCartExWithJavaUtilList:cart withCCPBVOrder:(CCPBVOrder *) check_class_cast(o, [CCPBVOrder class])];
  }
  [CCPBVOrderManager updateCartIcon];
}

+ (void)showOrderingScreenWithNSString:(NSString *)type
            withRARERenderableDataItem:(RARERenderableDataItem *)orderItem
                           withBoolean:(BOOL)renew {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVOrderManager_$22 alloc] initWithRAREWindowViewer:w withRARERenderableDataItem:orderItem];
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  [w showWaitCursor];
}

+ (void)emptyOrderCartEx {
  id<JavaUtilList> cart = [CCPBVOrderManager getOrderCartWithBoolean:NO];
  if (cart != nil) {
    [cart clear];
  }
  id<JavaUtilMap> map = [CCPBVOrderManager getOrderStatusesWithBoolean:NO];
  if (map != nil) {
    [map clear];
  }
  CCPBVOrderManager_pendingOrderCount_ = 0;
  CCPBVOrderManager_lastActionTime_ = [JavaLangSystem currentTimeMillis];
}

+ (BOOL)removeOrderFromCartExWithJavaUtilList:(id<JavaUtilList>)cart
                               withCCPBVOrder:(CCPBVOrder *)order {
  if ([((id<JavaUtilList>) nil_chk(cart)) removeWithId:order]) {
    NSString *id_ = ((CCPBVOrder *) nil_chk(order))->linkedOrderID_;
    if (id_ != nil) {
      id<JavaUtilMap> map = [CCPBVOrderManager getOrderStatusesWithBoolean:NO];
      if (map != nil) {
        (void) [map removeWithId:id_];
      }
      RARETableViewer *table = (RARETableViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"ordersTable"], [RARETableViewer class]);
      if (table != nil) {
        int len = [table getRowCount];
        for (int i = 0; i < len; i++) {
          RARERenderableDataItem *row = [table getWithInt:i];
          if ([id_ isEqual:[((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(row)) getWithInt:0])) getLinkedData]]) {
            [row unsetUserStateFlagWithByte:CCPBVOrders_STOPPED_FLAG];
            [row setFontWithRAREUIFont:nil];
            [row setForegroundWithRAREUIColor:nil];
            [table rowChangedWithInt:i];
            break;
          }
        }
        [table refreshItems];
      }
    }
    CCPBVOrderManager_pendingOrderCount_--;
    if (CCPBVOrderManager_pendingOrderCount_ < 0) {
      CCPBVOrderManager_pendingOrderCount_ = 0;
    }
    return YES;
  }
  return NO;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL },
    { "canChangePatientOrExitWithBoolean:withCCPBVActionPath:", NULL, "Z", 0x9, NULL },
    { "getDemoOrderObjectWithBoolean:", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "getOrderBeingEdited", NULL, "LCCPBVOrder", 0x9, NULL },
    { "getOrderCartWithBoolean:", NULL, "LRAREUTIdentityArrayList", 0x9, NULL },
    { "getOrdersFilter", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "getOrdersInfoWithNSString:", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "getOrderStatusesWithBoolean:", NULL, "LJavaUtilMap", 0x9, NULL },
    { "getPendingOrderCountIcon", NULL, "LRAREiPlatformIcon", 0x9, NULL },
    { "isDiscontinuedWithNSString:withJavaUtilMap:", NULL, "Z", 0x9, NULL },
    { "orderDiscontinueExWithCCPBVOrder:", NULL, "V", 0xc, NULL },
    { "orderDiscontinueExWithRARETableViewer:withInt:withRARERenderableDataItem:withRAREUTJSONObject:", NULL, "V", 0xc, NULL },
    { "getOrderFieldsWithNSString:withRAREUTJSONObject:", NULL, "LCCPBVOrderFields", 0xa, NULL },
    { "handleLinksWithJavaUtilArrayList:withRAREWindowViewer:withRAREUTJSONObject:withRAREiContainer:withRAREiFunctionCallback:", NULL, "V", 0xa, NULL },
    { "removeOrdersWithJavaUtilList:", NULL, "V", 0xa, NULL },
    { "showOrderingScreenWithNSString:withRARERenderableDataItem:withBoolean:", NULL, "V", 0xa, NULL },
    { "emptyOrderCartEx", NULL, "V", 0x8, NULL },
    { "removeOrderFromCartExWithJavaUtilList:withCCPBVOrder:", NULL, "Z", 0x8, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ORDER_CART_KEY_", NULL, 0x19, "LNSString" },
    { "ORDER_STATUSES_KEY_", NULL, 0x19, "LNSString" },
    { "cachedLists_", NULL, 0xc, "LRAREUTObjectCache" },
    { "pendingOrderCount_", NULL, 0xa, "I" },
    { "lastPendingOrderCount_", NULL, 0xa, "I" },
    { "pendingOrderCountIcon_", NULL, 0xa, "LRAREUITextIcon" },
    { "compoundIcon1_", NULL, 0xa, "LRAREUICompoundIcon" },
    { "compoundIcon2_", NULL, 0xa, "LRAREUICompoundIcon" },
    { "DEMO_PATIENT_ORDER_KEY_", NULL, 0x9, "LNSString" },
    { "DEMO_ORDER_STATUS_FLAGS_KEY_", NULL, 0x9, "LNSString" },
    { "ordersFilter_", NULL, 0xa, "LRAREUTJSONObject" },
    { "filterConfiguration_", NULL, 0xa, "LRARESPOTViewer" },
    { "cartConfiguration_", NULL, 0xa, "LRARESPOTViewer" },
    { "orderRoutes_", NULL, 0xa, "LJavaUtilList" },
    { "orderTypes_", NULL, 0xa, "LJavaUtilList" },
    { "editorOrder_", NULL, 0xa, "LCCPBVOrder" },
    { "lastActionTime_", NULL, 0xa, "J" },
    { "orderCart_", NULL, 0xa, "LNSObject" },
    { "demoOrderInfo_", NULL, 0xa, "LNSObject" },
    { "orderStatuses_", NULL, 0xa, "LNSObject" },
    { "orderingUser_", NULL, 0xa, "LNSString" },
    { "patientForOrders_", NULL, 0xa, "LNSString" },
    { "showOrderFormCallback_", NULL, 0xa, "LCCPBVOrderManager_ShowOrderFormCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager = { "OrderManager", "com.sparseware.bellavista", NULL, 0x1, 18, methods, 23, fields, 0, NULL};
  return &_CCPBVOrderManager;
}

@end
@implementation CCPBVOrderManager_WidgetDataLink

- (id)initWithRAREiWidget:(id<RAREiWidget>)list
       withRAREActionLink:(RAREActionLink *)link {
  if (self = [super init]) {
    self->list_ = list;
    self->link_ = link;
  }
  return self;
}

- (void)handle {
  (void) [((id<RAREiWidget>) nil_chk(list_)) setDataLinkWithRAREActionLink:link_ withBoolean:NO];
}

- (void)copyAllFieldsTo:(CCPBVOrderManager_WidgetDataLink *)other {
  [super copyAllFieldsTo:other];
  other->link_ = link_;
  other->list_ = list_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "list_", NULL, 0x0, "LRAREiWidget" },
    { "link_", NULL, 0x0, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_WidgetDataLink = { "WidgetDataLink", "com.sparseware.bellavista", "OrderManager", 0x9, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVOrderManager_WidgetDataLink;
}

@end
@implementation CCPBVOrderManager_GetOrderSentencesTask

- (id)initWithCCPBVOrder:(CCPBVOrder *)order {
  if (self = [super init]) {
    self->order_ = order;
  }
  return self;
}

- (id)compute {
  @try {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    sentences_ = [((RAREWindowViewer *) nil_chk(w)) parseDataLinkWithRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:w withNSString:[NSString stringWithFormat:@"/hub/main/util/ordering/sentences/%@", [((CCPBVOrder *) nil_chk(order_)) getOrderedItemID]] withBoolean:NO] withBoolean:NO];
    if ((sentences_ != nil) && [sentences_ isEmpty]) {
      sentences_ = nil;
    }
    return nil;
  }
  @catch (JavaIoFileNotFoundException *e) {
    return nil;
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREWindowViewer *) nil_chk(w)) hideWaitCursor];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else if (sentences_ != nil) {
    CCPBVPickList *pl = [[CCPBVPickList alloc] initWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.oe.text.select_order_sentence"] withJavaUtilList:sentences_];
    [pl setShowNoneButtonWithBoolean:YES withNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.oe.text.no_sentence"]];
    [pl setOkButtonTextWithNSString:[w getStringWithNSString:@"Rare.text.ok"]];
    [pl setSupportListDblClickWithBoolean:YES];
    [pl setRightAlignButtonsWithBoolean:NO];
    [pl showWithRAREiFunctionCallback:self];
  }
  else {
    [CCPBVOrderManager showOrderFormWithCCPBVOrder:order_];
  }
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (!canceled) {
    if (returnValue == nil) {
      [CCPBVOrderManager showOrderFormWithCCPBVOrder:order_];
    }
    else {
      RAREWindowViewer *w = [RAREPlatform getWindowViewer];
      RAREaWorkerTask *task = [[CCPBVOrderManager_GetOrderSentencesTask_$1 alloc] initWithCCPBVOrderManager_GetOrderSentencesTask:self withId:returnValue withRAREWindowViewer:w];
      (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      [w showWaitCursor];
    }
  }
}

- (void)copyAllFieldsTo:(CCPBVOrderManager_GetOrderSentencesTask *)other {
  [super copyAllFieldsTo:other];
  other->order_ = order_;
  other->sentences_ = sentences_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "order_", NULL, 0x0, "LCCPBVOrder" },
    { "sentences_", NULL, 0x0, "LJavaUtilList" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_GetOrderSentencesTask = { "GetOrderSentencesTask", "com.sparseware.bellavista", "OrderManager", 0x8, 1, methods, 2, fields, 0, NULL};
  return &_CCPBVOrderManager_GetOrderSentencesTask;
}

@end
@implementation CCPBVOrderManager_GetOrderSentencesTask_$1

- (id)compute {
  @try {
    NSString *id_ = (NSString *) check_class_cast([((RARERenderableDataItem *) check_class_cast(val$returnValue_, [RARERenderableDataItem class])) getLinkedData], [NSString class]);
    return [CCPBVOrderFields getFieldValuesWithNSString:[NSString stringWithFormat:@"/hub/main/util/ordering/sentence/%@.json", id_]];
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else {
    ((CCPBVOrder *) nil_chk(this$0_->order_))->orderValues_ = (id<JavaUtilMap>) check_protocol_cast(result, @protocol(JavaUtilMap));
    [CCPBVOrderManager showOrderFormWithCCPBVOrder:this$0_->order_];
  }
}

- (id)initWithCCPBVOrderManager_GetOrderSentencesTask:(CCPBVOrderManager_GetOrderSentencesTask *)outer$
                                               withId:(id)capture$0
                                 withRAREWindowViewer:(RAREWindowViewer *)capture$1 {
  this$0_ = outer$;
  val$returnValue_ = capture$0;
  val$w_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVOrderManager_GetOrderSentencesTask" },
    { "val$returnValue_", NULL, 0x1012, "LNSObject" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_GetOrderSentencesTask_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$GetOrderSentencesTask", 0x8000, 1, methods, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_GetOrderSentencesTask_$1;
}

@end
@implementation CCPBVOrderManager_ShowOrderFormCallback

- (id)initWithRAREiContainer:(id<RAREiContainer>)viewer
              withCCPBVOrder:(CCPBVOrder *)order
                 withBoolean:(BOOL)update {
  if (self = [super init]) {
    self->viewer_ = viewer;
    self->order_ = order;
    self->update_ = update;
    if (update) {
      values_ = [((CCPBVOrder *) nil_chk(order)) copyValues];
    }
    [((CCPBVOrder *) nil_chk(order)) setDirtyWithBoolean:NO];
    (void) [CCPBVOrderManager setShowOrderFormCallback:self];
  }
  return self;
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  (void) [CCPBVOrderManager setShowOrderFormCallback:nil];
  RAREWindowViewer *w = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getTop];
  BOOL check = !update_ || [((CCPBVOrder *) nil_chk(order_)) isDirty];
  if (check && (canceled || [((JavaLangBoolean *) nil_chk([JavaLangBoolean getFALSE])) isEqual:returnValue])) {
    if ([CCPBVOrders verifyOrderEntryCancel] || canceled) {
      id<RAREiFunctionCallback> cb = [[CCPBVOrderManager_ShowOrderFormCallback_$1 alloc] initWithCCPBVOrderManager_ShowOrderFormCallback:self];
      [w yesNoWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:update_ ? @"bv.oe.text.verify_cancel_edits" : @"bv.oe.text.verify_cancel_order"] withRAREiFunctionCallback:cb];
    }
    else {
      [((CCPBVOrder *) nil_chk(order_)) setDirtyWithBoolean:NO];
      [CCPBVUtils popViewerStackWithBoolean:YES];
      [((id<RAREiContainer>) nil_chk(viewer_)) dispose];
      viewer_ = nil;
      (void) [CCPBVOrderManager setEditorOrder:nil];
      if (update_) {
        order_->orderValues_ = values_;
      }
    }
  }
  else {
    [((CCPBVOrder *) nil_chk(order_)) setDirtyWithBoolean:NO];
    [CCPBVUtils popViewerStackWithBoolean:YES];
    [((id<RAREiContainer>) nil_chk(viewer_)) dispose];
    viewer_ = nil;
    (void) [CCPBVOrderManager setEditorOrder:nil];
    [order_ updateDirectionsItem];
    if (!update_) {
      [CCPBVOrderManager addOrderToCartWithCCPBVOrder:order_];
    }
  }
}

- (void)copyAllFieldsTo:(CCPBVOrderManager_ShowOrderFormCallback *)other {
  [super copyAllFieldsTo:other];
  other->order_ = order_;
  other->update_ = update_;
  other->values_ = values_;
  other->viewer_ = viewer_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "viewer_", NULL, 0x0, "LRAREiContainer" },
    { "order_", NULL, 0x0, "LCCPBVOrder" },
    { "update_", NULL, 0x0, "Z" },
    { "values_", NULL, 0x0, "LJavaUtilMap" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_ShowOrderFormCallback = { "ShowOrderFormCallback", "com.sparseware.bellavista", "OrderManager", 0x8, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVOrderManager_ShowOrderFormCallback;
}

@end
@implementation CCPBVOrderManager_ShowOrderFormCallback_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
    if (this$0_->update_) {
      ((CCPBVOrder *) nil_chk(this$0_->order_))->orderValues_ = this$0_->values_;
    }
    [((CCPBVOrder *) nil_chk(this$0_->order_)) setDirtyWithBoolean:NO];
    [CCPBVUtils popViewerStackWithBoolean:YES];
    [((id<RAREiContainer>) nil_chk(this$0_->viewer_)) dispose];
    this$0_->viewer_ = nil;
    (void) [CCPBVOrderManager setEditorOrder:nil];
  }
}

- (id)initWithCCPBVOrderManager_ShowOrderFormCallback:(CCPBVOrderManager_ShowOrderFormCallback *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVOrderManager_ShowOrderFormCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_ShowOrderFormCallback_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$ShowOrderFormCallback", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_ShowOrderFormCallback_$1;
}

@end
@implementation CCPBVOrderManager_SignatureHandler

- (id)initWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (self = [super init]) {
    self->callback_SignatureHandler_ = cb;
  }
  return self;
}

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  signature_ = [((RARETextFieldWidget *) nil_chk(field_)) getValueAsString];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if ([((NSString *) nil_chk(signature_)) sequenceLength] == 0) {
    [((RAREWindowViewer *) nil_chk(w)) buzz];
    return;
  }
  [w showProgressPopupWithJavaLangCharSequence:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.verifying_action"]];
  (void) [w spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (id)compute {
  @try {
    id<JavaUtilMap> data = [JavaUtilCollections singletonMapWithId:@"signature" withId:signature_];
    if ([CCPBVUtils isDemo]) {
      data = nil;
    }
    return [CCPBVUtils getContentAsJSONWithNSString:@"/hub/main/account/validate_signature" withJavaUtilMap:data withBoolean:NO];
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREWindowViewer *) nil_chk(w)) hideProgressPopup];
  if (!([result isKindOfClass:[JavaLangThrowable class]])) {
    RAREUTJSONObject *o = (RAREUTJSONObject *) check_class_cast(result, [RAREUTJSONObject class]);
    if (![((RAREUTJSONObject *) nil_chk(o)) getBooleanWithNSString:@"success"]) {
      NSString *s = [o optStringWithNSString:@"errorMessage" withNSString:[w getStringWithNSString:@"bv.oe.text.signature_code"]];
      [((RARELabelWidget *) nil_chk(statusLabel_)) setTextWithJavaLangCharSequence:s];
      [w buzz];
      return;
    }
    result = [o optStringWithNSString:@"token"];
  }
  id<RAREiFunctionCallback> cb = callback_SignatureHandler_;
  [((RAREAlertPanel *) nil_chk(panel_)) cancel];
  panel_ = nil;
  field_ = nil;
  statusLabel_ = nil;
  signature_ = nil;
  callback_SignatureHandler_ = nil;
  [((id<RAREiFunctionCallback>) nil_chk(cb)) finishedWithBoolean:NO withId:result];
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (callback_SignatureHandler_ != nil) {
    id<RAREiFunctionCallback> cb = callback_SignatureHandler_;
    field_ = nil;
    statusLabel_ = nil;
    signature_ = nil;
    callback_SignatureHandler_ = nil;
    [cb finishedWithBoolean:YES withId:nil];
  }
}

- (void)handle {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RARESPOTPasswordField *cfg = (RARESPOTPasswordField *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"PasswordField" withNSString:@"bv.passwordfield.signature"], [RARESPOTPasswordField class]);
  field_ = (RARETextFieldWidget *) check_class_cast([w createWidgetWithRARESPOTWidget:cfg], [RARETextFieldWidget class]);
  NSString *title = [w getStringWithNSString:@"bv.oe.text.signature_title"];
  NSString *prompt = [w getStringWithNSString:@"bv.oe.text.signature_prompt"];
  panel_ = [RAREAlertPanel promptWithRAREiWidget:w withNSString:title withNSString:prompt withId:field_ withRAREiPlatformIcon:nil withNSString:@"bv.button.alert"];
  statusLabel_ = [((RAREAlertPanel *) nil_chk(panel_)) addStatusLabel];
  RAREPushButtonWidget *ok = [panel_ getYesOrOkButton];
  [((RAREPushButtonWidget *) nil_chk(ok)) removeActionListenerWithRAREiActionListener:panel_];
  [ok addActionListenerWithRAREiActionListener:self];
  [((RARETextFieldWidget *) nil_chk(field_)) addActionListenerWithRAREiActionListener:[[CCPBVOrderManager_SignatureHandler_$1 alloc] initWithRAREPushButtonWidget:ok]];
  [panel_ showDialogWithRAREiFunctionCallback:self];
}

- (void)copyAllFieldsTo:(CCPBVOrderManager_SignatureHandler *)other {
  [super copyAllFieldsTo:other];
  other->callback_SignatureHandler_ = callback_SignatureHandler_;
  other->field_ = field_;
  other->panel_ = panel_;
  other->signature_ = signature_;
  other->statusLabel_ = statusLabel_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "field_", NULL, 0x0, "LRARETextFieldWidget" },
    { "statusLabel_", NULL, 0x0, "LRARELabelWidget" },
    { "panel_", NULL, 0x0, "LRAREAlertPanel" },
    { "callback_SignatureHandler_", "callback", 0x0, "LRAREiFunctionCallback" },
    { "signature_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_SignatureHandler = { "SignatureHandler", "com.sparseware.bellavista", "OrderManager", 0x8, 1, methods, 5, fields, 0, NULL};
  return &_CCPBVOrderManager_SignatureHandler;
}

@end
@implementation CCPBVOrderManager_SignatureHandler_$1

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [((RAREPushButtonWidget *) nil_chk(val$ok_)) click];
}

- (id)initWithRAREPushButtonWidget:(RAREPushButtonWidget *)capture$0 {
  val$ok_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$ok_", NULL, 0x1012, "LRAREPushButtonWidget" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_SignatureHandler_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$SignatureHandler", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_SignatureHandler_$1;
}

@end
@implementation CCPBVOrderManager_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (canceled || (returnValue == nil)) {
    return;
  }
  if ([returnValue isKindOfClass:[JavaLangException class]]) {
    [((RAREWindowViewer *) nil_chk(val$w_)) handleExceptionWithJavaLangThrowable:(JavaLangException *) check_class_cast(returnValue, [JavaLangException class])];
  }
  if ([((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
    [CCPBVOrderManager showCart];
  }
  else {
    [CCPBVOrderManager emptyOrderCartEx];
    [CCPBVOrderManager updateCartIcon];
    if (!val$exit_) {
      [CCPBVPatientSelect changePatientWithRAREiWidget:val$w_ withCCPBVActionPath:val$path_];
    }
    else {
      [CCPBVUtils exitEx];
    }
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
                   withBoolean:(BOOL)capture$1
           withCCPBVActionPath:(CCPBVActionPath *)capture$2 {
  val$w_ = capture$0;
  val$exit_ = capture$1;
  val$path_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$exit_", NULL, 0x1012, "Z" },
    { "val$path_", NULL, 0x1012, "LCCPBVActionPath" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$1 = { "$1", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_$1;
}

@end
@implementation CCPBVOrderManager_$2

- (id)compute {
  @try {
    RAREActionLink *l = [[RAREActionLink alloc] initWithNSString:val$href_];
    return [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) parseDataLinkWithRAREActionLink:l withBoolean:NO];
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  if ([result isKindOfClass:[JavaLangException class]]) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:YES withId:result];
  }
  else {
    id<JavaUtilList> list = (id<JavaUtilList>) check_protocol_cast(result, @protocol(JavaUtilList));
    if ([CCPBVOrderManager cachedLists] == nil) {
      (void) [CCPBVOrderManager setCachedLists:[[RAREUTObjectCache alloc] init]];
      [[CCPBVOrderManager cachedLists] setPurgeInlineWithBoolean:YES];
      [[CCPBVOrderManager cachedLists] setStrongReferencesWithBoolean:YES];
      [[CCPBVOrderManager cachedLists] setBufferSizeWithInt:10];
    }
    (void) [((RAREUTObjectCache *) nil_chk([CCPBVOrderManager cachedLists])) putWithId:val$name_ withId:list];
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:result];
  }
}

- (id)initWithNSString:(NSString *)capture$0
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$1
          withNSString:(NSString *)capture$2 {
  val$href_ = capture$0;
  val$cb_ = capture$1;
  val$name_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$href_", NULL, 0x1012, "LNSString" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
    { "val$name_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$2 = { "$2", "com.sparseware.bellavista", "OrderManager", 0x8000, 1, methods, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_$2;
}

@end
@implementation CCPBVOrderManager_$3

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  @try {
    if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
      RAREFormViewer *fv = (RAREFormViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(val$c_)) getWidgetWithNSString:@"formFields"], [RAREFormViewer class]);
      [CCPBVOrderManager orderChangeFlagStatusWithRARETableViewer:val$table_ withInt:val$index_ withBoolean:val$flag_ withJavaUtilMap:[((RAREFormViewer *) nil_chk(fv)) getHTTPValuesHash]];
    }
  }
  @finally {
    [((id<RAREiContainer>) nil_chk(val$c_)) dispose];
  }
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)capture$0
         withRARETableViewer:(RARETableViewer *)capture$1
                     withInt:(int)capture$2
                 withBoolean:(BOOL)capture$3 {
  val$c_ = capture$0;
  val$table_ = capture$1;
  val$index_ = capture$2;
  val$flag_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$c_", NULL, 0x1012, "LRAREiContainer" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$index_", NULL, 0x1012, "I" },
    { "val$flag_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$3 = { "$3", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVOrderManager_$3;
}

@end
@implementation CCPBVOrderManager_$4

- (id)compute {
  NSString *id_ = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(val$row_)) getWithInt:0])) getLinkedData], [NSString class]);
  NSString *status = nil;
  if (![CCPBVUtils isDemo]) {
    @try {
      RAREUTJSONObject *o = [CCPBVUtils getContentAsJSONWithNSString:[NSString stringWithFormat:@"/hub/main/orders/%@%@", (val$flag_ ? @"flag/" : @"unflag/"), id_] withJavaUtilMap:val$data_ withBoolean:YES];
      if ([((RAREUTJSONObject *) nil_chk(o)) optBooleanWithNSString:@"success"]) {
        status = [o optStringWithNSString:@"statusMessage" withNSString:status];
      }
      else {
        NSString *s = [o optStringWithNSString:@"errorMessage" withNSString:nil];
        if (s == nil) {
          s = [RAREPlatform getResourceAsStringWithNSString:val$flag_ ? @"bv.oe.text.flag_failed" : @"bv.oe.text.unflag_failed"];
        }
        else {
          s = [((RARETableViewer *) nil_chk(val$table_)) expandStringWithNSString:s];
        }
        return [[CCPBVMessageException alloc] initWithNSString:s];
      }
    }
    @catch (JavaLangException *e) {
      return e;
    }
  }
  if (val$flag_) {
    [val$row_ setUserStateFlagWithByte:CCPBVOrders_FLAGGED_FLAG];
  }
  else {
    [val$row_ unsetUserStateFlagWithByte:CCPBVOrders_FLAGGED_FLAG];
  }
  int istatus = [val$row_ getUserStateFlags];
  [CCPBVOrders updateStatusIconWithRARERenderableDataItem:val$row_ withRARERenderableDataItem:[val$row_ getWithInt:0] withInt:istatus];
  if ([CCPBVUtils isDemo]) {
    [CCPBVOrderManager updateDemoOrderObjectWithNSString:id_ withNSString:[CCPBVOrderManager DEMO_ORDER_STATUS_FLAGS_KEY] withId:[JavaLangInteger valueOfWithInt:istatus]];
  }
  (*[CCPBVOrderManager lastActionTimeRef]) = [JavaLangSystem currentTimeMillis];
  return (status == nil) ? nil : [((RAREWindowViewer *) nil_chk(val$w_)) expandStringWithNSString:status];
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else if (![((RARETableViewer *) nil_chk(val$table_)) isDisposed]) {
    if (result != nil) {
      [RAREUINotifier showMessageWithNSString:(NSString *) check_class_cast(result, [NSString class])];
    }
    [val$table_ rowChangedWithInt:val$index_];
  }
}

- (id)initWithRARERenderableDataItem:(RARERenderableDataItem *)capture$0
                         withBoolean:(BOOL)capture$1
                     withJavaUtilMap:(id<JavaUtilMap>)capture$2
                 withRARETableViewer:(RARETableViewer *)capture$3
                withRAREWindowViewer:(RAREWindowViewer *)capture$4
                             withInt:(int)capture$5 {
  val$row_ = capture$0;
  val$flag_ = capture$1;
  val$data_ = capture$2;
  val$table_ = capture$3;
  val$w_ = capture$4;
  val$index_ = capture$5;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$row_", NULL, 0x1012, "LRARERenderableDataItem" },
    { "val$flag_", NULL, 0x1012, "Z" },
    { "val$data_", NULL, 0x1012, "LJavaUtilMap" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$index_", NULL, 0x1012, "I" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$4 = { "$4", "com.sparseware.bellavista", "OrderManager", 0x8000, 1, methods, 6, fields, 0, NULL};
  return &_CCPBVOrderManager_$4;
}

@end
@implementation CCPBVOrderManager_$5

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  @try {
    if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
      RAREFormViewer *fv = (RAREFormViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(val$c_)) getWidgetWithNSString:@"formFields"], [RAREFormViewer class]);
      [CCPBVOrderManager orderChangeHoldStatusWithRARETableViewer:val$table_ withInt:val$index_ withBoolean:val$hold_ withJavaUtilMap:[((RAREFormViewer *) nil_chk(fv)) getHTTPValuesHash]];
    }
  }
  @finally {
    [((id<RAREiContainer>) nil_chk(val$c_)) dispose];
  }
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)capture$0
         withRARETableViewer:(RARETableViewer *)capture$1
                     withInt:(int)capture$2
                 withBoolean:(BOOL)capture$3 {
  val$c_ = capture$0;
  val$table_ = capture$1;
  val$index_ = capture$2;
  val$hold_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$c_", NULL, 0x1012, "LRAREiContainer" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$index_", NULL, 0x1012, "I" },
    { "val$hold_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$5 = { "$5", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVOrderManager_$5;
}

@end
@implementation CCPBVOrderManager_$6

- (id)compute {
  NSString *id_ = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(val$row_)) getWithInt:0])) getLinkedData], [NSString class]);
  NSString *status = nil;
  if (![CCPBVUtils isDemo]) {
    @try {
      RAREUTJSONObject *o = [CCPBVUtils getContentAsJSONWithNSString:[NSString stringWithFormat:@"/hub/main/orders/%@%@", (val$hold_ ? @"hold/" : @"unhold/"), id_] withJavaUtilMap:val$data_ withBoolean:YES];
      if ([((RAREUTJSONObject *) nil_chk(o)) optBooleanWithNSString:@"success"]) {
        status = [o optStringWithNSString:@"statusMessage" withNSString:status];
      }
      else {
        NSString *s = [o optStringWithNSString:@"errorMessage" withNSString:nil];
        if (s == nil) {
          s = [RAREPlatform getResourceAsStringWithNSString:val$hold_ ? @"bv.oe.text.hold_failed" : @"bv.oe.text.unhold_failed"];
        }
        else {
          s = [((RARETableViewer *) nil_chk(val$table_)) expandStringWithNSString:s];
        }
        return [[CCPBVMessageException alloc] initWithNSString:s];
      }
    }
    @catch (JavaLangException *e) {
      return e;
    }
  }
  if (val$hold_) {
    [val$row_ setUserStateFlagWithByte:CCPBVOrders_ONHOLD_FLAG];
  }
  else {
    [val$row_ unsetUserStateFlagWithByte:CCPBVOrders_ONHOLD_FLAG];
  }
  int istatus = [val$row_ getUserStateFlags];
  [CCPBVOrders updateStatusIconWithRARERenderableDataItem:val$row_ withRARERenderableDataItem:[val$row_ getWithInt:0] withInt:istatus];
  if ([CCPBVUtils isDemo]) {
    [CCPBVOrderManager updateDemoOrderObjectWithNSString:id_ withNSString:[CCPBVOrderManager DEMO_ORDER_STATUS_FLAGS_KEY] withId:[JavaLangInteger valueOfWithInt:istatus]];
  }
  (*[CCPBVOrderManager lastActionTimeRef]) = [JavaLangSystem currentTimeMillis];
  return (status == nil) ? nil : [((RAREWindowViewer *) nil_chk(val$w_)) expandStringWithNSString:status];
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else if (![((RARETableViewer *) nil_chk(val$table_)) isDisposed]) {
    if (result != nil) {
      [RAREUINotifier showMessageWithNSString:(NSString *) check_class_cast(result, [NSString class])];
    }
    [val$table_ rowChangedWithInt:val$index_];
  }
}

- (id)initWithRARERenderableDataItem:(RARERenderableDataItem *)capture$0
                         withBoolean:(BOOL)capture$1
                     withJavaUtilMap:(id<JavaUtilMap>)capture$2
                 withRARETableViewer:(RARETableViewer *)capture$3
                withRAREWindowViewer:(RAREWindowViewer *)capture$4
                             withInt:(int)capture$5 {
  val$row_ = capture$0;
  val$hold_ = capture$1;
  val$data_ = capture$2;
  val$table_ = capture$3;
  val$w_ = capture$4;
  val$index_ = capture$5;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$row_", NULL, 0x1012, "LRARERenderableDataItem" },
    { "val$hold_", NULL, 0x1012, "Z" },
    { "val$data_", NULL, 0x1012, "LJavaUtilMap" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$index_", NULL, 0x1012, "I" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$6 = { "$6", "com.sparseware.bellavista", "OrderManager", 0x8000, 1, methods, 6, fields, 0, NULL};
  return &_CCPBVOrderManager_$6;
}

@end
@implementation CCPBVOrderManager_$7

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else {
    id<JavaUtilList> fields = (id<JavaUtilList>) check_protocol_cast(returnValue, @protocol(JavaUtilList));
    if (fields == nil) {
      fields = [((RAREUTJSONArray *) nil_chk([((RAREUTJSONObject *) nil_chk(val$info_)) optJSONArrayWithNSString:@"fields"])) getObjectList];
    }
    [CCPBVOrderManager orderDiscontinueExWithRARETableViewer:val$table_ withInt:val$index_ withRARERenderableDataItem:val$row_ withRAREUTJSONObject:val$info_];
  }
}

- (id)initWithRAREUTJSONObject:(RAREUTJSONObject *)capture$0
           withRARETableViewer:(RARETableViewer *)capture$1
                       withInt:(int)capture$2
    withRARERenderableDataItem:(RARERenderableDataItem *)capture$3 {
  val$info_ = capture$0;
  val$table_ = capture$1;
  val$index_ = capture$2;
  val$row_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$info_", NULL, 0x1012, "LRAREUTJSONObject" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$index_", NULL, 0x1012, "I" },
    { "val$row_", NULL, 0x1012, "LRARERenderableDataItem" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$7 = { "$7", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVOrderManager_$7;
}

@end
@implementation CCPBVOrderManager_$8

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  @try {
    if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
      RAREFormViewer *fv = (RAREFormViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(val$c_)) getWidgetWithNSString:@"formFields"], [RAREFormViewer class]);
      [CCPBVOrderManager orderSignExWithRARETableViewer:val$table_ withInt:val$index_ withJavaUtilMap:[((RAREFormViewer *) nil_chk(fv)) getHTTPValuesHash]];
    }
  }
  @finally {
    [((id<RAREiContainer>) nil_chk(val$c_)) dispose];
  }
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)capture$0
         withRARETableViewer:(RARETableViewer *)capture$1
                     withInt:(int)capture$2 {
  val$c_ = capture$0;
  val$table_ = capture$1;
  val$index_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$c_", NULL, 0x1012, "LRAREiContainer" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$index_", NULL, 0x1012, "I" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$8 = { "$8", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_$8;
}

@end
@implementation CCPBVOrderManager_$9

- (id)compute {
  NSString *id_ = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(val$row_)) getWithInt:0])) getLinkedData], [NSString class]);
  NSString *status = nil;
  if (![CCPBVUtils isDemo]) {
    @try {
      RAREActionLink *l = [CCPBVUtils createLinkWithRAREiWidget:val$table_ withNSString:[NSString stringWithFormat:@"/hub/main/orders/sign/%@", id_]];
      NSString *s;
      if (val$values_ != nil) {
        [((RAREActionLink *) nil_chk(l)) setRequestEncodingWithRAREActionLink_RequestEncodingEnum:[RAREActionLink_RequestEncodingEnum JSON]];
        s = [l sendFormDataWithRAREiWidget:val$table_ withJavaUtilMap:val$values_];
      }
      else {
        s = [((RAREActionLink *) nil_chk(l)) getContentAsString];
      }
      RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithNSString:s];
      if ([o optBooleanWithNSString:@"success"]) {
        status = [o optStringWithNSString:@"statusMessage" withNSString:status];
      }
      else {
        s = [o getStringWithNSString:@"errorMessage"];
        s = [((RARETableViewer *) nil_chk(val$table_)) expandStringWithNSString:s];
        return [[CCPBVMessageException alloc] initWithNSString:s];
      }
    }
    @catch (JavaLangException *e) {
      return e;
    }
  }
  [val$row_ unsetUserStateFlagWithByte:CCPBVOrders_UNSIGNED_FLAG];
  int istatus = [val$row_ getUserStateFlags];
  [CCPBVOrders updateStatusIconWithRARERenderableDataItem:val$row_ withRARERenderableDataItem:[val$row_ getWithInt:0] withInt:istatus];
  if ([CCPBVUtils isDemo]) {
    [CCPBVOrderManager updateDemoOrderObjectWithNSString:id_ withNSString:[CCPBVOrderManager DEMO_ORDER_STATUS_FLAGS_KEY] withId:[JavaLangInteger valueOfWithInt:istatus]];
  }
  return (status == nil) ? nil : [((RAREWindowViewer *) nil_chk(val$w_)) expandStringWithNSString:status];
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  (*[CCPBVOrderManager lastActionTimeRef]) = [JavaLangSystem currentTimeMillis];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else if (![((RARETableViewer *) nil_chk(val$table_)) isDisposed]) {
    if (result != nil) {
      [RAREUINotifier showMessageWithNSString:(NSString *) check_class_cast(result, [NSString class])];
    }
    [val$table_ rowChangedWithInt:val$index_];
  }
}

- (id)initWithRARERenderableDataItem:(RARERenderableDataItem *)capture$0
                 withRARETableViewer:(RARETableViewer *)capture$1
                     withJavaUtilMap:(id<JavaUtilMap>)capture$2
                withRAREWindowViewer:(RAREWindowViewer *)capture$3
                             withInt:(int)capture$4 {
  val$row_ = capture$0;
  val$table_ = capture$1;
  val$values_ = capture$2;
  val$w_ = capture$3;
  val$index_ = capture$4;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$row_", NULL, 0x1012, "LRARERenderableDataItem" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$values_", NULL, 0x1012, "LJavaUtilMap" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$index_", NULL, 0x1012, "I" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$9 = { "$9", "com.sparseware.bellavista", "OrderManager", 0x8000, 1, methods, 5, fields, 0, NULL};
  return &_CCPBVOrderManager_$9;
}

@end
@implementation CCPBVOrderManager_$10

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  (void) [CCPBVOrderManager setCartConfiguration:(RARESPOTViewer *) check_class_cast(returnValue, [RARESPOTViewer class])];
  [CCPBVOrderManager showCart];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVOrderManager_$10 = { "$10", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVOrderManager_$10;
}

@end
@implementation CCPBVOrderManager_$11

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  (void) [((RAREUTJSONObject *) nil_chk([CCPBVOrderManager ordersFilter])) putWithNSString:@"startsWith" withBoolean:[((RARECheckBoxWidget *) nil_chk(val$startsWith_)) isChecked]];
  (void) [[CCPBVOrderManager ordersFilter] putWithNSString:@"type" withId:[((RAREComboBoxWidget *) nil_chk(val$type_)) getSelectionDataAsString]];
  (void) [[CCPBVOrderManager ordersFilter] putWithNSString:@"route" withId:[((RAREListBoxViewer *) nil_chk(val$route_)) getSelectionDataAsString]];
  (void) [[CCPBVOrderManager ordersFilter] putWithNSString:@"type_string" withId:[val$type_ getValueAsString]];
  (void) [[CCPBVOrderManager ordersFilter] putWithNSString:@"route_string" withId:[val$route_ getSelectionAsString]];
  [((id<RAREiContainer>) nil_chk(val$viewer_)) dispose];
  [CCPBVOrderManager updateFilterWidgetWithRAREiWidget:val$filterValueWidget_];
}

- (id)initWithRARECheckBoxWidget:(RARECheckBoxWidget *)capture$0
          withRAREComboBoxWidget:(RAREComboBoxWidget *)capture$1
           withRAREListBoxViewer:(RAREListBoxViewer *)capture$2
              withRAREiContainer:(id<RAREiContainer>)capture$3
                 withRAREiWidget:(id<RAREiWidget>)capture$4 {
  val$startsWith_ = capture$0;
  val$type_ = capture$1;
  val$route_ = capture$2;
  val$viewer_ = capture$3;
  val$filterValueWidget_ = capture$4;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$startsWith_", NULL, 0x1012, "LRARECheckBoxWidget" },
    { "val$type_", NULL, 0x1012, "LRAREComboBoxWidget" },
    { "val$route_", NULL, 0x1012, "LRAREListBoxViewer" },
    { "val$viewer_", NULL, 0x1012, "LRAREiContainer" },
    { "val$filterValueWidget_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$11 = { "$11", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 5, fields, 0, NULL};
  return &_CCPBVOrderManager_$11;
}

@end
@implementation CCPBVOrderManager_$12

- (void)run {
  [((RAREPushButtonWidget *) nil_chk(val$ok_)) click];
}

- (id)initWithRAREPushButtonWidget:(RAREPushButtonWidget *)capture$0 {
  val$ok_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$ok_", NULL, 0x1012, "LRAREPushButtonWidget" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$12 = { "$12", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_$12;
}

@end
@implementation CCPBVOrderManager_$13

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else {
    id<JavaUtilList> cart = [CCPBVOrderManager getOrderCartWithBoolean:NO];
    BOOL update = (cart == nil) ? NO : [cart indexOfWithId:val$order_] != -1;
    id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast(returnValue, @protocol(RAREiContainer));
    CCPBVOrderManager_ShowOrderFormCallback *cb = [[CCPBVOrderManager_ShowOrderFormCallback alloc] initWithRAREiContainer:fv withCCPBVOrder:val$order_ withBoolean:update];
    id<JavaLangRunnable> rno = [[CCPBVOrderManager_$13_$1 alloc] initWithCCPBVOrderManager_ShowOrderFormCallback:cb];
    id<JavaLangRunnable> ryes = [[CCPBVOrderManager_$13_$2 alloc] initWithCCPBVOrderManager_ShowOrderFormCallback:cb];
    NSString *yes = [((RAREWindowViewer *) nil_chk(val$w_)) getStringWithNSString:update ? @"bv.oe.text.update_order" : @"bv.oe.text.add_to_cart"];
    NSString *no = [val$w_ getStringWithNSString:update ? @"Rare.text.cancel" : @"bv.oe.text.cancel_order"];
    id<RAREiContainer> bp = (id<RAREiContainer>) check_protocol_cast([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"buttonPanel"], @protocol(RAREiContainer));
    RAREPushButtonWidget *pb = (RAREPushButtonWidget *) check_class_cast([((id<RAREiContainer>) nil_chk(bp)) getWidgetWithNSString:@"noButton"], [RAREPushButtonWidget class]);
    [((RAREPushButtonWidget *) nil_chk(pb)) setTextWithJavaLangCharSequence:no];
    [pb setEventHandlerWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withId:rno withBoolean:NO];
    pb = (RAREPushButtonWidget *) check_class_cast([bp getWidgetWithNSString:@"yesButton"], [RAREPushButtonWidget class]);
    [((RAREPushButtonWidget *) nil_chk(pb)) setTextWithJavaLangCharSequence:yes];
    [pb setEventHandlerWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withId:ryes withBoolean:NO];
    [CCPBVUtils pushViewerWithRAREiViewer:fv withRAREiTarget:[val$w_ getTargetWithNSString:@"tabsTarget"] withBoolean:NO withJavaLangRunnable:[[CCPBVOrderManager_$13_$3 alloc] initWithCCPBVOrderManager_ShowOrderFormCallback:cb]];
  }
}

- (id)initWithCCPBVOrder:(CCPBVOrder *)capture$0
    withRAREWindowViewer:(RAREWindowViewer *)capture$1 {
  val$order_ = capture$0;
  val$w_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$order_", NULL, 0x1012, "LCCPBVOrder" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$13 = { "$13", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVOrderManager_$13;
}

@end
@implementation CCPBVOrderManager_$13_$1

- (void)run {
  [((CCPBVOrderManager_ShowOrderFormCallback *) nil_chk(val$cb_)) finishedWithBoolean:NO withId:[JavaLangBoolean getFALSE]];
  ;
}

- (id)initWithCCPBVOrderManager_ShowOrderFormCallback:(CCPBVOrderManager_ShowOrderFormCallback *)capture$0 {
  val$cb_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$cb_", NULL, 0x1012, "LCCPBVOrderManager_ShowOrderFormCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$13_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$$13", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_$13_$1;
}

@end
@implementation CCPBVOrderManager_$13_$2

- (void)run {
  [((CCPBVOrderManager_ShowOrderFormCallback *) nil_chk(val$cb_)) finishedWithBoolean:NO withId:[JavaLangBoolean getTRUE]];
  ;
}

- (id)initWithCCPBVOrderManager_ShowOrderFormCallback:(CCPBVOrderManager_ShowOrderFormCallback *)capture$0 {
  val$cb_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$cb_", NULL, 0x1012, "LCCPBVOrderManager_ShowOrderFormCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$13_$2 = { "$2", "com.sparseware.bellavista", "OrderManager$$13", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_$13_$2;
}

@end
@implementation CCPBVOrderManager_$13_$3

- (void)run {
  [((CCPBVOrderManager_ShowOrderFormCallback *) nil_chk(val$cb_)) finishedWithBoolean:YES withId:[JavaLangBoolean getFALSE]];
}

- (id)initWithCCPBVOrderManager_ShowOrderFormCallback:(CCPBVOrderManager_ShowOrderFormCallback *)capture$0 {
  val$cb_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$cb_", NULL, 0x1012, "LCCPBVOrderManager_ShowOrderFormCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$13_$3 = { "$3", "com.sparseware.bellavista", "OrderManager$$13", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_$13_$3;
}

@end
@implementation CCPBVOrderManager_$14

- (id)compute {
  @try {
    CCPBVOrderFields *fields = [CCPBVOrderFields getOrderFieldsWithNSString:val$fieldsID_];
    if (val$renewID_ != nil) {
      ((CCPBVOrder *) nil_chk(val$order_))->orderValues_ = [CCPBVOrderFields getFieldValuesWithNSString:[NSString stringWithFormat:@"/hub/main/orders/order_values/%@.json", val$renewID_]];
    }
    return fields;
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else {
    ((CCPBVOrder *) nil_chk(val$order_))->orderFields_ = (CCPBVOrderFields *) check_class_cast(result, [CCPBVOrderFields class]);
    if ((val$renewID_ == nil) && [CCPBVOrders hasOrderSentenceSupport]) {
      (void) [val$w_ spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [[CCPBVOrderManager_GetOrderSentencesTask alloc] initWithCCPBVOrder:val$order_] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      [val$w_ showWaitCursor];
    }
    else {
      [CCPBVOrderManager showOrderFormWithCCPBVOrder:val$order_];
    }
  }
}

- (id)initWithNSString:(NSString *)capture$0
          withNSString:(NSString *)capture$1
        withCCPBVOrder:(CCPBVOrder *)capture$2
  withRAREWindowViewer:(RAREWindowViewer *)capture$3 {
  val$fieldsID_ = capture$0;
  val$renewID_ = capture$1;
  val$order_ = capture$2;
  val$w_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$fieldsID_", NULL, 0x1012, "LNSString" },
    { "val$renewID_", NULL, 0x1012, "LNSString" },
    { "val$order_", NULL, 0x1012, "LCCPBVOrder" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$14 = { "$14", "com.sparseware.bellavista", "OrderManager", 0x8000, 1, methods, 4, fields, 0, NULL};
  return &_CCPBVOrderManager_$14;
}

@end
@implementation CCPBVOrderManager_$15

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (canceled || ([returnValue isKindOfClass:[JavaLangThrowable class]])) {
    [((id<RAREiFunctionCallback>) nil_chk(val$notifier_)) finishedWithBoolean:canceled withId:returnValue];
  }
  else if (!canceled) {
    [CCPBVOrderManager submitOrdersWithNSString:(NSString *) check_class_cast(returnValue, [NSString class]) withJavaUtilList:val$orders_ withRAREiFunctionCallback:val$notifier_];
  }
}

- (id)initWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$0
                   withJavaUtilList:(id<JavaUtilList>)capture$1 {
  val$notifier_ = capture$0;
  val$orders_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$notifier_", NULL, 0x1012, "LRAREiFunctionCallback" },
    { "val$orders_", NULL, 0x1012, "LJavaUtilList" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$15 = { "$15", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVOrderManager_$15;
}

@end
@implementation CCPBVOrderManager_$16

- (void)run {
  [CCPBVOrderManager removeOrdersWithJavaUtilList:val$orders_];
  [((RAREWindowViewer *) nil_chk(val$w_)) hideProgressPopup];
  if (val$notifier_ != nil) {
    [val$notifier_ finishedWithBoolean:NO withId:[JavaLangInteger valueOfWithInt:[((id<JavaUtilList>) nil_chk(val$orders_)) size]]];
  }
}

- (id)initWithJavaUtilList:(id<JavaUtilList>)capture$0
      withRAREWindowViewer:(RAREWindowViewer *)capture$1
 withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$2 {
  val$orders_ = capture$0;
  val$w_ = capture$1;
  val$notifier_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$orders_", NULL, 0x1012, "LJavaUtilList" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$notifier_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$16 = { "$16", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_$16;
}

@end
@implementation CCPBVOrderManager_$17

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVOrderManager_$17 = { "$17", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVOrderManager_$17;
}

@end
@implementation CCPBVOrderManager_$18

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  RAREFormViewer *fv = (RAREFormViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(val$content_)) getWidgetWithNSString:@"formFields"], [RAREFormViewer class]);
  id<RAREiWidget> widget = (fv == nil) ? nil : [CCPBVFormsManager getInvalidWidgetWithRAREiContainer:fv];
  if (widget == nil) {
    [((RAREAlertPanel *) nil_chk(val$d_)) actionPerformedWithRAREActionEvent:e];
  }
  else {
    [widget requestFocus];
    RAREUTJSONObject *field = ((CCPBVFieldValue *) nil_chk([widget getLinkedData]))->field_;
    [((RAREWindowViewer *) nil_chk(val$w_)) buzz];
    id<RAREiWidget> mb = [val$content_ getWidgetWithNSString:@"messageBox"];
    if (mb != nil) {
      [mb setValueWithId:[val$w_ getStringWithNSString:@"bv.oe.format.required" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [val$w_ expandStringWithNSString:[((RAREUTJSONObject *) nil_chk(field)) getStringWithNSString:[CCPBVOrderFields PROMPT]]] } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
      [mb setForegroundWithRAREUIColor:[RAREUIColorHelper getColorWithNSString:@"error"]];
      [mb setLinkedDataWithId:widget];
      [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVOrderManager_$18_$1 alloc] initWithRAREiWidget:mb withRAREiWidget:widget] withInt:[((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getIntWithNSString:@"bv.message_delay" withInt:5000]];
    }
  }
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)capture$0
          withRAREAlertPanel:(RAREAlertPanel *)capture$1
        withRAREWindowViewer:(RAREWindowViewer *)capture$2 {
  val$content_ = capture$0;
  val$d_ = capture$1;
  val$w_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$content_", NULL, 0x1012, "LRAREiContainer" },
    { "val$d_", NULL, 0x1012, "LRAREAlertPanel" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$18 = { "$18", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_$18;
}

@end
@implementation CCPBVOrderManager_$18_$1

- (void)run {
  if (![((id<RAREiWidget>) nil_chk(val$mb_)) isDisposed]) {
    [val$mb_ setForegroundWithRAREUIColor:[((RAREUIColor *) nil_chk([RAREUIColorHelper getForeground])) getDisabledColor]];
    CCPBVFieldValue *fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(val$widget_)) getLinkedData], [CCPBVFieldValue class]);
    RAREUTJSONObject *field = (fv == nil) ? nil : fv->field_;
    if (field != nil) {
      [val$mb_ setValueWithId:[field optStringWithNSString:[CCPBVOrderFields DESCRIPTION]]];
    }
  }
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)capture$0
          withRAREiWidget:(id<RAREiWidget>)capture$1 {
  val$mb_ = capture$0;
  val$widget_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$mb_", NULL, 0x1012, "LRAREiWidget" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$18_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$$18", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVOrderManager_$18_$1;
}

@end
@implementation CCPBVOrderManager_$19

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (canceled || [((JavaLangBoolean *) nil_chk([JavaLangBoolean getFALSE])) isEqual:returnValue]) {
    ((CCPBVOrder *) nil_chk(val$order_))->orderValues_ = val$values_;
  }
  else {
    RAREFormViewer *fv = (RAREFormViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(val$c_)) getWidgetWithNSString:@"formFields"], [RAREFormViewer class]);
    [CCPBVFormsManager updateValueFromWidgetWithRAREiWidget:fv];
  }
  [((id<RAREiContainer>) nil_chk(val$c_)) dispose];
}

- (id)initWithCCPBVOrder:(CCPBVOrder *)capture$0
         withJavaUtilMap:(id<JavaUtilMap>)capture$1
      withRAREiContainer:(id<RAREiContainer>)capture$2 {
  val$order_ = capture$0;
  val$values_ = capture$1;
  val$c_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$order_", NULL, 0x1012, "LCCPBVOrder" },
    { "val$values_", NULL, 0x1012, "LJavaUtilMap" },
    { "val$c_", NULL, 0x1012, "LRAREiContainer" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$19 = { "$19", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVOrderManager_$19;
}

@end
@implementation CCPBVOrderManager_$20

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  @try {
    if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
      RAREFormViewer *fv = (RAREFormViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(val$c_)) getWidgetWithNSString:@"formFields"], [RAREFormViewer class]);
      [CCPBVFormsManager updateValueFromWidgetWithRAREiWidget:fv];
      id<JavaUtilMap> values = [CCPBVFormsManager getValuesMapWithRAREiWidget:fv];
      [CCPBVOrderManager orderDiscontinueWithRARETableViewer:val$table_ withInt:val$index_ withCCPBVOrderFields:[CCPBVOrderManager getOrderFieldsWithNSString:@"dc" withRAREUTJSONObject:val$info_] withJavaUtilMap:values];
    }
  }
  @finally {
    [((id<RAREiContainer>) nil_chk(val$c_)) dispose];
  }
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)capture$0
         withRARETableViewer:(RARETableViewer *)capture$1
                     withInt:(int)capture$2
        withRAREUTJSONObject:(RAREUTJSONObject *)capture$3 {
  val$c_ = capture$0;
  val$table_ = capture$1;
  val$index_ = capture$2;
  val$info_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$c_", NULL, 0x1012, "LRAREiContainer" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$index_", NULL, 0x1012, "I" },
    { "val$info_", NULL, 0x1012, "LRAREUTJSONObject" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$20 = { "$20", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVOrderManager_$20;
}

@end
@implementation CCPBVOrderManager_$21

- (void)run {
  for (CCPBVOrderManager_WidgetDataLink * __strong link in nil_chk(val$links_)) {
    [((CCPBVOrderManager_WidgetDataLink *) nil_chk(link)) handle];
  }
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVOrderManager_$21_$1 alloc] initWithCCPBVOrderManager_$21:self]];
}

- (id)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0
           withRAREWindowViewer:(RAREWindowViewer *)capture$1
           withRAREUTJSONObject:(RAREUTJSONObject *)capture$2
             withRAREiContainer:(id<RAREiContainer>)capture$3
      withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$4 {
  val$links_ = capture$0;
  val$w_ = capture$1;
  val$info_ = capture$2;
  val$content_ = capture$3;
  val$cb_ = capture$4;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$links_", NULL, 0x1012, "LJavaUtilArrayList" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$info_", NULL, 0x1012, "LRAREUTJSONObject" },
    { "val$content_", NULL, 0x1012, "LRAREiContainer" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$21 = { "$21", "com.sparseware.bellavista", "OrderManager", 0x8000, 0, NULL, 5, fields, 0, NULL};
  return &_CCPBVOrderManager_$21;
}

@end
@implementation CCPBVOrderManager_$21_$1

- (void)run {
  [((RAREWindowViewer *) nil_chk(this$0_->val$w_)) hideWaitCursor];
  [CCPBVOrderManager yesNoWithRAREWindowViewer:this$0_->val$w_ withRAREUTJSONObject:this$0_->val$info_ withRAREiContainer:this$0_->val$content_ withRAREiFunctionCallback:this$0_->val$cb_];
}

- (id)initWithCCPBVOrderManager_$21:(CCPBVOrderManager_$21 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVOrderManager_$21" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$21_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$$21", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrderManager_$21_$1;
}

@end
@implementation CCPBVOrderManager_$22

- (id)compute {
  @try {
    if ([CCPBVOrderManager filterConfiguration] == nil) {
      (void) [CCPBVOrderManager setFilterConfiguration:(RARESPOTViewer *) check_class_cast([((RAREWindowViewer *) nil_chk(val$w_)) createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithNSString:@"/oe/new_order_filter.rml"]], [RARESPOTViewer class])];
    }
    if ([CCPBVOrderManager orderRoutes] == nil) {
      (void) [CCPBVOrderManager setOrderRoutes:[((RAREWindowViewer *) nil_chk(val$w_)) parseDataLinkWithRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:val$w_ withNSString:@"/hub/main/util/ordering/order_routes" withBoolean:NO] withBoolean:NO]];
      ;
    }
    if ([CCPBVOrderManager orderTypes] == nil) {
      (void) [CCPBVOrderManager setOrderTypes:[((RAREWindowViewer *) nil_chk(val$w_)) parseDataLinkWithRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:val$w_ withNSString:@"/hub/main/util/ordering/order_types" withBoolean:NO] withBoolean:NO]];
    }
    if ([CCPBVOrderManager ordersFilter] == nil) {
      (void) [CCPBVOrderManager setOrdersFilter:[[RAREUTJSONObject alloc] init]];
    }
    return [((RAREWindowViewer *) nil_chk(val$w_)) createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithNSString:@"oe/ordering.rml"]];
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else {
    id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast([val$w_ createWidgetWithRARESPOTWidget:(RARESPOTWidget *) check_class_cast(result, [RARESPOTWidget class])], @protocol(RAREiViewer));
    [((id<RAREiViewer>) nil_chk(v)) setAutoDisposeWithBoolean:YES];
    [CCPBVUtils pushViewerWithRAREiViewer:v withRAREiTarget:[val$w_ getTargetWithNSString:@"tabsTarget"] withBoolean:NO withJavaLangRunnable:nil];
    [((RAREUIAction *) nil_chk([val$w_ getActionWithNSString:@"bv.action.new_orders"])) setEnabledWithBoolean:NO];
    if (val$orderItem_ != nil) {
      [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVOrderManager_$22_$1 alloc] init]];
    }
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
    withRARERenderableDataItem:(RARERenderableDataItem *)capture$1 {
  val$w_ = capture$0;
  val$orderItem_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$orderItem_", NULL, 0x1012, "LRARERenderableDataItem" },
  };
  static J2ObjcClassInfo _CCPBVOrderManager_$22 = { "$22", "com.sparseware.bellavista", "OrderManager", 0x8000, 1, methods, 2, fields, 0, NULL};
  return &_CCPBVOrderManager_$22;
}

@end
@implementation CCPBVOrderManager_$22_$1

- (void)run {
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVOrderManager_$22_$1 = { "$1", "com.sparseware.bellavista", "OrderManager$$22", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVOrderManager_$22_$1;
}

@end
