//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/PatientSelect.java
//
//  Created by decoteaud on 6/10/15.
//

#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/aWorkerTask.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iDataCollection.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/iWorkerTask.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/spot/StackPane.h"
#include "com/appnativa/rare/spot/TabPane.h"
#include "com/appnativa/rare/spot/Table.h"
#include "com/appnativa/rare/ui/ActionBar.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UICompoundIcon.h"
#include "com/appnativa/rare/ui/UIImage.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIMenuItem.h"
#include "com/appnativa/rare/ui/UIPopupMenu.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/UISoundHelper.h"
#include "com/appnativa/rare/ui/UISpriteIcon.h"
#include "com/appnativa/rare/ui/border/UILineBorder.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/ui/event/iActionListener.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/viewer/ImagePaneViewer.h"
#include "com/appnativa/rare/viewer/StackPaneViewer.h"
#include "com/appnativa/rare/viewer/TableViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aListViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/ComboBoxWidget.h"
#include "com/appnativa/rare/widget/aGroupableButton.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/ContainsFilter.h"
#include "com/appnativa/util/RegularExpressionFilter.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/StringCache.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/appnativa/util/iFilter.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/CardStackUtils.h"
#include "com/sparseware/bellavista/ClinicalValue.h"
#include "com/sparseware/bellavista/CollectionManager.h"
#include "com/sparseware/bellavista/OrderManager.h"
#include "com/sparseware/bellavista/PatientSelect.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/external/DemoBarcodeReader.h"
#include "com/sparseware/bellavista/external/DemoPatientLocator.h"
#include "com/sparseware/bellavista/external/aBarcodeReader.h"
#include "com/sparseware/bellavista/external/aPatientLocator.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/text/ParseException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Date.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation CCPBVPatientSelect

static NSString * CCPBVPatientSelect_lastPatientID_;
static NSString * CCPBVPatientSelect_lastTabName_;
static IOSObjectArray * CCPBVPatientSelect_signalIcons_;
static RAREUILineBorder * CCPBVPatientSelect_photoBorder_;
static RAREUIImageIcon * CCPBVPatientSelect_noPhotoIcon_;
static NSString * CCPBVPatientSelect_PATIENT_SELECTION_TYPE_ = @"pt_selection_type";
static NSString * CCPBVPatientSelect_PATIENT_SELECT_PAGE_ = @"pt_select_paage";
static NSString * CCPBVPatientSelect_PATIENT_SELECT_ = @"pt_select_patient";

+ (int)ADMIT_DATE {
  return CCPBVPatientSelect_ADMIT_DATE;
}

+ (int)ADMIT_DX {
  return CCPBVPatientSelect_ADMIT_DX;
}

+ (int)DOB {
  return CCPBVPatientSelect_DOB;
}

+ (int)DOCTOR {
  return CCPBVPatientSelect_DOCTOR;
}

+ (int)GENDER {
  return CCPBVPatientSelect_GENDER;
}

+ (int)ID {
  return CCPBVPatientSelect_ID;
}

+ (int)LOCATION {
  return CCPBVPatientSelect_LOCATION;
}

+ (int)MRN {
  return CCPBVPatientSelect_MRN;
}

+ (int)NAME {
  return CCPBVPatientSelect_NAME;
}

+ (int)PHOTO {
  return CCPBVPatientSelect_PHOTO;
}

+ (int)SIGNAL {
  return CCPBVPatientSelect_SIGNAL;
}

+ (int)RM_BED {
  return CCPBVPatientSelect_RM_BED;
}

+ (NSString *)lastPatientID {
  return CCPBVPatientSelect_lastPatientID_;
}

+ (void)setLastPatientID:(NSString *)lastPatientID {
  CCPBVPatientSelect_lastPatientID_ = lastPatientID;
}

+ (NSString *)lastTabName {
  return CCPBVPatientSelect_lastTabName_;
}

+ (void)setLastTabName:(NSString *)lastTabName {
  CCPBVPatientSelect_lastTabName_ = lastTabName;
}

+ (IOSObjectArray *)signalIcons {
  return CCPBVPatientSelect_signalIcons_;
}

+ (void)setSignalIcons:(IOSObjectArray *)signalIcons {
  CCPBVPatientSelect_signalIcons_ = signalIcons;
}

+ (RAREUILineBorder *)photoBorder {
  return CCPBVPatientSelect_photoBorder_;
}

+ (void)setPhotoBorder:(RAREUILineBorder *)photoBorder {
  CCPBVPatientSelect_photoBorder_ = photoBorder;
}

+ (RAREUIImageIcon *)noPhotoIcon {
  return CCPBVPatientSelect_noPhotoIcon_;
}

+ (void)setNoPhotoIcon:(RAREUIImageIcon *)noPhotoIcon {
  CCPBVPatientSelect_noPhotoIcon_ = noPhotoIcon;
}

+ (NSString *)PATIENT_SELECTION_TYPE {
  return CCPBVPatientSelect_PATIENT_SELECTION_TYPE_;
}

+ (NSString *)PATIENT_SELECT_PAGE {
  return CCPBVPatientSelect_PATIENT_SELECT_PAGE_;
}

+ (NSString *)PATIENT_SELECT {
  return CCPBVPatientSelect_PATIENT_SELECT_;
}

- (id)init {
  if (self = [super init]) {
    pagingStack_ = [[JavaUtilArrayList alloc] init];
    RAREUTJSONObject *info = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patientSelectInfo"], [RAREUTJSONObject class]);
    autoShowDefaultList_ = [((RAREUTJSONObject *) nil_chk(info)) optBooleanWithNSString:@"autoShowDefaultList" withBoolean:YES];
    searchPageSize_ = [info optIntWithNSString:@"searchPageSize" withInt:0];
    NSString *cls = [info optStringWithNSString:@"patientLocatorClass"];
    if (cls != nil && [cls sequenceLength] > 0) {
      cls = [CCPBVUtils resolveClassNameWithNSString:cls withNSString:@"external"];
      @try {
        patientLocatorClass_ = [RAREPlatform loadClassWithNSString:cls];
      }
      @catch (JavaLangClassNotFoundException *e) {
        [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Patient locator class not found:%@", cls]];
      }
    }
    cls = [info optStringWithNSString:@"barcodeReaderClass"];
    if (cls != nil && [cls sequenceLength] > 0) {
      @try {
        cls = [CCPBVUtils resolveClassNameWithNSString:cls withNSString:@"external"];
        barcodeReaderClass_ = [RAREPlatform loadClassWithNSString:cls];
      }
      @catch (JavaLangClassNotFoundException *e) {
        [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Barcode reader class not found:%@", cls]];
      }
    }
    if ([CCPBVUtils isDemo]) {
      if (patientLocatorClass_ == nil) {
        patientLocatorClass_ = [IOSClass classWithClass:[CCPBVDemoPatientLocator class]];
      }
      if (barcodeReaderClass_ == nil) {
        barcodeReaderClass_ = [IOSClass classWithClass:[CCPBVDemoBarcodeReader class]];
      }
    }
    NSString *s = [RAREPlatform getResourceAsStringWithNSString:@"bv.text.patient_list_loaded"];
    patientListLoaded_ = [[RARERenderableDataItem alloc] initWithId:s];
    [patientListLoaded_ setEnabledWithBoolean:NO];
    noPatientListLoaded_ = [[RARERenderableDataItem alloc] init];
    [noPatientListLoaded_ setEnabledWithBoolean:NO];
    noPatientsFound_ = [CCPBVUtils createDisabledTableRowWithNSString:@"bv.text.no_patients_found" withInt:1];
  }
  return self;
}

- (void)onBarcodeButtonActionWithNSString:(NSString *)eventName
                          withRAREiWidget:(id<RAREiWidget>)widget
                  withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if (barcodeReader_ != nil) {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    id<RAREiFunctionCallback> cb = [[CCPBVPatientSelect_$1 alloc] initWithCCPBVPatientSelect:self withRAREWindowViewer:w withRAREiWidget:widget];
    [CCPBVUtils setIgnorePausingWithBoolean:YES];
    [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
    [barcodeReader_ readWithRAREiFunctionCallback:cb];
  }
}

- (void)onBookmarkButtonActionWithNSString:(NSString *)eventName
                           withRAREiWidget:(id<RAREiWidget>)widget
                   withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self stopListeningForNearbyPatients];
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) getWindowViewer];
  id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"patientSelectionForm"], @protocol(RAREiContainer));
  [self clearPreviewWithRAREiContainer:fv];
  if (![RAREUIScreen isLargeScreen]) {
    RAREStackPaneViewer *sp = (RAREStackPaneViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:@"selectionStack"], [RAREStackPaneViewer class]);
    [((RAREStackPaneViewer *) nil_chk(sp)) switchToWithInt:0];
  }
  [self loadPatientListWithRARETableViewer:patientsTable_ withRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:patientsTable_ withNSString:@"/hub/main/util/patients/list" withBoolean:YES] withNSString:nil withNSString:nil];
}

- (void)onCreatedWithNSString:(NSString *)eventName
              withRAREiWidget:(id<RAREiWidget>)widget
      withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if (patientLocatorClass_ != nil) {
    @try {
      patientLocator_ = (CCPBVaPatientLocator *) check_class_cast([patientLocatorClass_ newInstance], [CCPBVaPatientLocator class]);
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithNSString:@"faled to instantiate patient locator" withJavaLangThrowable:e];
    }
  }
  if (barcodeReaderClass_ != nil) {
    @try {
      barcodeReader_ = (CCPBVaBarcodeReader *) check_class_cast([barcodeReaderClass_ newInstance], [CCPBVaBarcodeReader class]);
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithNSString:@"faled to instantiate barcode reader" withJavaLangThrowable:e];
    }
  }
  if ([CCPBVUtils isCardStack]) {
    RARESPOTStackPane *cfg = (RARESPOTStackPane *) check_class_cast([((RAREDataEvent *) check_class_cast(event, [RAREDataEvent class])) getData], [RARESPOTStackPane class]);
    selectionMenu_ = [[RAREUIPopupMenu alloc] initWithRAREiWidget:[RAREPlatform getWindowViewer] withSPOTSet:[((RARESPOTStackPane *) nil_chk(cfg)) getPopupMenu]];
    [cfg setPopupMenuWithISPOTElement:nil];
  }
}

- (void)onLoadWithNSString:(NSString *)eventName
           withRAREiWidget:(id<RAREiWidget>)widget
   withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if ([CCPBVUtils isCardStack]) {
    [((RAREActionBar *) nil_chk([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getActionBar])) setVisibleWithBoolean:NO];
  }
}

- (void)onDisposeWithNSString:(NSString *)eventName
              withRAREiWidget:(id<RAREiWidget>)widget
      withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if ([CCPBVUtils isCardStack]) {
    if (patientsTable_ != nil) {
      [patientsTable_ dispose];
    }
  }
  patientsTable_ = nil;
  if (patientLocator_ != nil) {
    [patientLocator_ dispose];
  }
  if (barcodeReader_ != nil) {
    [barcodeReader_ dispose];
  }
  barcodeReader_ = nil;
  patientLocator_ = nil;
  locatorWidget_ = nil;
  psActionListener_ = nil;
}

- (void)onEventWithNSString:(NSString *)eventName
            withRAREiWidget:(id<RAREiWidget>)widget
    withJavaUtilEventObject:(JavaUtilEventObject *)event {
}

- (void)onIdentifierLabelShownWithNSString:(NSString *)eventName
                           withRAREiWidget:(id<RAREiWidget>)widget
                   withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if ([RAREPlatform isAndroid]) {
    [((id<RAREiWidget>) nil_chk(widget)) requestFocus];
  }
}

- (void)onListCategoriesActionWithNSString:(NSString *)eventName
                           withRAREiWidget:(id<RAREiWidget>)widget
                   withJavaUtilEventObject:(JavaUtilEventObject *)event {
  CCPBVCollectionManager_PatientList *pl = (CCPBVCollectionManager_PatientList *) check_class_cast([((id<RAREiWidget>) nil_chk(widget)) getSelectionData], [CCPBVCollectionManager_PatientList class]);
  if (pl != nil) {
    RARETableViewer *table = patientsTable_;
    if ([pl isContainsPatients]) {
      RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([widget getAppContext])) getWindowViewer];
      id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"patientSelectionForm"], @protocol(RAREiContainer));
      RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"bookmarkButton"], [RAREaGroupableButton class]);
      if (pb != nil) {
        [pb setSelectedWithBoolean:NO];
      }
      [self loadPatientListWithRARETableViewer:table withRAREActionLink:[pl getCollectionLinkWithRAREiWidget:table] withNSString:nil withNSString:nil];
    }
    else {
      RAREaListViewer *lb = (RAREaListViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:@"listsBox"], [RAREaListViewer class]);
      [((RAREaListViewer *) nil_chk(lb)) setLinkedDataWithId:pl];
      [lb setDataURLWithNSString:[pl getCollectionHREF]];
    }
    if (([(id) widget isKindOfClass:[RAREComboBoxWidget class]]) && ![RAREUIScreen isLargeScreen]) {
      [((RAREComboBoxWidget *) check_class_cast(widget, [RAREComboBoxWidget class])) setEmptyFieldTextWithNSString:[widget getSelectionAsString]];
      [((RAREComboBoxWidget *) check_class_cast(widget, [RAREComboBoxWidget class])) clearSelection];
    }
  }
}

- (void)onListsBoxFinishLoadingWithNSString:(NSString *)eventName
                            withRAREiWidget:(id<RAREiWidget>)widget
                    withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RAREaListViewer *lb = (RAREaListViewer *) check_class_cast(widget, [RAREaListViewer class]);
  if ([((RAREaListViewer *) nil_chk(lb)) isEmpty]) {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    NSString *type = [((id<RAREiWidget>) nil_chk([((id<RAREiFormViewer>) nil_chk([lb getFormViewer])) getWidgetWithNSString:@"listCategories"])) getSelectionAsString];
    [((RARERenderableDataItem *) nil_chk(noPatientListLoaded_)) setValueWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.format.no_lists" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ type } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
    [lb setAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ noPatientListLoaded_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
}

- (void)onMostRecentActionWithNSString:(NSString *)eventName
                       withRAREiWidget:(id<RAREiWidget>)widget
               withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self loadPatientListWithRARETableViewer:patientsTable_ withRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:patientsTable_ withNSString:@"/hub/main/util/patients/most_recent" withBoolean:YES] withNSString:nil withNSString:nil];
}

- (void)onNearbyPatientsActionWithNSString:(NSString *)eventName
                           withRAREiWidget:(id<RAREiWidget>)widget
                   withJavaUtilEventObject:(JavaUtilEventObject *)event {
  id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"patientSelectionForm"], @protocol(RAREiContainer));
  RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"signalButton"], [RAREaGroupableButton class]);
  if (pb != nil && ![pb isVisible]) {
    if ([pb getIcon] == nil) {
      RAREUIImage *sprite = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getResourceAsImageWithNSString:@"bv.icon.beacon.sprite"];
      RAREUISpriteIcon *icon = [[RAREUISpriteIcon alloc] initWithRAREUIImage:sprite];
      [pb setIconWithRAREiPlatformIcon:icon];
    }
    [pb setVisibleWithBoolean:YES];
  }
  [((id<RAREiWidget>) nil_chk(widget)) setEnabledWithBoolean:NO];
  pb = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"bookmarkButton"], [RAREaGroupableButton class]);
  if (pb != nil) {
    [pb setSelectedWithBoolean:NO];
  }
  [self showNearbyPatientsWithRAREiWidget:widget];
}

- (void)onNextOrPreviousPageWithNSString:(NSString *)eventName
                         withRAREiWidget:(id<RAREiWidget>)widget
                 withJavaUtilEventObject:(JavaUtilEventObject *)event {
  BOOL next = [((NSString *) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getName])) isEqual:@"nextPage"];
  RAREActionLink *link = nil;
  if (next) {
    link = pagingNext_;
  }
  else {
    int pos = [((JavaUtilArrayList *) nil_chk(pagingStack_)) size] - 2;
    link = pos > -1 ? [pagingStack_ getWithInt:pos] : nil;
    if (link != nil) {
      (void) [pagingStack_ removeWithInt:pos];
      (void) [pagingStack_ removeWithInt:pos];
    }
  }
  pagingNext_ = nil;
  if (link == nil) {
    [widget setEnabledWithBoolean:NO];
    [RAREUISoundHelper beep];
  }
  else {
    [self loadPatientListWithRARETableViewer:patientsTable_ withRAREActionLink:link withNSString:nil withNSString:nil];
  }
}

- (void)onPatientListSelectedWithNSString:(NSString *)eventName
                          withRAREiWidget:(id<RAREiWidget>)widget
                  withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) getWindowViewer];
  id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"patientSelectionForm"], @protocol(RAREiContainer));
  NSString *list = [widget getSelectionDataAsString];
  [self clearPreviewWithRAREiContainer:fv];
  RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"bookmarkButton"], [RAREaGroupableButton class]);
  if (pb != nil) {
    [pb setSelectedWithBoolean:NO];
  }
  CCPBVCollectionManager_PatientList *pl = (CCPBVCollectionManager_PatientList *) check_class_cast([widget getLinkedData], [CCPBVCollectionManager_PatientList class]);
  if (pl != nil) {
    [self loadPatientListWithRARETableViewer:patientsTable_ withRAREActionLink:[pl getListLinkWithRAREiWidget:patientsTable_ withNSString:list] withNSString:nil withNSString:nil];
  }
}

- (void)onPatientSearchWithNSString:(NSString *)eventName
                    withRAREiWidget:(id<RAREiWidget>)widget
            withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self stopListeningForNearbyPatients];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiFormViewer> form = [((id<RAREiWidget>) nil_chk(widget)) getFormViewer];
  RARETableViewer *table = patientsTable_;
  [((JavaUtilArrayList *) nil_chk(pagingStack_)) clear];
  pagingNext_ = nil;
  NSString *id_ = [((id<RAREiWidget>) nil_chk([((id<RAREiFormViewer>) nil_chk(form)) getWidgetWithNSString:@"identifier"])) getValueAsString];
  if ((id_ == nil) || ([id_ sequenceLength] == 0)) {
    [((RAREWindowViewer *) nil_chk(w)) beep];
    return;
  }
  NSString *gender = [((RAREaGroupableButton *) check_class_cast([form getWidgetWithNSString:@"M"], [RAREaGroupableButton class])) getSelectedButtonName];
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  (void) [sb appendWithNSString:@"/hub/main/util/patients/"];
  RAREActionLink *link;
  if (![CCPBVUtils isDemo]) {
    (void) [sb appendWithNSString:@"list"];
    JavaUtilHashMap *attributes = [[JavaUtilHashMap alloc] initWithInt:2];
    (void) [attributes putWithId:@"identifier" withId:id_];
    if (gender != nil) {
      (void) [attributes putWithId:@"gender" withId:gender];
      gender = nil;
    }
    if (searchPageSize_ > 0) {
      (void) [attributes putWithId:@"max" withId:[JavaLangInteger toStringWithInt:searchPageSize_]];
    }
    id_ = nil;
    link = [CCPBVUtils createLinkWithRAREiWidget:table withNSString:[sb description] withBoolean:YES];
    [((RAREActionLink *) nil_chk(link)) setAttributesWithJavaUtilMap:attributes];
    [link setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum POST]];
  }
  else {
    (void) [sb appendWithNSString:@"nearby"];
    link = [CCPBVUtils createLinkWithRAREiWidget:table withNSString:[sb description] withBoolean:YES];
  }
  [self loadPatientListWithRARETableViewer:table withRAREActionLink:link withNSString:id_ withNSString:gender];
}

- (void)onPatientsTableChangeWithNSString:(NSString *)eventName
                          withRAREiWidget:(id<RAREiWidget>)widget
                  withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self showPreviewWithRARETableViewer:patientsTable_];
}

- (void)onPatientsTableCreatedWithNSString:(NSString *)eventName
                           withRAREiWidget:(id<RAREiWidget>)widget
                   withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RARESPOTTable *table = (RARESPOTTable *) check_class_cast([((RAREDataEvent *) check_class_cast(event, [RAREDataEvent class])) getData], [RARESPOTTable class]);
  float px = [RAREUIScreen toPlatformPixelHeightWithNSString:@"2ln" withRAREiPlatformComponent:nil withFloat:0 withBoolean:NO];
  float px54 = [RAREUIScreen platformPixelsfWithFloat:54];
  if (px < px54) {
    [((SPOTPrintableString *) nil_chk(((RARESPOTTable *) nil_chk(table))->rowHeight_)) setValueWithNSString:@"54"];
  }
  if (autoShowDefaultList_) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVPatientSelect_$2 alloc] initWithCCPBVPatientSelect:self withRAREiWidget:widget]];
  }
}

- (void)onSearchFormConfigureWithNSString:(NSString *)eventName
                          withRAREiWidget:(id<RAREiWidget>)widget
                  withJavaUtilEventObject:(JavaUtilEventObject *)event {
  id<RAREiFormViewer> fv = [((id<RAREiWidget>) nil_chk(widget)) getFormViewer];
  RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiFormViewer>) nil_chk(fv)) getWidgetWithNSString:@"bv.action.scan_barcode"], [RAREaGroupableButton class]);
  if (pb != nil) {
    if (barcodeReader_ != nil) {
      id<RAREiPlatformIcon> icon = [barcodeReader_ getButtonIcon];
      if (icon != nil) {
        [pb setIconWithRAREiPlatformIcon:icon];
      }
      NSString *text = [barcodeReader_ getButtonText];
      if (text != nil) {
        [pb setTextWithJavaLangCharSequence:text];
      }
      [pb setEnabledWithBoolean:[barcodeReader_ isReaderAvailable]];
    }
    else {
      [pb setEnabledWithBoolean:NO];
    }
  }
  pb = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"bv.action.nearby_patients"], [RAREaGroupableButton class]);
  if (pb != nil) {
    if (patientLocator_ != nil) {
      [pb setEnabledWithBoolean:[patientLocator_ isNearbyPatientsSupported]];
    }
    else {
      [pb setEnabledWithBoolean:NO];
    }
  }
}

- (void)onSearchFormUnloadedWithNSString:(NSString *)eventName
                         withRAREiWidget:(id<RAREiWidget>)widget
                 withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self stopListeningForNearbyPatients];
}

- (void)onSelectionFormConfigureWithNSString:(NSString *)eventName
                             withRAREiWidget:(id<RAREiWidget>)widget
                     withJavaUtilEventObject:(JavaUtilEventObject *)event {
  BOOL cardStack = [CCPBVUtils isCardStack];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiFormViewer> fv = [((id<RAREiWidget>) nil_chk(widget)) getFormViewer];
  patientsTable_ = (RARETableViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk(fv)) getWidgetWithNSString:@"patientsTable"], [RARETableViewer class]);
  if (cardStack) {
    if (patientsTable_ == nil) {
      RARESPOTTable *cfg = (RARESPOTTable *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Table" withNSString:@"bv.table.patients"], [RARESPOTTable class]);
      [((RARESPOTTable *) nil_chk(cfg)) spot_clearAttributes];
      patientsTable_ = (RARETableViewer *) check_class_cast([w createWidgetWithRARESPOTWidget:cfg], [RARETableViewer class]);
    }
    RAREStackPaneViewer *sp = (RAREStackPaneViewer *) check_class_cast(widget, [RAREStackPaneViewer class]);
    (void) [CCPBVCardStackUtils createListItemsViewerWithRAREStackPaneViewer:sp withNSString:nil withRAREiContainer:nil withJavaUtilList:selectionMenu_ withRAREiActionListener:nil withBoolean:YES withBoolean:NO];
    RARESPOTStackPane *cfg = (RARESPOTStackPane *) check_class_cast([((RAREDataEvent *) check_class_cast(event, [RAREDataEvent class])) getData], [RARESPOTStackPane class]);
    int n = [((SPOTInteger *) nil_chk(((RARESPOTStackPane *) nil_chk(cfg))->selectedIndex_)) intValue];
    [sp switchToWithInt:n];
  }
  else {
    RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"patient"], [RAREaGroupableButton class]);
    RAREUIPopupMenu *pm = [((RAREaGroupableButton *) nil_chk(pb)) getPopupMenu];
    NSString *format = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.format.goto"];
    int len = [((RAREUIPopupMenu *) nil_chk(pm)) size];
    id<RAREiActionListener> al = [[CCPBVPatientSelect_MenuActionListener alloc] init];
    for (int i = 0; i < len; i++) {
      RAREUIMenuItem *mi = [pm getMenuItemWithInt:i];
      NSString *name = [((RAREUIMenuItem *) nil_chk(mi)) getName];
      NSString *s = [w getStringWithNSString:[NSString stringWithFormat:@"bv.text.%@", name]];
      [mi setTextWithJavaLangCharSequence:[RAREFunctions formatWithNSString:format withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ s } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
      [mi setActionListenerWithRAREiActionListener:al];
    }
    if (![RAREUIScreen isLargeScreen]) {
      RAREaGroupableButton *pb2 = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"bv.action.scan_barcode"], [RAREaGroupableButton class]);
      if (pb2 != nil) {
        if (barcodeReader_ != nil) {
          id<RAREiPlatformIcon> icon = [barcodeReader_ getButtonIcon];
          if (icon != nil) {
            [pb2 setIconWithRAREiPlatformIcon:icon];
          }
          NSString *text = [barcodeReader_ getButtonText];
          if (text != nil) {
            [pb2 setTextWithJavaLangCharSequence:text];
          }
          [pb2 setEnabledWithBoolean:[barcodeReader_ isReaderAvailable]];
        }
        else {
          [pb2 setEnabledWithBoolean:NO];
        }
      }
      pb2 = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"signalButton"], [RAREaGroupableButton class]);
      if (pb2 != nil) {
        RAREUIImage *sprite = [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getResourceAsImageWithNSString:@"bv.icon.beacon.sprite"];
        RAREUISpriteIcon *icon = [[RAREUISpriteIcon alloc] initWithRAREUIImage:sprite];
        [icon setFrozenWithBoolean:YES];
        [pb2 setIconWithRAREiPlatformIcon:icon];
        [pb2 setEnabledWithBoolean:patientLocator_ != nil && [patientLocator_ isNearbyPatientsSupported]];
      }
    }
  }
}

- (void)onSelectPatientWithNSString:(NSString *)eventName
                    withRAREiWidget:(id<RAREiWidget>)widget
            withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if (widget == patientsTable_) {
    [self showPreviewWithRARETableViewer:patientsTable_];
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiWidget> patient = [((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getFormViewer])) getWidgetWithNSString:@"patient"];
  RARERenderableDataItem *row = (RARERenderableDataItem *) check_class_cast([((id<RAREiWidget>) nil_chk(patient)) getLinkedData], [RARERenderableDataItem class]);
  NSString *id_ = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(row)) getWithInt:0])) getValue], [NSString class]);
  RAREUIImageIcon *icon = (RAREUIImageIcon *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:0])) getIcon], [RAREUIImageIcon class]);
  id<RAREiFunctionCallback> cb = [[CCPBVPatientSelect_$3 alloc] initWithRAREWindowViewer:w withRAREUIImageIcon:icon];
  [CCPBVPatientSelect loadPatientExWithRAREiWidget:w withNSString:id_ withRAREiFunctionCallback:cb];
  [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
}

- (void)onSignalButtonActionWithNSString:(NSString *)eventName
                         withRAREiWidget:(id<RAREiWidget>)widget
                 withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [((CCPBVaPatientLocator *) nil_chk(patientLocator_)) stopListeningForNearbyPatients];
  RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast(widget, [RAREaGroupableButton class]);
  RAREUISpriteIcon *icon = (RAREUISpriteIcon *) check_class_cast([((RAREaGroupableButton *) nil_chk(pb)) getIcon], [RAREUISpriteIcon class]);
  if ([RAREUIScreen isLargeScreen]) {
    [self stopListeningForNearbyPatients];
  }
  else {
    if ([((RAREUISpriteIcon *) nil_chk(icon)) isFrozen]) {
      RAREStackPaneViewer *sp = (RAREStackPaneViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getFormViewer])) getWidgetWithNSString:@"selectionStack"], [RAREStackPaneViewer class]);
      [((RAREStackPaneViewer *) nil_chk(sp)) switchToWithInt:0];
      [self showNearbyPatientsWithRAREiWidget:widget];
      [icon setFrozenWithBoolean:NO];
    }
    else {
      [self stopListeningForNearbyPatients];
    }
  }
}

- (void)onSortByNameWithNSString:(NSString *)eventName
                 withRAREiWidget:(id<RAREiWidget>)widget
         withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RARETableViewer *table = (RARETableViewer *) check_class_cast(widget, [RARETableViewer class]);
  [((RARETableViewer *) nil_chk(table)) sortWithInt:1 withBoolean:NO withBoolean:YES];
}

- (void)onSortByRoomNumberWithNSString:(NSString *)eventName
                       withRAREiWidget:(id<RAREiWidget>)widget
               withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RARETableViewer *table = (RARETableViewer *) check_class_cast(widget, [RARETableViewer class]);
  id<JavaUtilComparator> c = [[CCPBVPatientSelect_$4 alloc] init];
  [((RARETableViewer *) nil_chk(table)) sortWithJavaUtilComparator:c];
}

- (void)onTabPaneCreatedWithNSString:(NSString *)eventName
                     withRAREiWidget:(id<RAREiWidget>)widget
             withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if ([RAREUIScreen isLargeScreen]) {
    if ((barcodeReader_ != nil && [barcodeReader_ isReaderAvailable]) || (patientLocator_ != nil && [patientLocator_ isNearbyPatientsSupported])) {
      RARESPOTTabPane *cfg = (RARESPOTTabPane *) check_class_cast([((RAREDataEvent *) check_class_cast(event, [RAREDataEvent class])) getData], [RARESPOTTabPane class]);
      [((SPOTInteger *) nil_chk(((RARESPOTTabPane *) nil_chk(cfg))->selectedIndex_)) setValueWithLong:1];
    }
  }
}

- (void)onVoiceSearchActionWithNSString:(NSString *)eventName
                        withRAREiWidget:(id<RAREiWidget>)widget
                withJavaUtilEventObject:(JavaUtilEventObject *)event {
}

- (void)showFormForButtonWithNSString:(NSString *)eventName
                      withRAREiWidget:(id<RAREiWidget>)widget
              withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self stopListeningForNearbyPatients];
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) getWindowViewer];
  id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"patientSelectionForm"], @protocol(RAREiContainer));
  [self clearPreviewWithRAREiContainer:fv];
  NSString *name = [widget getName];
  RAREStackPaneViewer *sp = (RAREStackPaneViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:@"selectionStack"], [RAREStackPaneViewer class]);
  if ([((NSString *) nil_chk(name)) isEqual:@"listsButton"] && [((RAREStackPaneViewer *) nil_chk(sp)) isViewerLoadedWithNSString:name]) {
    id<RAREiContainer> c = (id<RAREiContainer>) check_protocol_cast([sp getViewerWithNSString:name], @protocol(RAREiContainer));
    RAREComboBoxWidget *cb = (RAREComboBoxWidget *) check_class_cast([((id<RAREiContainer>) nil_chk(c)) getWidgetWithNSString:@"listCategories"], [RAREComboBoxWidget class]);
    CCPBVCollectionManager_PatientList *pl = (CCPBVCollectionManager_PatientList *) check_class_cast([((RAREComboBoxWidget *) nil_chk(cb)) getSelectionData], [CCPBVCollectionManager_PatientList class]);
    if (pl != nil && [pl isContainsPatients]) {
      [cb clearSelection];
    }
  }
  [((RAREStackPaneViewer *) nil_chk(sp)) switchToWithNSString:name];
}

- (void)stateChangedWithJavaUtilEventObject:(JavaUtilEventObject *)e {
  CCPBVaPatientLocator_LocatorChangeEvent *ce = (CCPBVaPatientLocator_LocatorChangeEvent *) check_class_cast(e, [CCPBVaPatientLocator_LocatorChangeEvent class]);
  if ([((CCPBVaPatientLocator_LocatorChangeEvent *) nil_chk(ce)) getChangeType] == [CCPBVaPatientLocator_LocatorChangeTypeEnum ACCESS_DENIED]) {
    [self stopListeningForNearbyPatients];
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    [CCPBVUtils alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.location_service_denied_access"]];
    return;
  }
  id<RAREiFunctionCallback> cb = [[CCPBVPatientSelect_$5 alloc] initWithCCPBVPatientSelect:self];
  [((CCPBVaPatientLocator *) nil_chk(patientLocator_)) getNearbyPatientsWithJavaUtilEventObject:e withRAREiFunctionCallback:cb];
}

- (void)clearPreviewWithRAREiContainer:(id<RAREiContainer>)fv {
  [((id<RAREiWidget>) nil_chk([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"patient"])) setValueWithId:[((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([fv getAppContext])) getWindowViewer])) getStringWithNSString:@"bv.text.no_patient"]];
  if ([fv getWidgetWithNSString:@"mrn"] != nil) {
    [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"mrn"])) setValueWithId:@""];
  }
  [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"age_sex"])) setValueWithId:@""];
  [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"admit_date"])) setValueWithId:@""];
  if ([fv getWidgetWithNSString:@"admit_dx"] != nil) {
    [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"admit_dx"])) setValueWithId:@""];
  }
  RAREImagePaneViewer *ip = ((RAREImagePaneViewer *) check_class_cast([fv getWidgetWithNSString:@"photo"], [RAREImagePaneViewer class]));
  if (ip != nil) {
    [ip setImageWithRAREUIImage:[((id<RAREiPlatformAppContext>) nil_chk([fv getAppContext])) getResourceAsImageWithNSString:@"bv.icon.no_photo"]];
  }
  [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"patient"])) setEnabledWithBoolean:NO];
}

- (void)loadPatientListWithRARETableViewer:(RARETableViewer *)table
                        withRAREActionLink:(RAREActionLink *)link
                              withNSString:(NSString *)filter
                              withNSString:(NSString *)gender {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVPatientSelect_$6 alloc] initWithCCPBVPatientSelect:self withRARETableViewer:table withRAREActionLink:link withNSString:filter withNSString:gender withRAREWindowViewer:w];
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  [w showWaitCursor];
}

- (id<JavaUtilList>)loadPatientListExWithRARETableViewer:(RARETableViewer *)widget
                                      withRAREActionLink:(RAREActionLink *)link
                                            withNSString:(NSString *)filter
                                            withNSString:(NSString *)gender
                                             withBoolean:(BOOL)sort {
  [((RARETableViewer *) nil_chk(widget)) setLinkedDataWithId:link];
  id<JavaUtilList> rows = [widget parseDataLinkWithRAREActionLink:link withBoolean:YES];
  if (filter != nil) {
    BOOL mrn = NO;
    int len = [filter sequenceLength];
    for (int i = 0; i < len; i++) {
      if ([JavaLangCharacter isDigitWithChar:[filter charAtWithInt:i]]) {
        mrn = YES;
        break;
      }
    }
    len = [((id<JavaUtilList>) nil_chk(rows)) size];
    if (len != 0) {
      id<RAREUTiFilter> f = [self createPatientNameFilterWithNSString:filter];
      for (int i = len - 1; i >= 0; i--) {
        RARERenderableDataItem *row = [rows getWithInt:i];
        RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:mrn ? CCPBVPatientSelect_MRN : CCPBVPatientSelect_NAME];
        NSString *s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(item)) getValue], [NSString class]);
        if (![((id<RAREUTiFilter>) nil_chk(f)) passesWithId:s withRAREUTiStringConverter:nil]) {
          (void) [rows removeWithInt:i];
          continue;
        }
        if (gender != nil) {
          item = [row getWithInt:CCPBVPatientSelect_GENDER];
          s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(item)) getValue], [NSString class]);
          if (![((NSString *) nil_chk(s)) hasPrefix:gender]) {
            (void) [rows removeWithInt:i];
          }
        }
      }
    }
  }
  if (sort) {
    [JavaUtilCollections sortWithJavaUtilList:rows withJavaUtilComparator:[[CCPBVPatientSelect_$7 alloc] init]];
  }
  return rows;
}

- (void)populatePreviewWithRAREiContainer:(id<RAREiContainer>)fv
               withRARERenderableDataItem:(RARERenderableDataItem *)row {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:CCPBVPatientSelect_NAME];
  NSString *mrn = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_MRN])) getValue], [NSString class]);
  NSString *s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(item)) getLinkedData], [NSString class]);
  [((id<RAREiWidget>) nil_chk([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"patient"])) setValueWithId:s];
  if ((mrn != nil) && ([mrn sequenceLength] > 0)) {
    s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@" (%@)", mrn]];
  }
  id<RAREiWidget> field = [fv getWidgetWithNSString:@"mrn"];
  if (field != nil) {
    [field setValueWithId:mrn];
  }
  [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"age_sex"])) setValueWithId:[((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_DOB])) getLinkedData]];
  item = [row getWithInt:CCPBVPatientSelect_ADMIT_DATE];
  [((RARERenderableDataItem *) nil_chk(item)) setTypeWithInt:RARERenderableDataItem_TYPE_DATETIME];
  s = [item description];
  [((id<RAREiWidget>) nil_chk([fv getWidgetWithNSString:@"admit_date"])) setValueWithId:s];
  item = [row getWithInt:CCPBVPatientSelect_ADMIT_DX];
  s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(item)) getValue], [NSString class]);
  field = [fv getWidgetWithNSString:@"admit_dx"];
  if (field != nil) {
    [field setValueWithId:s];
  }
  item = [row getWithInt:CCPBVPatientSelect_LOCATION];
  NSString *loc = [((RARERenderableDataItem *) nil_chk(item)) description];
  if ((loc == nil) || ([@"" isEqual:loc])) {
    loc = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.unknownLocation"];
  }
  field = [fv getWidgetWithNSString:@"location"];
  if (field != nil) {
    [field setValueWithId:loc];
  }
  item = [row getWithInt:CCPBVPatientSelect_RM_BED];
  s = [((RARERenderableDataItem *) nil_chk(item)) description];
  if ((s == nil) || ([@"" isEqual:s])) {
    s = @"";
  }
  field = [fv getWidgetWithNSString:@"rmbed"];
  if (field != nil) {
    [field setValueWithId:s];
  }
  field = [fv getWidgetWithNSString:@"location_rm_bed"];
  if (field != nil) {
    if ([((NSString *) nil_chk(s)) sequenceLength] > 0) {
      [field setValueWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.format.location_rm_bed" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ loc, s } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
    else {
      [field setValueWithId:loc];
    }
  }
  s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_PHOTO])) getValue], [NSString class]);
  RAREImagePaneViewer *ip = (RAREImagePaneViewer *) check_class_cast([fv getWidgetWithNSString:@"photo"], [RAREImagePaneViewer class]);
  if (ip != nil) {
    RAREUIImageIcon *icon = (RAREUIImageIcon *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:0])) getIcon], [RAREUIImageIcon class]);
    if (icon != nil) {
      [ip setImageWithRAREUIImage:[icon getImage]];
    }
    else {
      [ip setImageWithRAREUIImage:nil];
    }
  }
}

- (id<JavaUtilList>)processPatientsListWithRARETableViewer:(RARETableViewer *)widget
                                          withJavaUtilList:(id<JavaUtilList>)rows
                                               withBoolean:(BOOL)checkForSignal {
  RARERenderableDataItem *row, *item, *nameItem;
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((RARETableViewer *) nil_chk(widget)) getAppContext])) getWindowViewer];
  RAREUTSNumber *num = [[RAREUTSNumber alloc] init];
  [widget clear];
  int len = rows == nil ? 0 : [rows size];
  if (len == 0) {
    return [JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ noPatientsFound_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  NSString *s;
  JavaUtilDate *date;
  RAREUTCharArray *ca = [[RAREUTCharArray alloc] init];
  BOOL small = ![RAREUIScreen isLargeScreen];
  RAREUTCharArray *sb = [[RAREUTCharArray alloc] initWithInt:64];
  for (int i = len - 1; i >= 0; i--) {
    row = [((id<JavaUtilList>) nil_chk(rows)) getWithInt:i];
    item = [((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(row)) getWithInt:CCPBVPatientSelect_NAME])) copy__];
    nameItem = item;
    (void) [row setWithInt:CCPBVPatientSelect_NAME withId:item];
    s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(item)) getValue], [NSString class]);
    [item setLinkedDataWithId:s];
    (void) [sb setWithNSString:s];
    (void) [sb toTitleCase];
    s = [sb description];
    [item setLinkedDataWithId:s];
    (void) [sb setWithNSString:@"<html><b>"];
    (void) [sb appendWithNSString:s];
    s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_MRN])) getValue], [NSString class]);
    NSString *sex = [nil_chk([((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_GENDER])) getValue]) description];
    if (small && ([((NSString *) nil_chk(sex)) sequenceLength] > 1)) {
      sex = [sex substring:0 endIndex:1];
    }
    (void) [sb appendWithNSString:@"</b> Age/Sex: <b>"];
    int asstart = [sb sequenceLength];
    item = [row getItemWithInt:CCPBVPatientSelect_DOB];
    [((RARERenderableDataItem *) nil_chk(item)) setTypeWithInt:RARERenderableDataItem_TYPE_DATE];
    date = (JavaUtilDate *) check_class_cast([item getValue], [JavaUtilDate class]);
    if (date != nil) {
      (void) [sb appendWithInt:[CCPBVUtils calculateAgeWithId:date]];
    }
    (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:@"/"])) appendWithNSString:sex];
    [item setLinkedDataWithId:[sb substringWithInt:asstart]];
    (void) [sb appendWithNSString:@"<br/>"];
    s = [((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_LOCATION])) description];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      (void) [sb appendWithNSString:@"</b> Loc: <b>"];
      (void) [sb appendWithNSString:s];
      s = [((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_RM_BED])) description];
      if ((s != nil) && ([s sequenceLength] > 0)) {
        (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:@"</b> Rm: <b>"])) appendWithNSString:s];
        (void) [ca setWithNSString:s];
        (void) [ca replaceWithChar:'-' withChar:'.'];
        (void) [num setValueWithCharArray:ca->A_ withInt:0 withInt:ca->_length_];
        (void) [num shiftDecimalWithInt:[num scale__]];
        [((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_RM_BED])) setLinkedDataWithId:[JavaLangDouble valueOfWithDouble:[num doubleValue]]];
      }
    }
    if (checkForSignal) {
      item = [row getItemExWithInt:CCPBVPatientSelect_SIGNAL];
      if (item != nil) {
        int signal = [item intValue];
        if (signal > 0) {
          if (signal > 5) {
            signal = 5;
          }
          item = [row getWithInt:2];
          [((RARERenderableDataItem *) nil_chk(item)) setIconWithRAREiPlatformIcon:IOSObjectArray_Get(nil_chk(CCPBVPatientSelect_signalIcons_), signal - 1)];
        }
      }
    }
    (void) [sb appendWithNSString:@"</b></html>"];
    s = [sb description];
    [((RARERenderableDataItem *) nil_chk(nameItem)) setValueWithId:s];
    [row setValueWithId:s];
    if ([row isEnabled]) {
      [((RARERenderableDataItem *) nil_chk([row getWithInt:0])) setIconWithRAREiPlatformIcon:[CCPBVPatientSelect getThimbnailWithRAREWindowViewer:w withNSString:(NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_PHOTO])) getValue], [NSString class])]];
    }
  }
  return rows;
}

- (void)showNearbyPatientsWithRAREiWidget:(id<RAREiWidget>)widget {
  locatorWidget_ = widget;
  [((CCPBVaPatientLocator *) nil_chk(patientLocator_)) setChangeListenerWithRAREiChangeListener:self];
  [patientLocator_ startListeningForNearbyPatients];
  if (searchingForPatients_ == nil) {
    searchingForPatients_ = [CCPBVUtils createDisabledTableRowWithNSString:@"bv.text.search_dots" withInt:1];
  }
  [((RARETableViewer *) nil_chk(patientsTable_)) clear];
  [patientsTable_ addWithId:searchingForPatients_];
}

- (void)showPreviewWithRARETableViewer:(RARETableViewer *)widget {
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(widget)) getSelectedItem];
  id<RAREiContainer> fv = [widget getFormViewer];
  if ((row == nil) || ![row isSelectable]) {
    [self clearPreviewWithRAREiContainer:fv];
    return;
  }
  id<RAREiWidget> patient = [((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"patient"];
  if ([((id<RAREiWidget>) nil_chk(patient)) getLinkedData] == row) {
    return;
  }
  [patient setEnabledWithBoolean:YES];
  [patient setLinkedDataWithId:row];
  [self populatePreviewWithRAREiContainer:fv withRARERenderableDataItem:row];
}

- (id<RAREUTiFilter>)createPatientNameFilterWithNSString:(NSString *)filter {
  id<RAREUTiFilter> f = nil;
  int i = [((NSString *) nil_chk(filter)) indexOf:','];
  if (i != -1) {
    filter = [NSString stringWithFormat:@"%@.*,\\s*%@.*", [filter substring:0 endIndex:i], [filter substring:i + 1]];
    f = [RAREFunctions createRegExFilterWithNSString:filter withBoolean:NO];
  }
  i = [filter indexOf:' '];
  if (i != -1) {
    filter = [NSString stringWithFormat:@"%@.*,\\s*%@.*", [filter substring:i + 1], [filter substring:0 endIndex:i]];
    f = [RAREFunctions createRegExFilterWithNSString:filter withBoolean:NO];
  }
  if (f == nil) {
    f = [RAREFunctions createContainsFilterWithNSString:filter withBoolean:YES];
  }
  return f;
}

- (BOOL)areSamePatientsInSameOrderWithJavaUtilList:(id<JavaUtilList>)list
                               withRARETableViewer:(RARETableViewer *)table {
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  if ([((RARETableViewer *) nil_chk(table)) size] != len) {
    return NO;
  }
  for (int i = 0; i < len; i++) {
    if (![((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk([list getWithInt:i])) getWithInt:0])) valueEqualsWithId:[table getValueAtWithInt:i withInt:0]]) {
      return NO;
    }
  }
  return YES;
}

- (void)patientsTableUpdatedWithRARETableViewer:(RARETableViewer *)table
                             withRAREActionLink:(RAREActionLink *)link
                                    withBoolean:(BOOL)empty {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if ([CCPBVUtils isCardStack]) {
    id<RAREiActionListener> al = psActionListener_;
    if (al == nil) {
      al = psActionListener_ = [[CCPBVPatientSelect_CardPatientSelectionActionListener alloc] initWithCCPBVPatientSelect:self];
    }
    int len = [((RARETableViewer *) nil_chk(table)) size];
    JavaUtilArrayList *list = [[JavaUtilArrayList alloc] initWithInt:len];
    for (int i = 0; i < len; i++) {
      RARERenderableDataItem *row = [table getWithInt:i];
      id<RAREiPlatformIcon> icon = [((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(row)) getWithInt:0])) getIcon];
      if (icon == nil) {
        continue;
      }
      RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([row getWithInt:CCPBVPatientSelect_NAME])) copy__];
      id<RAREiPlatformIcon> signal = [((RARERenderableDataItem *) nil_chk([row getWithInt:2])) getIcon];
      if (signal != nil) {
        RAREUICompoundIcon *ci = [[RAREUICompoundIcon alloc] initWithRAREiPlatformIcon:signal withRAREiPlatformIcon:icon];
        [((RARERenderableDataItem *) nil_chk(item)) setIconWithRAREiPlatformIcon:ci];
      }
      else {
        [((RARERenderableDataItem *) nil_chk(item)) setIconWithRAREiPlatformIcon:icon];
      }
      [((RARERenderableDataItem *) nil_chk(item)) setActionListenerWithRAREiActionListener:al];
      [list addWithId:item];
      [item setLinkedDataWithId:[JavaLangInteger valueOfWithInt:i]];
    }
    [CCPBVUtils pushWorkspaceViewerWithRAREiViewer:[CCPBVCardStackUtils createListItemsOrPageViewerWithNSString:nil withRAREiContainer:w withJavaUtilList:list withInt:3 withInt:-1 withRAREiActionListener:nil withBoolean:YES withBoolean:NO]];
  }
  else {
    NSString *pn = nil;
    id<RAREiFormViewer> fv = [((RARETableViewer *) nil_chk(table)) getFormViewer];
    if ([((RAREActionLink *) nil_chk(link)) getAttributes] != nil) {
      [((JavaUtilArrayList *) nil_chk(pagingStack_)) addWithId:link];
      pn = link == nil ? nil : [link getPagingNext];
      if (pn != nil) {
        RAREActionLink *l = (RAREActionLink *) check_class_cast([link clone], [RAREActionLink class]);
        [((RAREActionLink *) nil_chk(l)) setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum POST]];
        [((id<JavaUtilMap>) nil_chk([l getAttributes])) putAllWithJavaUtilMap:[RAREUTCharScanner parseOptionStringWithNSString:pn withChar:'^']];
        pagingNext_ = l;
      }
    }
    else {
      [((JavaUtilArrayList *) nil_chk(pagingStack_)) clear];
    }
    RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiFormViewer>) nil_chk(fv)) getWidgetWithNSString:@"nextPage"], [RAREaGroupableButton class]);
    if (pb != nil) {
      [pb setEnabledWithBoolean:pagingNext_ != nil];
    }
    pb = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"previousPage"], [RAREaGroupableButton class]);
    if (pb != nil) {
      [pb setEnabledWithBoolean:[((JavaUtilArrayList *) nil_chk(pagingStack_)) size] > 1];
    }
  }
}

- (void)stopListeningForNearbyPatients {
  if (patientLocator_ != nil) {
    [patientLocator_ stopListeningForNearbyPatients];
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    id<RAREiContainer> fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"patientSelectionForm"], @protocol(RAREiContainer));
    RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiContainer>) nil_chk(fv)) getWidgetWithNSString:@"signalButton"], [RAREaGroupableButton class]);
    if (pb != nil) {
      RAREUISpriteIcon *icon = (RAREUISpriteIcon *) check_class_cast([pb getIcon], [RAREUISpriteIcon class]);
      if ([RAREUIScreen isLargeScreen]) {
        [pb setVisibleWithBoolean:NO];
        fv = (id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"searchForm"], @protocol(RAREiContainer));
        if (fv != nil) {
          pb = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"bv.action.nearby_patients"], [RAREaGroupableButton class]);
          if (pb != nil) {
            [pb setEnabledWithBoolean:YES];
          }
        }
      }
      else {
        [((RAREUISpriteIcon *) nil_chk(icon)) setFrozenWithBoolean:YES];
      }
    }
    if ([((RARETableViewer *) nil_chk(patientsTable_)) size] == 1 && [patientsTable_ getWithInt:0] == searchingForPatients_) {
      [patientsTable_ setAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ noPatientsFound_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
  }
}

+ (void)changePatientWithRAREiWidget:(id<RAREiWidget>)context
                 withCCPBVActionPath:(CCPBVActionPath *)path {
  if (![CCPBVOrderManager canChangePatientOrExitWithBoolean:NO withCCPBVActionPath:path]) {
    return;
  }
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  [((id<RAREiPlatformAppContext>) nil_chk(app)) closePopupWindowsWithBoolean:YES];
  NSString *id_ = path == nil ? nil : [path shift];
  [CCPBVUtils toggleActionsWithBoolean:NO];
  if ((id_ == nil) || ([id_ sequenceLength] == 0)) {
    [CCPBVUtils setActionPathWithCCPBVActionPath:[[CCPBVActionPath alloc] init]];
    [CCPBVPatientSelect showPatientSelectViewWithRAREiWidget:context];
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiFunctionCallback> cb = [[CCPBVPatientSelect_$8 alloc] initWithRAREWindowViewer:w withRAREiWidget:context withRAREiPlatformAppContext:app withCCPBVActionPath:path];
  [CCPBVPatientSelect loadPatientExWithRAREiWidget:context withNSString:id_ withRAREiFunctionCallback:cb];
  [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
}

+ (void)clearoutPatientCentricInfo {
  [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) clearDataWithNSString:@"pt_"];
  (void) [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) removeDataWithId:@"patient"];
  [((CCPBVCollectionManager *) nil_chk([CCPBVCollectionManager getInstance])) clear];
  [CCPBVUtils resetActionBar];
}

+ (BOOL)isShowing {
  return [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"patientSelectionForm"] != nil;
}

+ (void)showPatientSelectViewWithRAREiWidget:(id<RAREiWidget>)widget {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiFunctionCallback> cb = [[CCPBVPatientSelect_$9 alloc] initWithRAREWindowViewer:w];
  @try {
    (void) [((RAREWindowViewer *) nil_chk(w)) createViewerWithNSString:@"patient_select.rml" withRAREiFunctionCallback:cb];
    [w showWaitCursor];
  }
  @catch (JavaLangException *e) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:e];
  }
}

+ (void)establishRelationshipWithRAREiWidget:(id<RAREiWidget>)context
                                withNSString:(NSString *)patientID
                                withNSString:(NSString *)relationship
                   withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if ([CCPBVUtils isDemo]) {
    [((id<RAREiFunctionCallback>) nil_chk(cb)) finishedWithBoolean:NO withId:relationship];
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiWorkerTask> task = [[CCPBVPatientSelect_$10 alloc] initWithRAREWindowViewer:w withNSString:patientID withNSString:relationship withRAREiFunctionCallback:cb];
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  [w showProgressPopupWithJavaLangCharSequence:[w getStringWithNSString:@"bv.text.establish_relationship"]];
}

+ (id<RAREiPlatformIcon>)getThimbnailWithRAREWindowViewer:(RAREWindowViewer *)w
                                             withNSString:(NSString *)s {
  RAREActionLink *link = nil;
  if ((s != nil) && ([s sequenceLength] > 0)) {
    link = [CCPBVUtils createPhotosActionLinkWithNSString:s withBoolean:YES];
  }
  if (link != nil) {
    id<RAREiPlatformIcon> icon;
    @try {
      icon = [((RAREWindowViewer *) nil_chk(w)) getIconWithJavaNetURL:[link getURLWithRAREiWidget:w] withNSString:s withFloat:1];
      if ([(id) icon isKindOfClass:[RAREUIImageIcon class]]) {
        [((RAREUIImageIcon *) check_class_cast(icon, [RAREUIImageIcon class])) setImageBorderWithRAREiPlatformBorder:CCPBVPatientSelect_photoBorder_];
      }
      return icon;
    }
    @catch (JavaNetMalformedURLException *e) {
      [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
    }
  }
  return CCPBVPatientSelect_noPhotoIcon_;
}

+ (void)loadPatientExWithRAREiWidget:(id<RAREiWidget>)widget
                        withNSString:(NSString *)id_
           withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getAppContext])) getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVPatientSelect_$11 alloc] initWithRAREWindowViewer:w withNSString:id_ withRAREiFunctionCallback:cb];
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

+ (void)processPatientDataWithRAREUTJSONObject:(RAREUTJSONObject *)patient {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  [((id<RAREiPlatformAppContext>) nil_chk(app)) clearDataWithNSString:@"pt_"];
  (void) [app putDataWithId:@"patient" withId:patient];
  NSString *name;
  NSString *mrn;
  RAREUTCharArray *ca = [[RAREUTCharArray alloc] init];
  (void) [app putDataWithId:@"pt_name" withId:name = [((RAREUTJSONObject *) nil_chk(patient)) getStringWithNSString:@"name"]];
  (void) [app putDataWithId:@"pt_mrn" withId:mrn = [patient getStringWithNSString:@"mrn"]];
  name = [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([ca setWithNSString:name])) toTitleCase])) description];
  if (mrn != nil && [mrn sequenceLength] > 0) {
    (void) [app putDataWithId:@"pt_name_mrn" withId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.format.name_mrn" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name, mrn } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  else {
    (void) [app putDataWithId:@"pt_name_mrn" withId:name];
  }
  (void) [app putDataWithId:@"pt_room_bed" withId:[patient optStringWithNSString:@"rm_bed"]];
  (void) [app putDataWithId:@"pt_location" withId:[patient optStringWithNSString:@"location" withNSString:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.unknownLocation"]]];
  NSString *s;
  NSString *sex = [patient optStringWithNSString:@"gender"];
  (void) [app putDataWithId:@"pt_gender" withId:sex];
  id obj = [patient optWithNSString:@"dob"];
  JavaUtilDate *date = nil;
  if ([obj isKindOfClass:[NSString class]]) {
    @try {
      date = [RAREFunctions parseDateStringWithRAREiWidget:w withNSString:(NSString *) check_class_cast(obj, [NSString class])];
    }
    @catch (JavaTextParseException *e) {
      [RAREPlatform ignoreExceptionWithNSString:[NSString stringWithFormat:@"couldn't parse dob value:%@", obj] withJavaLangThrowable:e];
    }
    if (date != nil) {
      (void) [patient putWithNSString:@"dob" withId:date];
    }
  }
  else if ([obj isKindOfClass:[JavaUtilDate class]]) {
    date = (JavaUtilDate *) check_class_cast(obj, [JavaUtilDate class]);
  }
  if (date != nil) {
    int age = [CCPBVUtils calculateAgeWithId:date];
    (void) [patient putWithNSString:@"age" withInt:age];
    (void) [app putDataWithId:@"pt_age" withId:s = [RAREUTStringCache valueOfWithInt:age]];
    (void) [app putDataWithId:@"pt_age_sex" withId:[NSString stringWithFormat:@"%@/%@", s, sex]];
  }
  else {
    (void) [app putDataWithId:@"pt_age_sex" withId:[NSString stringWithFormat:@"/%@", sex]];
  }
  (void) [app putDataWithId:@"pt_name_age_sex" withId:[w getStringWithNSString:@"bv.format.name_age_gender" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name, [app getDataWithId:@"pt_age_sex"] } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
  obj = [patient optWithNSString:@"encounter_date"];
  date = nil;
  if ([obj isKindOfClass:[NSString class]]) {
    @try {
      date = [RAREFunctions parseDateStringWithRAREiWidget:w withNSString:(NSString *) check_class_cast(obj, [NSString class])];
    }
    @catch (JavaTextParseException *e) {
      [RAREPlatform ignoreExceptionWithNSString:[NSString stringWithFormat:@"couldn't parse encounter date value:%@", obj] withJavaLangThrowable:e];
    }
    if (date != nil) {
      (void) [patient putWithNSString:@"encounter_date" withId:date];
    }
  }
  else if ([obj isKindOfClass:[JavaUtilDate class]]) {
    date = (JavaUtilDate *) check_class_cast(obj, [JavaUtilDate class]);
  }
  s = @"";
  if (date != nil) {
    s = [RAREFunctions convertDateWithRAREiWidget:w withId:date];
  }
  (void) [app putDataWithId:@"pt_admit_date" withId:s];
  s = [patient optStringWithNSString:@"encounter_reason"];
  (void) [app putDataWithId:@"pt_admit_dx" withId:s == nil ? @"" : [RAREFunctions titleCaseWithNSString:s]];
  NSString *provider = [patient optStringWithNSString:@"provider_name"];
  s = [patient optStringWithNSString:@"attending_name"];
  if (provider == nil || [provider sequenceLength] == 0) {
    provider = s;
  }
  (void) [app putDataWithId:@"pt_provider" withId:[((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([ca setWithNSString:provider])) toTitleCase])) description]];
  obj = [patient optStringWithNSString:@"location"];
  if (obj == nil) {
    obj = [w getStringWithNSString:@"bv.text.unknown_location"];
  }
  s = [patient optStringWithNSString:@"rm_bed"];
  if (s != nil) {
    s = [w getStringWithNSString:@"bv.format.location_rmbd" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([ca setWithNSString:(NSString *) check_class_cast(obj, [NSString class])])) toTitleCase])) description], s } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  else {
    s = (NSString *) check_class_cast(obj, [NSString class]);
  }
  (void) [app putDataWithId:@"pt_location_rmbd" withId:s];
  s = [patient optStringWithNSString:@"code_status"];
  if (s == nil || [s sequenceLength] == 0) {
    s = [w getStringWithNSString:@"bv.text.code_status_not_specified"];
  }
  (void) [app putDataWithId:@"pt_code_status" withId:s];
  [CCPBVPatientSelect updateWeightHeightBMIWithRAREiPlatformAppContext:app withRAREUTJSONObject:patient];
  RAREUTJSONObject *li = (RAREUTJSONObject *) check_class_cast([app getDataWithId:@"labsInfo"], [RAREUTJSONObject class]);
  NSString *id_ = [((RAREUTJSONObject *) nil_chk(li)) optStringWithNSString:@"bun_id"];
  if (id_ != nil) {
    CCPBVClinicalValue *bun = [[CCPBVClinicalValue alloc] initWithNSString:id_ withNSString:@"BUN"];
    [bun setAttributNameWithNSString:@"pt_bun"];
    (void) [patient putWithNSString:@"cv_bun" withId:bun];
  }
  id_ = [li optStringWithNSString:@"creatinine_id"];
  if (id_ != nil) {
    CCPBVClinicalValue *bun = [[CCPBVClinicalValue alloc] initWithNSString:id_ withNSString:@"Creatinine"];
    [bun setAttributNameWithNSString:@"pt_creatinine"];
    (void) [patient putWithNSString:@"cv_creatinine" withId:bun];
  }
}

+ (void)showRelationshipPopupWithRAREWindowViewer:(RAREWindowViewer *)w
                                     withNSString:(NSString *)patientID
                                     withNSString:(NSString *)patientName
                        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  id<RAREiFunctionCallback> rcb = [[CCPBVPatientSelect_$12 alloc] initWithRAREiFunctionCallback:cb withRAREWindowViewer:w withNSString:patientID];
  NSString *title = [((RAREWindowViewer *) nil_chk(w)) expandStringWithNSString:[NSString stringWithFormat:@"<html>{resource:bv.text.relationship_prompt}<br/><b>%@</b></html>", patientName]];
  RAREActionLink *link;
  if ([CCPBVUtils isDemo]) {
    link = [CCPBVUtils createLinkWithRAREiWidget:w withNSString:@"/hub/main/util/lists/relationships" withBoolean:YES];
  }
  else {
    link = [CCPBVUtils createLinkWithRAREiWidget:w withNSString:[NSString stringWithFormat:@"/hub/main/util/lists/relationships/%@", patientID] withBoolean:YES];
  }
  [CCPBVUtils showPickListWithNSString:title withRAREActionLink:link withBoolean:NO withRAREiFunctionCallback:rcb withBoolean:YES];
}

+ (void)updateWeightHeightBMIWithRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)app
                                    withRAREUTJSONObject:(RAREUTJSONObject *)patient {
  float wt = 0;
  float ht = 0;
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  CCPBVSettings_AppPreferences *prefs = [CCPBVUtils getPreferences];
  BOOL metric_weight = [((CCPBVSettings_AppPreferences *) nil_chk(prefs)) getBooleanWithNSString:@"metric_weight" withBoolean:NO];
  BOOL metric_height = [prefs getBooleanWithNSString:@"metric_height" withBoolean:NO];
  RAREUTSNumber *num = [[RAREUTSNumber alloc] init];
  NSString *s = nil;
  id obj = [((RAREUTJSONObject *) nil_chk(patient)) optWithNSString:@"wt"];
  if ([obj isKindOfClass:[NSString class]]) {
    s = (NSString *) check_class_cast(obj, [NSString class]);
    (void) [num setValueWithNSString:s];
    if ([((NSString *) nil_chk(s)) contains:@"kg"]) {
      wt = [num floatValue];
      if (!metric_weight) {
        (void) [num multiplyWithDouble:2.2];
        (void) [num roundWithInt:0 withBoolean:YES];
        s = [NSString stringWithFormat:@"%@lb", [num description]];
      }
      else if ([s indexOf:' '] != -1) {
        s = [s replace:@" " withSequence:@""];
      }
    }
    else {
      (void) [num divideWithDouble:2.2];
      wt = [num floatValue];
      if (metric_weight) {
        (void) [num roundWithInt:2 withBoolean:NO];
        s = [NSString stringWithFormat:@"%@kg", [num description]];
      }
      else if ([s indexOf:' '] != -1) {
        s = [s replace:@" " withSequence:@""];
      }
    }
  }
  if (wt > 0) {
    (void) [sb appendWithNSString:s];
  }
  else {
    (void) [sb appendWithNSString:@"---"];
  }
  (void) [sb appendWithNSString:@"/"];
  obj = [patient optWithNSString:@"ht"];
  if ([obj isKindOfClass:[NSString class]]) {
    s = (NSString *) check_class_cast(obj, [NSString class]);
    (void) [num setValueWithNSString:s];
    if ([((NSString *) nil_chk(s)) contains:@"m"]) {
      ht = [num floatValue];
      if (!metric_height) {
        (void) [num multiplyWithDouble:39.37f];
        (void) [num roundWithInt:0 withBoolean:YES];
        s = [NSString stringWithFormat:@"%@in", [num description]];
      }
      else if ([s indexOf:' '] != -1) {
        s = [s replace:@" " withSequence:@""];
      }
    }
    else {
      (void) [num multiplyWithDouble:0.0254f];
      ht = [num floatValue];
      if (metric_height) {
        (void) [num roundWithInt:2 withBoolean:NO];
        s = [NSString stringWithFormat:@"%@m", [num description]];
      }
      else if ([s indexOf:' '] != -1) {
        s = [s replace:@" " withSequence:@""];
      }
    }
  }
  if (ht > 0) {
    (void) [sb appendWithNSString:s];
  }
  else {
    (void) [sb appendWithNSString:@"---"];
  }
  (void) [sb appendWithNSString:@"/"];
  NSString *bmi = @"";
  if ((wt > 0) && (ht > 0)) {
    (void) [sb appendWithNSString:bmi = [RAREUTSNumber toStringWithInt:[JavaLangMath roundWithFloat:wt / (ht * ht)]]];
  }
  else {
    (void) [sb appendWithNSString:@"---"];
  }
  (void) [((id<RAREiPlatformAppContext>) nil_chk(app)) putDataWithId:@"pt_wt_ht_bmi" withId:[sb description]];
  (void) [app putDataWithId:@"pt_bmi" withId:bmi];
}

+ (void)initialize {
  if (self == [CCPBVPatientSelect class]) {
    {
      CCPBVPatientSelect_signalIcons_ = [IOSObjectArray arrayWithLength:5 type:[IOSClass classWithProtocol:@protocol(RAREiPlatformIcon)]];
      for (int i = 0; i < 4; i++) {
        (void) IOSObjectArray_Set(CCPBVPatientSelect_signalIcons_, i, [RAREPlatform getResourceAsIconWithNSString:[NSString stringWithFormat:@"bv.icon.signal%d", (i + 1)]]);
      }
      (void) IOSObjectArray_Set(CCPBVPatientSelect_signalIcons_, 4, [RAREPlatform getResourceAsIconWithNSString:@"bv.icon.signal"]);
      CCPBVPatientSelect_photoBorder_ = [[RAREUILineBorder alloc] initWithRAREUIColor:[RAREColorUtils getColorWithNSString:@"darkBorder"] withFloat:[RAREUIScreen platformPixelsfWithFloat:1.25f] withFloat:[RAREUIScreen PLATFORM_PIXELS_6]];
      CCPBVPatientSelect_noPhotoIcon_ = (RAREUIImageIcon *) check_class_cast([RAREPlatform getResourceAsIconWithNSString:@"bv.icon.no_photo"], [RAREUIImageIcon class]);
      [((RAREUIImageIcon *) nil_chk(CCPBVPatientSelect_noPhotoIcon_)) setImageBorderWithRAREiPlatformBorder:CCPBVPatientSelect_photoBorder_];
    }
  }
}

- (void)copyAllFieldsTo:(CCPBVPatientSelect *)other {
  [super copyAllFieldsTo:other];
  other->autoShowDefaultList_ = autoShowDefaultList_;
  other->barcodeReader_ = barcodeReader_;
  other->barcodeReaderClass_ = barcodeReaderClass_;
  other->locatorWidget_ = locatorWidget_;
  other->nextHREF_ = nextHREF_;
  other->noPatientListLoaded_ = noPatientListLoaded_;
  other->noPatientsFound_ = noPatientsFound_;
  other->pagingNext_ = pagingNext_;
  other->pagingStack_ = pagingStack_;
  other->patientListLoaded_ = patientListLoaded_;
  other->patientLocator_ = patientLocator_;
  other->patientLocatorClass_ = patientLocatorClass_;
  other->patientsTable_ = patientsTable_;
  other->psActionListener_ = psActionListener_;
  other->searchPageSize_ = searchPageSize_;
  other->searchingForPatients_ = searchingForPatients_;
  other->selectionMenu_ = selectionMenu_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clearPreviewWithRAREiContainer:", NULL, "V", 0x4, NULL },
    { "loadPatientListWithRARETableViewer:withRAREActionLink:withNSString:withNSString:", NULL, "V", 0x4, NULL },
    { "loadPatientListExWithRARETableViewer:withRAREActionLink:withNSString:withNSString:withBoolean:", NULL, "LJavaUtilList", 0x4, "JavaLangException" },
    { "populatePreviewWithRAREiContainer:withRARERenderableDataItem:", NULL, "V", 0x4, NULL },
    { "processPatientsListWithRARETableViewer:withJavaUtilList:withBoolean:", NULL, "LJavaUtilList", 0x4, "JavaIoIOException" },
    { "showNearbyPatientsWithRAREiWidget:", NULL, "V", 0x4, NULL },
    { "showPreviewWithRARETableViewer:", NULL, "V", 0x4, NULL },
    { "createPatientNameFilterWithNSString:", NULL, "LRAREUTiFilter", 0x2, NULL },
    { "areSamePatientsInSameOrderWithJavaUtilList:withRARETableViewer:", NULL, "Z", 0x0, NULL },
    { "patientsTableUpdatedWithRARETableViewer:withRAREActionLink:withBoolean:", NULL, "V", 0x0, NULL },
    { "stopListeningForNearbyPatients", NULL, "V", 0x0, NULL },
    { "isShowing", NULL, "Z", 0x9, NULL },
    { "establishRelationshipWithRAREiWidget:withNSString:withNSString:withRAREiFunctionCallback:", NULL, "V", 0xc, NULL },
    { "getThimbnailWithRAREWindowViewer:withNSString:", NULL, "LRAREiPlatformIcon", 0xc, NULL },
    { "loadPatientExWithRAREiWidget:withNSString:withRAREiFunctionCallback:", NULL, "V", 0xc, NULL },
    { "processPatientDataWithRAREUTJSONObject:", NULL, "V", 0xc, NULL },
    { "showRelationshipPopupWithRAREWindowViewer:withNSString:withNSString:withRAREiFunctionCallback:", NULL, "V", 0xc, NULL },
    { "updateWeightHeightBMIWithRAREiPlatformAppContext:withRAREUTJSONObject:", NULL, "V", 0xc, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ADMIT_DATE_", NULL, 0x19, "I" },
    { "ADMIT_DX_", NULL, 0x19, "I" },
    { "DOB_", NULL, 0x19, "I" },
    { "DOCTOR_", NULL, 0x19, "I" },
    { "GENDER_", NULL, 0x19, "I" },
    { "ID_", NULL, 0x19, "I" },
    { "LOCATION_", NULL, 0x19, "I" },
    { "MRN_", NULL, 0x19, "I" },
    { "NAME_", NULL, 0x19, "I" },
    { "PHOTO_", NULL, 0x19, "I" },
    { "SIGNAL_", NULL, 0x19, "I" },
    { "RM_BED_", NULL, 0x19, "I" },
    { "lastPatientID_", NULL, 0x8, "LNSString" },
    { "lastTabName_", NULL, 0x8, "LNSString" },
    { "patientsTable_", NULL, 0x0, "LRARETableViewer" },
    { "locatorWidget_", NULL, 0x0, "LRAREiWidget" },
    { "patientLocator_", NULL, 0x0, "LCCPBVaPatientLocator" },
    { "barcodeReader_", NULL, 0x0, "LCCPBVaBarcodeReader" },
    { "signalIcons_", NULL, 0x8, "LIOSObjectArray" },
    { "photoBorder_", NULL, 0x9, "LRAREUILineBorder" },
    { "noPhotoIcon_", NULL, 0x9, "LRAREUIImageIcon" },
    { "barcodeReaderClass_", NULL, 0x0, "LIOSClass" },
    { "patientLocatorClass_", NULL, 0x0, "LIOSClass" },
    { "patientListLoaded_", NULL, 0x0, "LRARERenderableDataItem" },
    { "noPatientsFound_", NULL, 0x0, "LRARERenderableDataItem" },
    { "noPatientListLoaded_", NULL, 0x0, "LRARERenderableDataItem" },
    { "searchingForPatients_", NULL, 0x0, "LRARERenderableDataItem" },
    { "autoShowDefaultList_", NULL, 0x0, "Z" },
    { "pagingStack_", NULL, 0x0, "LJavaUtilArrayList" },
    { "pagingNext_", NULL, 0x0, "LRAREActionLink" },
    { "nextHREF_", NULL, 0x0, "LNSString" },
    { "searchPageSize_", NULL, 0x0, "I" },
    { "psActionListener_", NULL, 0x0, "LCCPBVPatientSelect_CardPatientSelectionActionListener" },
    { "PATIENT_SELECTION_TYPE_", NULL, 0x18, "LNSString" },
    { "PATIENT_SELECT_PAGE_", NULL, 0x18, "LNSString" },
    { "PATIENT_SELECT_", NULL, 0x18, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect = { "PatientSelect", "com.sparseware.bellavista", NULL, 0x1, 18, methods, 36, fields, 0, NULL};
  return &_CCPBVPatientSelect;
}

@end
@implementation CCPBVPatientSelect_CardPatientSelectionActionListener

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RARERenderableDataItem *item = (RARERenderableDataItem *) check_class_cast([((RAREActionEvent *) nil_chk(e)) getSource], [RARERenderableDataItem class]);
  RARERenderableDataItem *row = [((RARETableViewer *) nil_chk(this$0_->patientsTable_)) getWithInt:[(JavaLangInteger *) check_class_cast([((RARERenderableDataItem *) nil_chk(item)) getLinkedData], [JavaLangInteger class]) intValue]];
  NSString *id_ = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(row)) getWithInt:0])) getValue], [NSString class]);
  RAREUIImageIcon *icon = (RAREUIImageIcon *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:0])) getIcon], [RAREUIImageIcon class]);
  id<RAREiFunctionCallback> cb = [[CCPBVPatientSelect_CardPatientSelectionActionListener_$1 alloc] initWithRAREWindowViewer:w withRAREUIImageIcon:icon];
  [CCPBVPatientSelect loadPatientExWithRAREiWidget:w withNSString:id_ withRAREiFunctionCallback:cb];
  [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
}

- (id)initWithCCPBVPatientSelect:(CCPBVPatientSelect *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVPatientSelect" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_CardPatientSelectionActionListener = { "CardPatientSelectionActionListener", "com.sparseware.bellavista", "PatientSelect", 0x0, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVPatientSelect_CardPatientSelectionActionListener;
}

@end
@implementation CCPBVPatientSelect_CardPatientSelectionActionListener_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    (void) [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) putDataWithId:@"pt_thumbnail" withId:val$icon_];
    [CCPBVUtils showMainView];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
           withRAREUIImageIcon:(RAREUIImageIcon *)capture$1 {
  val$w_ = capture$0;
  val$icon_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$icon_", NULL, 0x1012, "LRAREUIImageIcon" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_CardPatientSelectionActionListener_$1 = { "$1", "com.sparseware.bellavista", "PatientSelect$CardPatientSelectionActionListener", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVPatientSelect_CardPatientSelectionActionListener_$1;
}

@end
@implementation CCPBVPatientSelect_MenuActionListener

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  RAREUIMenuItem *mi = (RAREUIMenuItem *) check_class_cast([((RAREActionEvent *) nil_chk(e)) getSource], [RAREUIMenuItem class]);
  NSString *name = [((RAREUIMenuItem *) nil_chk(mi)) getName];
  [CCPBVUtils setFirstSelectedTabWithNSString:name];
  RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([mi getContextWidget], [RAREaGroupableButton class]);
  [((RAREaGroupableButton *) nil_chk(pb)) click];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVPatientSelect_MenuActionListener = { "MenuActionListener", "com.sparseware.bellavista", "PatientSelect", 0x8, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVPatientSelect_MenuActionListener;
}

@end
@implementation CCPBVPatientSelect_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [CCPBVUtils setIgnorePausingWithBoolean:NO];
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([((id<RAREiWidget>) nil_chk(val$widget_)) isDisposed]) {
    return;
  }
  if (returnValue == nil) {
    [val$w_ beep];
  }
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils alertWithId:[RAREApplicationException getMessageExWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])]];
  }
  else {
    if (returnValue == nil) {
      returnValue = [JavaUtilCollections EMPTY_LIST];
    }
    @try {
      (void) [this$0_ processPatientsListWithRARETableViewer:this$0_->patientsTable_ withJavaUtilList:(id<JavaUtilList>) check_protocol_cast(returnValue, @protocol(JavaUtilList)) withBoolean:NO];
    }
    @catch (JavaLangException *e) {
      [CCPBVUtils handleErrorWithJavaLangThrowable:e];
    }
  }
}

- (id)initWithCCPBVPatientSelect:(CCPBVPatientSelect *)outer$
            withRAREWindowViewer:(RAREWindowViewer *)capture$0
                 withRAREiWidget:(id<RAREiWidget>)capture$1 {
  this$0_ = outer$;
  val$w_ = capture$0;
  val$widget_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVPatientSelect" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$1 = { "$1", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVPatientSelect_$1;
}

@end
@implementation CCPBVPatientSelect_$2

- (void)run {
  [this$0_ loadPatientListWithRARETableViewer:(RARETableViewer *) check_class_cast(val$widget_, [RARETableViewer class]) withRAREActionLink:[CCPBVUtils createLinkWithRAREiWidget:this$0_->patientsTable_ withNSString:@"/hub/main/util/patients/list" withBoolean:YES] withNSString:nil withNSString:nil];
}

- (id)initWithCCPBVPatientSelect:(CCPBVPatientSelect *)outer$
                 withRAREiWidget:(id<RAREiWidget>)capture$0 {
  this$0_ = outer$;
  val$widget_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVPatientSelect" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$2 = { "$2", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVPatientSelect_$2;
}

@end
@implementation CCPBVPatientSelect_$3

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    (void) [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) putDataWithId:@"pt_thumbnail" withId:val$icon_];
    [CCPBVUtils showMainView];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
           withRAREUIImageIcon:(RAREUIImageIcon *)capture$1 {
  val$w_ = capture$0;
  val$icon_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$icon_", NULL, 0x1012, "LRAREUIImageIcon" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$3 = { "$3", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVPatientSelect_$3;
}

@end
@implementation CCPBVPatientSelect_$4

- (int)compareWithId:(RARERenderableDataItem *)o1
              withId:(RARERenderableDataItem *)o2 {
  RARERenderableDataItem *rb1 = [((RARERenderableDataItem *) nil_chk(o1)) getItemExWithInt:CCPBVPatientSelect_RM_BED];
  RARERenderableDataItem *rb2 = [((RARERenderableDataItem *) nil_chk(o2)) getItemExWithInt:CCPBVPatientSelect_RM_BED];
  if ((rb1 == nil) || (rb2 == nil)) {
    if (rb1 == nil) {
      return (rb2 == nil) ? 0 : 1;
    }
    return -1;
  }
  return (int) ([((JavaLangDouble *) check_class_cast([((RARERenderableDataItem *) nil_chk(rb1)) getLinkedData], [JavaLangDouble class])) doubleValue] - [((JavaLangDouble *) check_class_cast([((RARERenderableDataItem *) nil_chk(rb2)) getLinkedData], [JavaLangDouble class])) doubleValue]);
}

- (BOOL)isEqual:(id)param0 {
  return [super isEqual:param0];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVPatientSelect_$4 = { "$4", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVPatientSelect_$4;
}

@end
@implementation CCPBVPatientSelect_$5

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (this$0_->locatorWidget_ != nil && ![this$0_->locatorWidget_ isDisposed] && [this$0_->locatorWidget_ isShowing] && this$0_->patientLocator_ != nil) {
    if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
      [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
    }
    else {
      @try {
        RARETableViewer *table = this$0_->patientsTable_;
        id<JavaUtilList> list = (id<JavaUtilList>) check_protocol_cast(returnValue, @protocol(JavaUtilList));
        if ([this$0_ areSamePatientsInSameOrderWithJavaUtilList:list withRARETableViewer:table]) {
          int len = [((id<JavaUtilList>) nil_chk(list)) size];
          for (int i = 0; i < len; i++) {
            if (![((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk([list getWithInt:i])) getWithInt:CCPBVPatientSelect_SIGNAL])) valueEqualsWithId:[((RARERenderableDataItem *) nil_chk([((RARETableViewer *) nil_chk(table)) getWithInt:i])) getWithInt:CCPBVPatientSelect_SIGNAL]]) {
              [table rowChangedWithInt:i];
            }
          }
        }
        else {
          [((RARETableViewer *) nil_chk(this$0_->patientsTable_)) setAllWithJavaUtilCollection:[this$0_ processPatientsListWithRARETableViewer:this$0_->patientsTable_ withJavaUtilList:(id<JavaUtilList>) check_protocol_cast(returnValue, @protocol(JavaUtilList)) withBoolean:YES]];
        }
      }
      @catch (JavaLangException *e) {
        [CCPBVUtils handleErrorWithJavaLangThrowable:e];
      }
    }
  }
}

- (id)initWithCCPBVPatientSelect:(CCPBVPatientSelect *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVPatientSelect" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$5 = { "$5", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVPatientSelect_$5;
}

@end
@implementation CCPBVPatientSelect_$6

- (id)compute {
  @try {
    id<JavaUtilList> rows = [this$0_ loadPatientListExWithRARETableViewer:val$table_ withRAREActionLink:val$link_ withNSString:val$filter_ withNSString:val$gender_ withBoolean:NO];
    rows = [this$0_ processPatientsListWithRARETableViewer:val$table_ withJavaUtilList:rows withBoolean:NO];
    return rows;
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if (![((RARETableViewer *) nil_chk(val$table_)) isDisposed]) {
    if ([result isKindOfClass:[JavaLangException class]]) {
      [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangException *) check_class_cast(result, [JavaLangException class])];
    }
    else {
      @try {
        BOOL empty = NO;
        if ([((RAREActionLink *) nil_chk(val$link_)) isCollection]) {
          RAREaListViewer *lb = (RAREaListViewer *) check_class_cast([val$w_ getViewerWithNSString:@"listsBox"], [RAREaListViewer class]);
          if (lb != nil) {
            [lb setAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ this$0_->patientListLoaded_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
          }
        }
        id<JavaUtilList> rows = (id<JavaUtilList>) check_protocol_cast(result, @protocol(JavaUtilList));
        [val$table_ resetDataWithJavaUtilList:rows];
        [this$0_ patientsTableUpdatedWithRARETableViewer:val$table_ withRAREActionLink:val$link_ withBoolean:empty];
        if (![CCPBVUtils isCardStack]) {
          RAREStackPaneViewer *sp = (RAREStackPaneViewer *) check_class_cast([val$w_ getWidgetWithNSString:@"selectionStack"], [RAREStackPaneViewer class]);
          if (empty) {
            if (sp != nil) {
              if ([sp getActiveViewerIndex] != 0) {
                [CCPBVUtils alertWithId:[val$w_ getStringWithNSString:@"bv.text.no_patients_found"]];
              }
            }
          }
          else {
            if (sp != nil) {
              [sp switchToWithInt:0];
            }
            [val$table_ setSelectedIndexWithInt:0];
            [this$0_ showPreviewWithRARETableViewer:val$table_];
          }
        }
      }
      @catch (JavaLangException *e) {
        [CCPBVUtils handleErrorWithJavaLangThrowable:e];
      }
    }
  }
}

- (id)initWithCCPBVPatientSelect:(CCPBVPatientSelect *)outer$
             withRARETableViewer:(RARETableViewer *)capture$0
              withRAREActionLink:(RAREActionLink *)capture$1
                    withNSString:(NSString *)capture$2
                    withNSString:(NSString *)capture$3
            withRAREWindowViewer:(RAREWindowViewer *)capture$4 {
  this$0_ = outer$;
  val$table_ = capture$0;
  val$link_ = capture$1;
  val$filter_ = capture$2;
  val$gender_ = capture$3;
  val$w_ = capture$4;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVPatientSelect" },
    { "val$table_", NULL, 0x1012, "LRARETableViewer" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
    { "val$filter_", NULL, 0x1012, "LNSString" },
    { "val$gender_", NULL, 0x1012, "LNSString" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$6 = { "$6", "com.sparseware.bellavista", "PatientSelect", 0x8000, 1, methods, 6, fields, 0, NULL};
  return &_CCPBVPatientSelect_$6;
}

@end
@implementation CCPBVPatientSelect_$7

- (int)compareWithId:(RARERenderableDataItem *)o1
              withId:(RARERenderableDataItem *)o2 {
  o1 = [((RARERenderableDataItem *) nil_chk(o1)) getItemExWithInt:1];
  o2 = [((RARERenderableDataItem *) nil_chk(o2)) getItemExWithInt:1];
  return [((RARERenderableDataItem *) nil_chk(o1)) compareToWithId:o2];
}

- (BOOL)isEqual:(id)param0 {
  return [super isEqual:param0];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVPatientSelect_$7 = { "$7", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVPatientSelect_$7;
}

@end
@implementation CCPBVPatientSelect_$8

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if (canceled) {
    if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
      [RAREPlatform ignoreExceptionWithNSString:@"failed to load patient from path" withJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
    }
    [CCPBVUtils setActionPathWithCCPBVActionPath:[[CCPBVActionPath alloc] init]];
    [CCPBVPatientSelect showPatientSelectViewWithRAREiWidget:val$context_];
  }
  else {
    NSString *photo = [((RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk(val$app_)) getDataWithId:@"patient"], [RAREUTJSONObject class])) optStringWithNSString:@"photo" withNSString:nil];
    (void) [val$app_ putDataWithId:@"pt_thumbnail" withId:[CCPBVPatientSelect getThimbnailWithRAREWindowViewer:val$w_ withNSString:photo]];
    [CCPBVUtils setActionPathWithCCPBVActionPath:val$path_];
    [CCPBVUtils showMainView];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
               withRAREiWidget:(id<RAREiWidget>)capture$1
   withRAREiPlatformAppContext:(id<RAREiPlatformAppContext>)capture$2
           withCCPBVActionPath:(CCPBVActionPath *)capture$3 {
  val$w_ = capture$0;
  val$context_ = capture$1;
  val$app_ = capture$2;
  val$path_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$context_", NULL, 0x1012, "LRAREiWidget" },
    { "val$app_", NULL, 0x1012, "LRAREiPlatformAppContext" },
    { "val$path_", NULL, 0x1012, "LCCPBVActionPath" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$8 = { "$8", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVPatientSelect_$8;
}

@end
@implementation CCPBVPatientSelect_$9

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangException class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else {
    [CCPBVPatientSelect clearoutPatientCentricInfo];
    [CCPBVUtils toggleActionsWithBoolean:NO];
    id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer));
    [val$w_ activateViewerWithRAREiViewer:v withNSString:[RAREiTarget TARGET_WORKSPACE]];
    if ([CCPBVUtils isCardStack]) {
      [CCPBVCardStackUtils updateTitleWithRAREiViewer:v withBoolean:YES];
    }
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$9 = { "$9", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVPatientSelect_$9;
}

@end
@implementation CCPBVPatientSelect_$10

- (id)compute {
  @try {
    RAREActionLink *l = [((RAREWindowViewer *) nil_chk(val$w_)) createActionLinkWithId:[NSString stringWithFormat:@"/hub/main/util/patients/establish_relationship/%@/%@", val$patientID_, val$relationship_]];
    NSString *s = [((RAREActionLink *) nil_chk(l)) getContentAsString];
    if ((s == nil) || ([s sequenceLength] == 0)) {
      return [JavaLangBoolean valueOfWithBoolean:YES];
    }
    else {
      return [JavaLangBoolean valueOfWithBoolean:NO];
    }
  }
  @catch (JavaLangThrowable *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideProgressPopup];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:YES withId:result];
  }
  else if ([result isKindOfClass:[JavaLangBoolean class]] && [((JavaLangBoolean *) check_class_cast(result, [JavaLangBoolean class])) booleanValue]) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:val$relationship_];
  }
  else {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:nil];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
                  withNSString:(NSString *)capture$1
                  withNSString:(NSString *)capture$2
     withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$3 {
  val$w_ = capture$0;
  val$patientID_ = capture$1;
  val$relationship_ = capture$2;
  val$cb_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$patientID_", NULL, 0x1012, "LNSString" },
    { "val$relationship_", NULL, 0x1012, "LNSString" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$10 = { "$10", "com.sparseware.bellavista", "PatientSelect", 0x8000, 1, methods, 4, fields, 0, NULL};
  return &_CCPBVPatientSelect_$10;
}

@end
@implementation CCPBVPatientSelect_$11

- (id)compute {
  @try {
    RAREActionLink *l = [((RAREWindowViewer *) nil_chk(val$w_)) createActionLinkWithId:[NSString stringWithFormat:@"/hub/main/util/patients/select/%@.json", val$id_]];
    NSString *s = [((RAREActionLink *) nil_chk(l)) getContentAsString];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      RAREUTJSONObject *patient = [[RAREUTJSONObject alloc] initWithNSString:s];
      RAREUTJSONArray *rows = [patient getJSONArrayWithNSString:@"_rows"];
      if (rows != nil) {
        patient = [rows getJSONObjectWithInt:0];
      }
      s = [((RAREUTJSONObject *) nil_chk(patient)) optStringWithNSString:@"name"];
      if ((s != nil) && ([s sequenceLength] > 0)) {
        CCPBVCollectionManager *cm = [CCPBVCollectionManager getInstance];
        [((CCPBVCollectionManager *) nil_chk(cm)) clear];
        RAREUTJSONObject *json = [patient optJSONObjectWithNSString:@"allergies"];
        id<RAREiDataCollection> dc = [cm getCollectionWithNSString:@"allergies"];
        @try {
          if (json == nil) {
            [((id<RAREiDataCollection>) nil_chk(dc)) refreshWithRAREiWidget:val$w_];
          }
          else {
            id<JavaUtilList> list = [RAREFunctions parseJSONObjectWithRAREiWidget:val$w_ withRAREUTJSONObject:json withBoolean:YES];
            [((id<RAREiDataCollection>) nil_chk(dc)) setCollectionDataWithJavaUtilList:list];
          }
        }
        @catch (JavaIoIOException *e) {
          [RAREPlatform ignoreExceptionWithNSString:@"couldn't parse allergies" withJavaLangThrowable:e];
        }
        json = [patient optJSONObjectWithNSString:@"alerts"];
        dc = [cm getCollectionWithNSString:@"alerts"];
        if (dc != nil) {
          @try {
            if (json != nil) {
              id<JavaUtilList> list = [RAREFunctions parseJSONObjectWithRAREiWidget:val$w_ withRAREUTJSONObject:json withBoolean:YES];
              [dc setCollectionDataWithJavaUtilList:list];
            }
            else {
              [dc refreshWithRAREiWidget:val$w_];
            }
          }
          @catch (JavaIoIOException *e) {
            [RAREPlatform ignoreExceptionWithNSString:@"couldn't parse alerts" withJavaLangThrowable:e];
          }
        }
        json = [patient optJSONObjectWithNSString:@"flags"];
        dc = [cm getCollectionWithNSString:@"flags"];
        if (dc != nil) {
          @try {
            if (json != nil) {
              id<JavaUtilList> list = [RAREFunctions parseJSONObjectWithRAREiWidget:val$w_ withRAREUTJSONObject:json withBoolean:YES];
              [dc setCollectionDataWithJavaUtilList:list];
            }
            else {
              [dc refreshWithRAREiWidget:val$w_];
            }
          }
          @catch (JavaIoIOException *e) {
            [RAREPlatform ignoreExceptionWithNSString:@"couldn't parse flags" withJavaLangThrowable:e];
          }
        }
        if (![RAREUIScreen isLargeScreen]) {
          dc = [cm getCollectionWithNSString:@"problems"];
          if (dc != nil) {
            [dc refreshWithRAREiWidget:val$w_];
          }
        }
        return patient;
      }
    }
    return nil;
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  if ([result isKindOfClass:[JavaLangThrowable class]] || result == nil) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:YES withId:result];
    return;
  }
  RAREUTJSONObject *patient = (RAREUTJSONObject *) check_class_cast(result, [RAREUTJSONObject class]);
  id o = [((RAREUTJSONObject *) nil_chk(patient)) getWithId:@"relationship"];
  NSString *s = nil;
  if ([o isKindOfClass:[RAREUTJSONObject class]]) {
    s = [((RAREUTJSONObject *) check_class_cast(o, [RAREUTJSONObject class])) optStringWithNSString:@"linkedData"];
  }
  else if (o != nil) {
    s = [o description];
  }
  @try {
    if ((s == nil) || ([s sequenceLength] == 0) || ([RAREUTSNumber intValueWithNSString:s] < 1)) {
      NSString *name = [patient getStringWithNSString:@"name"];
      [CCPBVPatientSelect showRelationshipPopupWithRAREWindowViewer:val$w_ withNSString:val$id_ withNSString:name withRAREiFunctionCallback:[[CCPBVPatientSelect_$11_$1 alloc] initWithCCPBVPatientSelect_$11:self withRAREUTJSONObject:patient]];
      return;
    }
    (void) [patient putWithNSString:@"relationship" withId:s];
    [CCPBVPatientSelect processPatientDataWithRAREUTJSONObject:patient];
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:patient];
  }
  @catch (JavaLangException *e) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:YES withId:e];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0
                  withNSString:(NSString *)capture$1
     withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$2 {
  val$w_ = capture$0;
  val$id_ = capture$1;
  val$cb_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$id_", NULL, 0x1012, "LNSString" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$11 = { "$11", "com.sparseware.bellavista", "PatientSelect", 0x8000, 1, methods, 3, fields, 0, NULL};
  return &_CCPBVPatientSelect_$11;
}

@end
@implementation CCPBVPatientSelect_$11_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (canceled) {
    [((id<RAREiFunctionCallback>) nil_chk(this$0_->val$cb_)) finishedWithBoolean:YES withId:nil];
  }
  else {
    (void) [((RAREUTJSONObject *) nil_chk(val$patient_)) putWithNSString:@"relationship" withId:returnValue];
    [CCPBVPatientSelect processPatientDataWithRAREUTJSONObject:val$patient_];
    [((id<RAREiFunctionCallback>) nil_chk(this$0_->val$cb_)) finishedWithBoolean:NO withId:val$patient_];
  }
}

- (id)initWithCCPBVPatientSelect_$11:(CCPBVPatientSelect_$11 *)outer$
                withRAREUTJSONObject:(RAREUTJSONObject *)capture$0 {
  this$0_ = outer$;
  val$patient_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVPatientSelect_$11" },
    { "val$patient_", NULL, 0x1012, "LRAREUTJSONObject" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$11_$1 = { "$1", "com.sparseware.bellavista", "PatientSelect$$11", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVPatientSelect_$11_$1;
}

@end
@implementation CCPBVPatientSelect_$12

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (canceled) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:YES withId:nil];
  }
  else {
    [CCPBVPatientSelect establishRelationshipWithRAREiWidget:val$w_ withNSString:val$patientID_ withNSString:(NSString *) check_class_cast([((RARERenderableDataItem *) check_class_cast(returnValue, [RARERenderableDataItem class])) getLinkedData], [NSString class]) withRAREiFunctionCallback:val$cb_];
  }
}

- (id)initWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$0
               withRAREWindowViewer:(RAREWindowViewer *)capture$1
                       withNSString:(NSString *)capture$2 {
  val$cb_ = capture$0;
  val$w_ = capture$1;
  val$patientID_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$patientID_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVPatientSelect_$12 = { "$12", "com.sparseware.bellavista", "PatientSelect", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVPatientSelect_$12;
}

@end
