//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/Utils.java
//
//  Created by decoteaud on 3/12/15.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/CallbackFunctionCallback.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/aFunctionCallback.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/HTTPException.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/ActionBar.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UICompoundIcon.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/effects/PullBackAnimation.h"
#include "com/appnativa/rare/ui/effects/ShakeAnimation.h"
#include "com/appnativa/rare/ui/effects/SlideAnimation.h"
#include "com/appnativa/rare/ui/effects/iAnimator.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/effects/iTransitionAnimator.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/util/Grouper.h"
#include "com/appnativa/rare/util/SubItemComparator.h"
#include "com/appnativa/rare/viewer/SplitPaneViewer.h"
#include "com/appnativa/rare/viewer/StackPaneViewer.h"
#include "com/appnativa/rare/viewer/TabPaneViewer.h"
#include "com/appnativa/rare/viewer/TableViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/appnativa/util/iFilterableList.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/CollectionManager.h"
#include "com/sparseware/bellavista/DefaultImageViewer.h"
#include "com/sparseware/bellavista/Document.h"
#include "com/sparseware/bellavista/OrderManager.h"
#include "com/sparseware/bellavista/PatientSelect.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/external/aAttachmentHandler.h"
#include "com/sparseware/bellavista/external/aCommunicationHandler.h"
#include "com/sparseware/bellavista/iValueChecker.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/Package.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/net/ConnectException.h"
#include "java/net/MalformedURLException.h"
#include "java/net/SocketException.h"
#include "java/net/URL.h"
#include "java/nio/channels/ClosedByInterruptException.h"
#include "java/nio/channels/ClosedChannelException.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@implementation ComSparsewareBellavistaUtils

static unichar ComSparsewareBellavistaUtils_colSeparator_ = '^';
static unichar ComSparsewareBellavistaUtils_ldSeparator_ = '|';
static unichar ComSparsewareBellavistaUtils_riSeparator_ = '~';
static ComSparsewareBellavistaSettings_AppPreferences * ComSparsewareBellavistaUtils_preferences_;
static ComSparsewareBellavistaUtils_LoginManager * ComSparsewareBellavistaUtils_loginManager_;
static BOOL ComSparsewareBellavistaUtils_demo_;
static RAREPullBackAnimation * ComSparsewareBellavistaUtils_pullbackAnimation_;
static RAREShakeAnimation * ComSparsewareBellavistaUtils_shakeAnimation_;
static ComSparsewareBellavistaActionPath * ComSparsewareBellavistaUtils_actionPath_;
static RAREUTIdentityArrayList * ComSparsewareBellavistaUtils_actionPathSupporters_;
static JavaUtilHashMap * ComSparsewareBellavistaUtils_statusIcons_;
static ComSparsewareBellavistaCollectionManager * ComSparsewareBellavistaUtils_collectionManager_;
static RAREUTJSONObject * ComSparsewareBellavistaUtils_attachmentHandlers_;
static BOOL ComSparsewareBellavistaUtils_wasClosing_;
static ComSparsewareBellavistaUtils_ApplicationLock * ComSparsewareBellavistaUtils_applicationLock_;
static ComSparsewareBellavistaExternalaCommunicationHandler * ComSparsewareBellavistaUtils_commHandler_;
static ComSparsewareBellavistaSettings * ComSparsewareBellavistaUtils_settingsHandler_;
static JavaUtilArrayList * ComSparsewareBellavistaUtils_stack_;
static RAREUICompoundIcon * ComSparsewareBellavistaUtils_backIcon_;
static id<JavaUtilMap> ComSparsewareBellavistaUtils_dialogOptions_;
static RARESPOTViewer * ComSparsewareBellavistaUtils_reloginConfig_;
static BOOL ComSparsewareBellavistaUtils_ignorePausing_;
static BOOL ComSparsewareBellavistaUtils_shuttingDown_;
static BOOL ComSparsewareBellavistaUtils_fullscreenMode_;
static RAREUIFont * ComSparsewareBellavistaUtils_boldFont_;

+ (unichar)colSeparator {
  return ComSparsewareBellavistaUtils_colSeparator_;
}

+ (unichar *)colSeparatorRef {
  return &ComSparsewareBellavistaUtils_colSeparator_;
}

+ (unichar)ldSeparator {
  return ComSparsewareBellavistaUtils_ldSeparator_;
}

+ (unichar *)ldSeparatorRef {
  return &ComSparsewareBellavistaUtils_ldSeparator_;
}

+ (unichar)riSeparator {
  return ComSparsewareBellavistaUtils_riSeparator_;
}

+ (unichar *)riSeparatorRef {
  return &ComSparsewareBellavistaUtils_riSeparator_;
}

+ (ComSparsewareBellavistaSettings_AppPreferences *)preferences {
  return ComSparsewareBellavistaUtils_preferences_;
}

+ (void)setPreferences:(ComSparsewareBellavistaSettings_AppPreferences *)preferences {
  ComSparsewareBellavistaUtils_preferences_ = preferences;
}

+ (ComSparsewareBellavistaUtils_LoginManager *)loginManager {
  return ComSparsewareBellavistaUtils_loginManager_;
}

+ (void)setLoginManager:(ComSparsewareBellavistaUtils_LoginManager *)loginManager {
  ComSparsewareBellavistaUtils_loginManager_ = loginManager;
}

+ (BOOL)demo {
  return ComSparsewareBellavistaUtils_demo_;
}

+ (BOOL *)demoRef {
  return &ComSparsewareBellavistaUtils_demo_;
}

+ (RAREPullBackAnimation *)pullbackAnimation {
  return ComSparsewareBellavistaUtils_pullbackAnimation_;
}

+ (void)setPullbackAnimation:(RAREPullBackAnimation *)pullbackAnimation {
  ComSparsewareBellavistaUtils_pullbackAnimation_ = pullbackAnimation;
}

+ (RAREShakeAnimation *)shakeAnimation {
  return ComSparsewareBellavistaUtils_shakeAnimation_;
}

+ (void)setShakeAnimation:(RAREShakeAnimation *)shakeAnimation {
  ComSparsewareBellavistaUtils_shakeAnimation_ = shakeAnimation;
}

+ (ComSparsewareBellavistaActionPath *)actionPath {
  return ComSparsewareBellavistaUtils_actionPath_;
}

+ (void)setActionPath:(ComSparsewareBellavistaActionPath *)actionPath {
  ComSparsewareBellavistaUtils_actionPath_ = actionPath;
}

+ (RAREUTIdentityArrayList *)actionPathSupporters {
  return ComSparsewareBellavistaUtils_actionPathSupporters_;
}

+ (void)setActionPathSupporters:(RAREUTIdentityArrayList *)actionPathSupporters {
  ComSparsewareBellavistaUtils_actionPathSupporters_ = actionPathSupporters;
}

+ (JavaUtilHashMap *)statusIcons {
  return ComSparsewareBellavistaUtils_statusIcons_;
}

+ (void)setStatusIcons:(JavaUtilHashMap *)statusIcons {
  ComSparsewareBellavistaUtils_statusIcons_ = statusIcons;
}

+ (ComSparsewareBellavistaCollectionManager *)collectionManager {
  return ComSparsewareBellavistaUtils_collectionManager_;
}

+ (void)setCollectionManager:(ComSparsewareBellavistaCollectionManager *)collectionManager {
  ComSparsewareBellavistaUtils_collectionManager_ = collectionManager;
}

+ (RAREUTJSONObject *)attachmentHandlers {
  return ComSparsewareBellavistaUtils_attachmentHandlers_;
}

+ (void)setAttachmentHandlers:(RAREUTJSONObject *)attachmentHandlers {
  ComSparsewareBellavistaUtils_attachmentHandlers_ = attachmentHandlers;
}

+ (BOOL)wasClosing {
  return ComSparsewareBellavistaUtils_wasClosing_;
}

+ (BOOL *)wasClosingRef {
  return &ComSparsewareBellavistaUtils_wasClosing_;
}

+ (ComSparsewareBellavistaUtils_ApplicationLock *)applicationLock {
  return ComSparsewareBellavistaUtils_applicationLock_;
}

+ (void)setApplicationLock:(ComSparsewareBellavistaUtils_ApplicationLock *)applicationLock {
  ComSparsewareBellavistaUtils_applicationLock_ = applicationLock;
}

+ (ComSparsewareBellavistaExternalaCommunicationHandler *)commHandler {
  return ComSparsewareBellavistaUtils_commHandler_;
}

+ (void)setCommHandler:(ComSparsewareBellavistaExternalaCommunicationHandler *)commHandler {
  ComSparsewareBellavistaUtils_commHandler_ = commHandler;
}

+ (ComSparsewareBellavistaSettings *)settingsHandler {
  return ComSparsewareBellavistaUtils_settingsHandler_;
}

+ (void)setSettingsHandler:(ComSparsewareBellavistaSettings *)settingsHandler {
  ComSparsewareBellavistaUtils_settingsHandler_ = settingsHandler;
}

+ (JavaUtilArrayList *)stack {
  return ComSparsewareBellavistaUtils_stack_;
}

+ (void)setStack:(JavaUtilArrayList *)stack {
  ComSparsewareBellavistaUtils_stack_ = stack;
}

+ (RAREUICompoundIcon *)backIcon {
  return ComSparsewareBellavistaUtils_backIcon_;
}

+ (void)setBackIcon:(RAREUICompoundIcon *)backIcon {
  ComSparsewareBellavistaUtils_backIcon_ = backIcon;
}

+ (id<JavaUtilMap>)dialogOptions {
  return ComSparsewareBellavistaUtils_dialogOptions_;
}

+ (void)setDialogOptions:(id<JavaUtilMap>)dialogOptions {
  ComSparsewareBellavistaUtils_dialogOptions_ = dialogOptions;
}

+ (RARESPOTViewer *)reloginConfig {
  return ComSparsewareBellavistaUtils_reloginConfig_;
}

+ (void)setReloginConfig:(RARESPOTViewer *)reloginConfig {
  ComSparsewareBellavistaUtils_reloginConfig_ = reloginConfig;
}

+ (BOOL)ignorePausing {
  return ComSparsewareBellavistaUtils_ignorePausing_;
}

+ (BOOL *)ignorePausingRef {
  return &ComSparsewareBellavistaUtils_ignorePausing_;
}

+ (BOOL)shuttingDown {
  return ComSparsewareBellavistaUtils_shuttingDown_;
}

+ (BOOL *)shuttingDownRef {
  return &ComSparsewareBellavistaUtils_shuttingDown_;
}

+ (BOOL)fullscreenMode {
  return ComSparsewareBellavistaUtils_fullscreenMode_;
}

+ (BOOL *)fullscreenModeRef {
  return &ComSparsewareBellavistaUtils_fullscreenMode_;
}

+ (RAREUIFont *)boldFont {
  return ComSparsewareBellavistaUtils_boldFont_;
}

+ (void)setBoldFont:(RAREUIFont *)boldFont {
  ComSparsewareBellavistaUtils_boldFont_ = boldFont;
}

- (id)init {
  return [super init];
}

+ (ComSparsewareBellavistaActionPath *)getDisplayedActionPath {
  int len = [((RAREUTIdentityArrayList *) nil_chk(ComSparsewareBellavistaUtils_actionPathSupporters_)) size];
  if (len == 0) {
    NSString *patient = [ComSparsewareBellavistaUtils getPatientID];
    RARETabPaneViewer *tp = patient == nil ? nil : (RARETabPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"applicationTabs"], [RARETabPaneViewer class]);
    if (tp != nil) {
      return [[ComSparsewareBellavistaActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ patient, [tp getSelectedTabName] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
    }
    return nil;
  }
  return [((id<ComSparsewareBellavistaActionPath_iActionPathSupporter>) nil_chk([ComSparsewareBellavistaUtils_actionPathSupporters_ getWithInt:len - 1])) getDisplayedActionPath];
}

+ (void)addActionPathSupporterWithComSparsewareBellavistaActionPath_iActionPathSupporter:(id<ComSparsewareBellavistaActionPath_iActionPathSupporter>)supporter {
  [((RAREUTIdentityArrayList *) nil_chk(ComSparsewareBellavistaUtils_actionPathSupporters_)) removeWithId:supporter];
  [ComSparsewareBellavistaUtils_actionPathSupporters_ addWithId:supporter];
}

+ (void)applicationPaused {
  [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) closePopupWindowsWithBoolean:YES];
  if (!ComSparsewareBellavistaUtils_ignorePausing_) {
    [ComSparsewareBellavistaUtils lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum PAUSED] withBoolean:NO];
  }
}

+ (void)applicationResumed {
  if (ComSparsewareBellavistaUtils_applicationLock_ == nil || ComSparsewareBellavistaUtils_applicationLock_->viewer_ == nil) {
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiFunctionCallback> cb = [[ComSparsewareBellavistaUtils_$1 alloc] initWithRAREWindowViewer:w];
  @try {
    RAREActionLink *l = [((RAREWindowViewer *) nil_chk(w)) createActionLinkWithId:@"/hub/main/account/status"];
    (void) [w getContentAsJSONWithId:l withRAREiFunctionCallback:cb];
    [w showProgressPopupWithJavaLangCharSequence:[w getStringWithNSString:@"bv.text.authenticating"]];
  }
  @catch (JavaLangException *e) {
    [((ComSparsewareBellavistaUtils_ApplicationLock *) nil_chk(ComSparsewareBellavistaUtils_applicationLock_)) disposeViewer];
  }
}

+ (int)calculateAgeWithId:(id)date {
  JavaUtilCalendar *cal;
  if ([date isKindOfClass:[JavaUtilDate class]]) {
    cal = [JavaUtilCalendar getInstance];
    [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:(JavaUtilDate *) check_class_cast(date, [JavaUtilDate class])];
  }
  else {
    cal = (JavaUtilCalendar *) check_class_cast(date, [JavaUtilCalendar class]);
  }
  JavaUtilCalendar *now = [JavaUtilCalendar getInstance];
  int age = [((JavaUtilCalendar *) nil_chk(now)) getWithInt:JavaUtilCalendar_YEAR] - [((JavaUtilCalendar *) nil_chk(cal)) getWithInt:JavaUtilCalendar_YEAR];
  if (([cal getWithInt:JavaUtilCalendar_MONTH] > [now getWithInt:JavaUtilCalendar_MONTH]) || (([cal getWithInt:JavaUtilCalendar_MONTH] == [now getWithInt:JavaUtilCalendar_MONTH]) && ([cal getWithInt:JavaUtilCalendar_DAY_OF_MONTH] > [now getWithInt:JavaUtilCalendar_DAY_OF_MONTH]))) {
    age--;
  }
  return age;
}

+ (BOOL)canReselectPatient {
  return ComSparsewareBellavistaUtils_loginManager_ != nil && [ComSparsewareBellavistaUtils_loginManager_ canReselectPatient];
}

+ (id<JavaUtilList>)categorizeWithJavaUtilList:(id<JavaUtilList>)rows
                                       withInt:(int)column
                    withRARERenderableDataItem:(RARERenderableDataItem *)missingCategoryItem
                                   withBoolean:(BOOL)sortOnLinkedData {
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  if ((len == 1) && ![((RARERenderableDataItem *) nil_chk([rows getWithInt:0])) isEnabled]) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([rows getWithInt:i])) getItemExWithInt:column];
    if (item != nil) {
      NSString *s = [((NSString *) nil_chk([item description])) trim];
      if ((s == nil) || ([s sequenceLength] == 0)) {
        s = [((RARERenderableDataItem *) nil_chk(missingCategoryItem)) description];
        item = missingCategoryItem;
      }
      (void) [map putWithId:s withId:item];
    }
  }
  JavaUtilArrayList *list = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[map values]];
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setUseLinkedDataWithBoolean:sortOnLinkedData];
  [JavaUtilCollections sortWithJavaUtilList:list withJavaUtilComparator:c];
  return list;
}

+ (id<JavaUtilList>)categorizeWithRARETableViewer:(RARETableViewer *)table
                                          withInt:(int)column
                       withRARERenderableDataItem:(RARERenderableDataItem *)missingCategoryItem
                                      withBoolean:(BOOL)sortOnLinkedData {
  int len = [((RARETableViewer *) nil_chk(table)) size];
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  if ((len == 1) && ![((RARERenderableDataItem *) nil_chk([table getWithInt:0])) isEnabled]) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([table getWithInt:i])) getItemExWithInt:column];
    if (item != nil) {
      NSString *s = [((NSString *) nil_chk([item description])) trim];
      if ((s == nil) || ([s sequenceLength] == 0)) {
        s = [((RARERenderableDataItem *) nil_chk(missingCategoryItem)) description];
        item = missingCategoryItem;
      }
      (void) [map putWithId:s withId:item];
    }
  }
  JavaUtilArrayList *list = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[map values]];
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setUseLinkedDataWithBoolean:sortOnLinkedData];
  [JavaUtilCollections sortWithJavaUtilList:list withJavaUtilComparator:c];
  return list;
}

+ (void)checkRowsAndOptimizeDatesWithJavaUtilList:(id<JavaUtilList>)rows
                                          withInt:(int)dateCol
                                          withInt:(int)dateType
         withComSparsewareBellavistaiValueChecker:(id<ComSparsewareBellavistaiValueChecker>)checker {
  @try {
    int len = [((id<JavaUtilList>) nil_chk(rows)) size];
    NSString *lastValue = nil;
    JavaUtilDate *lastDate = nil;
    for (int i = 0; i < len; i++) {
      RARERenderableDataItem *row = [rows getWithInt:i];
      RARERenderableDataItem *ditem = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:dateCol];
      id value = [((RARERenderableDataItem *) nil_chk(ditem)) getValueEx];
      [ditem setTypeWithInt:dateType];
      if (lastValue != nil && [lastValue isEqual:value]) {
        [ditem setValueWithId:lastDate];
      }
      else {
        lastValue = [ditem description];
        lastDate = (JavaUtilDate *) check_class_cast([ditem getValue], [JavaUtilDate class]);
      }
      if (checker != nil) {
        [checker checkRowWithRARERenderableDataItem:row withInt:i withInt:0 withInt:len];
      }
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
}

+ (void)checkRowsInReverseAndOptimizeDatesWithJavaUtilList:(id<JavaUtilList>)rows
                                                   withInt:(int)dateCol
                                                   withInt:(int)dateType
                  withComSparsewareBellavistaiValueChecker:(id<ComSparsewareBellavistaiValueChecker>)checker {
  @try {
    int len = [((id<JavaUtilList>) nil_chk(rows)) size];
    NSString *lastValue = nil;
    JavaUtilDate *lastDate = nil;
    for (int i = len - 1; i > -1; i--) {
      RARERenderableDataItem *row = [rows getWithInt:i];
      RARERenderableDataItem *ditem = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:dateCol];
      id value = [((RARERenderableDataItem *) nil_chk(ditem)) getValueEx];
      [ditem setTypeWithInt:dateType];
      if (lastValue != nil && [lastValue isEqual:value]) {
        [ditem setValueWithId:lastDate];
      }
      else {
        lastValue = [ditem description];
        lastDate = (JavaUtilDate *) check_class_cast([ditem getValue], [JavaUtilDate class]);
      }
      if (checker != nil) {
        if (![checker checkRowWithRARERenderableDataItem:row withInt:i withInt:0 withInt:len]) {
          (void) [rows removeWithInt:i];
        }
      }
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
}

+ (BOOL)continuePollingForUpdates {
  if ([ComSparsewareBellavistaUtils isApplicationLocked] || [ComSparsewareBellavistaUtils getPatient] == nil) {
    return NO;
  }
  return YES;
}

+ (RAREActionLink *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                                 withNSString:(NSString *)url
                                  withBoolean:(BOOL)rowInfo {
  RAREActionLink *link = nil;
  @try {
    link = [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getAppContext])) getTopWindowViewer])) createActionLinkWithRAREiWidget:context withId:url];
    [((RAREActionLink *) nil_chk(link)) setColumnSeparatorWithChar:ComSparsewareBellavistaUtils_colSeparator_];
    [link setLinkedDataSeparatorWithChar:ComSparsewareBellavistaUtils_ldSeparator_];
    if (rowInfo) {
      [link setRowInfoSeparatorWithChar:ComSparsewareBellavistaUtils_riSeparator_];
    }
  }
  @catch (JavaNetMalformedURLException *e) {
    @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
  }
  return link;
}

+ (RAREActionLink *)createPhotosActionLinkWithNSString:(NSString *)id_
                                           withBoolean:(BOOL)thumbnail {
  RAREUTJSONObject *ps = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patientSelectInfo"], [RAREUTJSONObject class]);
  NSString *s = [((RAREUTJSONObject *) nil_chk(ps)) optStringWithNSString:thumbnail ? @"photosThumbnailsURL" : @"photosURL" withNSString:nil];
  if (s == nil || [s sequenceLength] == 0) {
    return nil;
  }
  return [[RAREActionLink alloc] initWithNSString:[RAREFunctions formatWithNSString:s withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ id_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
}

+ (void)exit {
  if (ComSparsewareBellavistaUtils_wasClosing_) {
    return;
  }
  if (ComSparsewareBellavistaUtils_applicationLock_ != nil || [ComSparsewareBellavistaUtils getUserID] == nil) {
    if (![ComSparsewareBellavistaOrderManager canExit]) {
      return;
    }
    [ComSparsewareBellavistaUtils exitEx];
    return;
  }
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) setCanCloseWithBoolean:NO];
  if (![ComSparsewareBellavistaOrderManager canChangePatientOrExitWithBoolean:YES withComSparsewareBellavistaActionPath:nil]) {
    return;
  }
  id<RAREiFunctionCallback> cb = [[ComSparsewareBellavistaUtils_$2 alloc] init];
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) yesNoWithId:[((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getStringWithNSString:@"bv.text.exit_application"] withRAREiFunctionCallback:cb];
}

+ (void)exitEx {
  if (!ComSparsewareBellavistaUtils_shuttingDown_ && ![RAREPlatform isShuttingDown]) {
    ComSparsewareBellavistaUtils_shuttingDown_ = YES;
    if (ComSparsewareBellavistaUtils_loginManager_ != nil) {
      [ComSparsewareBellavistaUtils_loginManager_ logout];
    }
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    if (w != nil && ![w isDisposed]) {
      [w setCanCloseWithBoolean:YES];
    }
    ComSparsewareBellavistaUtils_wasClosing_ = YES;
    [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) exit];
  }
}

+ (void)filetToOnlyShowPageWithJavaUtilList:(id<JavaUtilList>)rows
                                    withInt:(int)pageStart
                                    withInt:(int)pageSize
                                    withInt:(int)totalCount {
  int end = [JavaLangMath minWithInt:pageStart + pageSize withInt:totalCount];
  for (int i = 0; i < end; i++) {
    RARERenderableDataItem *row = [((id<JavaUtilList>) nil_chk(rows)) getWithInt:i];
    id<RAREUTiFilterableList> items = [((RARERenderableDataItem *) nil_chk(row)) getItems];
    [((id<RAREUTiFilterableList>) nil_chk(items)) unfilter];
    for (int n = pageStart; n < end; n++) {
      [items addIndexToFilteredListWithInt:n];
    }
  }
}

+ (id<JavaUtilList>)fixCategorizedRowsWithJavaUtilList:(id<JavaUtilList>)rows
                                        withRAREUIFont:(RAREUIFont *)font
                                           withBoolean:(BOOL)appendCounts
                                           withBoolean:(BOOL)returnCategories {
  RARERenderableDataItem *item;
  RARERenderableDataItem *nitem;
  RARERenderableDataItem *row;
  JavaUtilArrayList *categories = nil;
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  if (returnCategories) {
    categories = [[JavaUtilArrayList alloc] initWithInt:len];
  }
  for (int i = 0; i < len; i++) {
    row = [rows getWithInt:i];
    item = [((RARERenderableDataItem *) nil_chk(row)) getItemWithInt:0];
    NSString *s = appendCounts || returnCategories ? [((RARERenderableDataItem *) nil_chk(item)) description] : nil;
    nitem = [[RARERenderableDataItem alloc] initWithId:[((RARERenderableDataItem *) nil_chk(item)) getValue] withInt:[item getType]];
    if (returnCategories) {
      [((JavaUtilArrayList *) nil_chk(categories)) addWithId:s];
    }
    if (appendCounts) {
      s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@" (%d)", [item size]]];
      [nitem setTypeWithInt:RARERenderableDataItem_TYPE_STRING];
      [nitem setValueWithId:s];
    }
    [nitem setFontWithRAREUIFont:font];
    [nitem setColumnSpanWithInt:-1];
    [row addWithId:nitem];
    [item setColumnSpanWithInt:1];
  }
  return categories;
}

+ (ComSparsewareBellavistaExternalaCommunicationHandler *)getaCommunicationHandler {
  return ComSparsewareBellavistaUtils_commHandler_;
}

+ (ComSparsewareBellavistaActionPath *)getActionPathWithBoolean:(BOOL)remove {
  ComSparsewareBellavistaActionPath *p = ComSparsewareBellavistaUtils_actionPath_;
  if (remove) {
    ComSparsewareBellavistaUtils_actionPath_ = nil;
  }
  return p;
}

+ (ComSparsewareBellavistaExternalaAttachmentHandler *)getAttachmentHandlerWithComSparsewareBellavistaDocument_DocumentItemTypeEnum:(ComSparsewareBellavistaDocument_DocumentItemTypeEnum *)type {
  NSString *s = [((NSString *) nil_chk([((ComSparsewareBellavistaDocument_DocumentItemTypeEnum *) nil_chk(type)) name])) lowercaseStringWithJRELocale:[JavaUtilLocale US]];
  if (ComSparsewareBellavistaUtils_attachmentHandlers_ == nil) {
    ComSparsewareBellavistaUtils_attachmentHandlers_ = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"attachmentHandlers"], [RAREUTJSONObject class]);
    if (ComSparsewareBellavistaUtils_attachmentHandlers_ == nil) {
      ComSparsewareBellavistaUtils_attachmentHandlers_ = [[RAREUTJSONObject alloc] init];
    }
  }
  s = [((RAREUTJSONObject *) nil_chk(ComSparsewareBellavistaUtils_attachmentHandlers_)) optStringWithNSString:s];
  if (s == nil || [s sequenceLength] == 0 || [s isEqual:@"default"]) {
    if (type == [ComSparsewareBellavistaDocument_DocumentItemTypeEnum IMAGE]) {
      return [[ComSparsewareBellavistaDefaultImageViewer alloc] init];
    }
  }
  if ([((NSString *) nil_chk(s)) indexOf:'.'] == 0) {
    NSString *pn = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.class.defaultPackage"];
    if (pn != nil) {
      s = [NSString stringWithFormat:@"%@.%@", pn, s];
    }
    else {
      s = [NSString stringWithFormat:@"%@.%@", [((JavaLangPackage *) nil_chk([[IOSClass classWithClass:[ComSparsewareBellavistaUtils class]] getPackage])) getName], s];
    }
  }
  return (ComSparsewareBellavistaExternalaAttachmentHandler *) check_class_cast([RAREPlatform createObjectWithNSString:s], [ComSparsewareBellavistaExternalaAttachmentHandler class]);
}

+ (RAREUIFont *)getListWidgetBoldFontWithRAREiWidget:(id<RAREiWidget>)widget {
  if (ComSparsewareBellavistaUtils_boldFont_ == nil) {
    RAREUIFont *f = [((id<RAREiWidget>) nil_chk(widget)) getFont];
    if (f == nil) {
      f = [RAREFontUtils getDefaultFont];
    }
    ComSparsewareBellavistaUtils_boldFont_ = [((RAREUIFont *) nil_chk([widget getFont])) deriveBold];
  }
  return ComSparsewareBellavistaUtils_boldFont_;
}

+ (RAREUTJSONObject *)getPatient {
  return (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patient"], [RAREUTJSONObject class]);
}

+ (NSString *)getPatientID {
  RAREUTJSONObject *o = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patient"], [RAREUTJSONObject class]);
  return o == nil ? nil : [o optStringWithNSString:@"id" withNSString:nil];
}

+ (ComSparsewareBellavistaSettings_AppPreferences *)getPreferences {
  return ComSparsewareBellavistaUtils_preferences_;
}

+ (RARESplitPaneViewer *)getSplitPaneViewerWithRAREiWidget:(id<RAREiWidget>)widget {
  if ([(id) widget isKindOfClass:[RARESplitPaneViewer class]]) {
    return (RARESplitPaneViewer *) check_class_cast(widget, [RARESplitPaneViewer class]);
  }
  id<RAREiContainer> p = [((id<RAREiWidget>) nil_chk(widget)) getParent];
  while (p != nil) {
    if ([(id) p isKindOfClass:[RARESplitPaneViewer class]] && [(id) [((id<RAREiContainer>) nil_chk(p)) getParent] isKindOfClass:[RARETabPaneViewer class]]) {
      return (RARESplitPaneViewer *) check_class_cast(p, [RARESplitPaneViewer class]);
    }
    p = (RAREaContainer *) check_class_cast([((id<RAREiContainer>) nil_chk(p)) getParent], [RAREaContainer class]);
  }
  return nil;
}

+ (RAREStackPaneViewer *)getStackPaneViewerWithRAREiWidget:(id<RAREiWidget>)widget {
  if ([(id) widget isKindOfClass:[RAREStackPaneViewer class]]) {
    return (RAREStackPaneViewer *) check_class_cast(widget, [RAREStackPaneViewer class]);
  }
  id<RAREiContainer> p = [((id<RAREiWidget>) nil_chk(widget)) getParent];
  while (p != nil) {
    if ([(id) p isKindOfClass:[RAREStackPaneViewer class]]) {
      return (RAREStackPaneViewer *) check_class_cast(p, [RAREStackPaneViewer class]);
    }
    p = [((id<RAREiContainer>) nil_chk(p)) getParent];
  }
  return nil;
}

+ (JavaUtilHashMap *)getStatusIcons {
  if (ComSparsewareBellavistaUtils_statusIcons_ == nil) {
    ComSparsewareBellavistaUtils_statusIcons_ = [[JavaUtilHashMap alloc] initWithInt:4];
    (void) [ComSparsewareBellavistaUtils_statusIcons_ putWithId:[ComSparsewareBellavistaExternalaCommunicationHandler_StatusEnum OFFLINE] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_offline"]];
    (void) [ComSparsewareBellavistaUtils_statusIcons_ putWithId:[ComSparsewareBellavistaExternalaCommunicationHandler_StatusEnum ONLINE] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_online"]];
    (void) [ComSparsewareBellavistaUtils_statusIcons_ putWithId:[ComSparsewareBellavistaExternalaCommunicationHandler_StatusEnum AWAY] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_away"]];
    (void) [ComSparsewareBellavistaUtils_statusIcons_ putWithId:[ComSparsewareBellavistaExternalaCommunicationHandler_StatusEnum BUSY] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_busy"]];
  }
  return ComSparsewareBellavistaUtils_statusIcons_;
}

+ (NSString *)getUserDisplayName {
  RAREUTJSONObject *map = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"user"], [RAREUTJSONObject class]);
  return [((RAREUTJSONObject *) nil_chk(map)) getStringWithNSString:@"name"];
}

+ (NSString *)getUserID {
  return (NSString *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"username"], [NSString class]);
}

+ (id<JavaUtilList>)groupByDateWithRARETableViewer:(RARETableViewer *)widget
                                  withJavaUtilList:(id<JavaUtilList>)rows {
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  for (int i = 0; i < len; i++) {
    [((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk([rows getWithInt:i])) getWithInt:0])) setTypeWithInt:RARERenderableDataItem_TYPE_DATETIME];
  }
  RAREGrouper *g = [[RAREGrouper alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0 } count:1] withNSStringArray:nil withBoolean:YES withBoolean:YES];
  [g setFormatForTableWithBoolean:YES];
  [g setSortOrderWithInt:-1];
  rows = [g groupWithRAREiWidget:widget withJavaUtilList:rows];
  RAREUIFont *f = [ComSparsewareBellavistaUtils getListWidgetBoldFontWithRAREiWidget:widget];
  (void) [ComSparsewareBellavistaUtils fixCategorizedRowsWithJavaUtilList:rows withRAREUIFont:f withBoolean:NO withBoolean:NO];
  return rows;
}

+ (id<JavaUtilList>)groupRowsWithRARETableViewer:(RARETableViewer *)widget
                                withJavaUtilList:(id<JavaUtilList>)rows
                                         withInt:(int)column
                                         withInt:(int)sortOrder
                                     withBoolean:(BOOL)appendCounts {
  RAREGrouper *g = [[RAREGrouper alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ column } count:1] withNSStringArray:nil withBoolean:YES withBoolean:YES];
  [g setFormatForTableWithBoolean:YES];
  [g setSortOrderWithInt:sortOrder];
  rows = [g groupWithRAREiWidget:widget withJavaUtilList:rows];
  RAREUIFont *f = [ComSparsewareBellavistaUtils getListWidgetBoldFontWithRAREiWidget:widget];
  (void) [ComSparsewareBellavistaUtils fixCategorizedRowsWithJavaUtilList:rows withRAREUIFont:f withBoolean:appendCounts withBoolean:NO];
  return rows;
}

+ (BOOL)handleActionPathWithComSparsewareBellavistaActionPath:(ComSparsewareBellavistaActionPath *)path {
  ComSparsewareBellavistaUtils_actionPath_ = path;
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  NSString *s = [((ComSparsewareBellavistaActionPath *) nil_chk(path)) shiftPeek];
  if ([RAREUTSNumber isNumericWithNSString:s]) {
    [ComSparsewareBellavistaPatientSelect changePatientWithRAREiWidget:w withComSparsewareBellavistaActionPath:ComSparsewareBellavistaUtils_actionPath_];
    return YES;
  }
  else {
    RARETabPaneViewer *tv = (RARETabPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"applicationTabs"], [RARETabPaneViewer class]);
    if (tv != nil) {
      (void) [path shift];
      [tv setSelectedTabNameWithNSString:s];
      return YES;
    }
    return NO;
  }
}

+ (void)handleErrorWithJavaLangThrowable:(JavaLangThrowable *)ex {
  if ([ex isKindOfClass:[JavaNioChannelsClosedChannelException class]] || [ex isKindOfClass:[JavaNioChannelsClosedByInterruptException class]]) {
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  JavaLangThrowable *e = [RAREApplicationException pealExceptionWithJavaLangThrowable:ex];
  [RAREPlatform runOnUIThreadWithJavaLangRunnable:[[ComSparsewareBellavistaUtils_$3 alloc] initWithJavaLangThrowable:e withRAREWindowViewer:w]];
}

+ (void)handleStatusObjectWithRAREUTJSONObject:(RAREUTJSONObject *)status {
}

+ (BOOL)isApplicationLocked {
  return ComSparsewareBellavistaUtils_applicationLock_ != nil;
}

+ (BOOL)isChartableWithNSString:(NSString *)value {
  unichar c = value == nil ? 0 : [value charAtWithInt:0];
  if (c == '-') {
    if ([((NSString *) nil_chk(value)) sequenceLength] == 1) {
      return NO;
    }
    c = [value charAtWithInt:1];
  }
  return [JavaLangCharacter isDigitWithChar:c];
}

+ (BOOL)isDemo {
  return ComSparsewareBellavistaUtils_demo_;
}

+ (BOOL)isLoggingOff {
  return ComSparsewareBellavistaUtils_loginManager_ != nil && ComSparsewareBellavistaUtils_loginManager_->loggingOff_;
}

+ (BOOL)isReloggingIn {
  return ComSparsewareBellavistaUtils_loginManager_ != nil && ComSparsewareBellavistaUtils_loginManager_->reloggingIn_;
}

+ (BOOL)isShuttingDown {
  return ComSparsewareBellavistaUtils_shuttingDown_ || [RAREPlatform isShuttingDown];
}

+ (void)lockApplicationWithBoolean:(BOOL)timedout {
  [ComSparsewareBellavistaUtils lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:timedout ? [ComSparsewareBellavistaUtils_ApplicationLockTypeEnum TIMEOUT] : [ComSparsewareBellavistaUtils_ApplicationLockTypeEnum PAUSED] withBoolean:YES];
}

+ (BOOL)popWorkspaceViewer {
  int len = [((JavaUtilArrayList *) nil_chk(ComSparsewareBellavistaUtils_stack_)) size];
  if (len == 0) {
    return NO;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  id<RAREiPlatformIcon> icon = [((id<RAREiActionComponent>) nil_chk([((RAREActionBar *) nil_chk(ab)) getTitleComponent])) getIcon];
  if (icon == ComSparsewareBellavistaUtils_backIcon_) {
    icon = [((RAREUICompoundIcon *) nil_chk(ComSparsewareBellavistaUtils_backIcon_)) getSecondIcon];
    [ComSparsewareBellavistaUtils_backIcon_ setSecondIconWithRAREiPlatformIcon:nil];
    [ab setTitleIconWithRAREiPlatformIcon:icon];
  }
  id<RAREiTarget> t = [w getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiViewer> ov = [((id<RAREiTarget>) nil_chk(t)) removeViewer];
  if (ov != nil && [ov isAutoDispose]) {
    [ov dispose];
  }
  ComSparsewareBellavistaUtils_StackEntry *e = [ComSparsewareBellavistaUtils_stack_ removeWithInt:len - 1];
  (void) [t setViewerWithRAREiViewer:((ComSparsewareBellavistaUtils_StackEntry *) nil_chk(e))->viewer_];
  t = [w getTargetWithNSString:@"patient_info"];
  if (t != nil) {
    [t setVisibleWithBoolean:!ComSparsewareBellavistaUtils_fullscreenMode_];
  }
  return YES;
}

+ (void)pushWorkspaceViewerWithRAREiViewer:(id<RAREiViewer>)v {
  if (ComSparsewareBellavistaUtils_backIcon_ == nil) {
    ComSparsewareBellavistaUtils_backIcon_ = [[RAREUICompoundIcon alloc] initWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.back"] withRAREiPlatformIcon:nil];
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  id<RAREiPlatformIcon> icon = [((id<RAREiActionComponent>) nil_chk([((RAREActionBar *) nil_chk(ab)) getTitleComponent])) getIcon];
  if (icon != ComSparsewareBellavistaUtils_backIcon_) {
    [((RAREUICompoundIcon *) nil_chk(ComSparsewareBellavistaUtils_backIcon_)) setSecondIconWithRAREiPlatformIcon:icon];
    [ab setTitleIconWithRAREiPlatformIcon:ComSparsewareBellavistaUtils_backIcon_];
  }
  id<RAREiTarget> t = [w getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiViewer> ov = [((id<RAREiTarget>) nil_chk(t)) removeViewer];
  ComSparsewareBellavistaUtils_StackEntry *e = [[ComSparsewareBellavistaUtils_StackEntry alloc] initWithRAREiViewer:ov];
  [((JavaUtilArrayList *) nil_chk(ComSparsewareBellavistaUtils_stack_)) addWithId:e];
  (void) [t setViewerWithRAREiViewer:v];
}

+ (void)pushWorkspaceViewerWithNSString:(NSString *)url {
  id<RAREiFunctionCallback> cb = [[ComSparsewareBellavistaUtils_$4 alloc] init];
  (void) [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createViewerWithNSString:url withRAREiFunctionCallback:cb];
}

+ (void)removeActionPathSupporterWithComSparsewareBellavistaActionPath_iActionPathSupporter:(id<ComSparsewareBellavistaActionPath_iActionPathSupporter>)supporter {
  [((RAREUTIdentityArrayList *) nil_chk(ComSparsewareBellavistaUtils_actionPathSupporters_)) removeWithId:supporter];
}

+ (void)resignInWithRAREiWidget:(id<RAREiWidget>)context
                   withNSString:(NSString *)password {
  [((ComSparsewareBellavistaUtils_LoginManager *) nil_chk(ComSparsewareBellavistaUtils_loginManager_)) reloginWithRAREiWidget:context withNSString:password];
}

+ (NSString *)resolveClassNameWithNSString:(NSString *)cls
                              withNSString:(NSString *)addon {
  if ([((NSString *) nil_chk(cls)) indexOf:'.'] == -1) {
    NSString *pkg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.class.defaultPackage"];
    if (pkg == nil) {
      pkg = [((JavaLangPackage *) nil_chk([[IOSClass classWithClass:[ComSparsewareBellavistaUtils class]] getPackage])) getName];
    }
    if (addon != nil) {
      cls = [NSString stringWithFormat:@"%@.%@.%@", pkg, addon, cls];
    }
    else {
      cls = [NSString stringWithFormat:@"%@.%@", pkg, cls];
    }
  }
  return cls;
}

+ (void)setActionPathWithComSparsewareBellavistaActionPath:(ComSparsewareBellavistaActionPath *)path {
  ComSparsewareBellavistaUtils_actionPath_ = path;
}

+ (void)setFirstSelectedTabWithNSString:(NSString *)name {
  [ComSparsewareBellavistaUtils setActionPathWithComSparsewareBellavistaActionPath:[[ComSparsewareBellavistaActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
}

+ (void)setIgnorePausingWithBoolean:(BOOL)ignore {
  ComSparsewareBellavistaUtils_ignorePausing_ = ignore;
}

+ (void)setViewerInStackPaneViewerWithRAREStackPaneViewer:(RAREStackPaneViewer *)sp
                                          withRAREiViewer:(id<RAREiViewer>)viewer
                              withRAREiTransitionAnimator:(id<RAREiTransitionAnimator>)ta
                                              withBoolean:(BOOL)forward
                                              withBoolean:(BOOL)horizontal
                                              withBoolean:(BOOL)disposeOld {
  int n = [((RAREStackPaneViewer *) nil_chk(sp)) getActiveViewerIndex];
  int len = [sp size];
  if (len < 2) {
    [sp addViewerWithNSString:nil withRAREiViewer:viewer];
  }
  else {
    if (n == -1) {
      n = 1;
    }
    id<RAREiViewer> ov = [sp setViewerWithInt:1 - n withRAREiViewer:viewer];
    if (ov != nil) {
      [ov dispose];
    }
  }
  if (n == -1) {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:(id<RAREiTransitionAnimator>) check_protocol_cast(nil, @protocol(RAREiTransitionAnimator))];
    n = 0;
  }
  else {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:ta];
    if (ta != nil) {
      [((RARESlideAnimation *) check_class_cast([ta getInAnimator], [RARESlideAnimation class])) setHorizontalWithBoolean:horizontal];
    }
    if (forward) {
      if (n == 1) {
        [sp swapWithInt:0 withInt:1];
      }
      n = 1;
    }
    else {
      if (n == 0) {
        [sp swapWithInt:0 withInt:1];
      }
      n = 0;
    }
  }
  if (disposeOld) {
    id<RAREiFunctionCallback> cb = [[ComSparsewareBellavistaUtils_$5 alloc] initWithRAREStackPaneViewer:sp];
    [sp switchToWithInt:n withRAREiFunctionCallback:cb];
  }
  else {
    [sp switchToWithInt:n];
  }
}

+ (void)showAlertsWithRAREiWidget:(id<RAREiWidget>)caller {
}

+ (void)showAllergiesWithRAREiWidget:(id<RAREiWidget>)caller {
}

+ (void)showDemographics {
}

+ (void)showDialogWithRAREiViewer:(id<RAREiViewer>)v
                      withBoolean:(BOOL)decorated
                      withBoolean:(BOOL)opaque {
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiViewer>) nil_chk(v)) getAppContext])) getWindowViewer];
  id<JavaUtilMap> map = ComSparsewareBellavistaUtils_dialogOptions_;
  [((id<JavaUtilMap>) nil_chk(map)) clear];
  (void) [map putWithId:@"opaque" withId:[JavaLangBoolean valueOfWithBoolean:opaque]];
  (void) [map putWithId:@"decorated" withId:[JavaLangBoolean valueOfWithBoolean:decorated]];
  @try {
    [ComSparsewareBellavistaUtils stopRealtimeUpdates];
    (void) [v showAsDialogWithJavaUtilMap:map];
  }
  @catch (JavaLangException *e) {
    [((RAREWindowViewer *) nil_chk(w)) handleExceptionWithJavaLangThrowable:e];
  }
}

+ (void)showDialogWithNSString:(NSString *)url
                   withBoolean:(BOOL)decorated
                   withBoolean:(BOOL)opaque {
  @try {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    RAREActionLink *link = [((RAREWindowViewer *) nil_chk(w)) createActionLinkWithId:url];
    (void) [RAREViewerCreator createViewerWithRAREiWidget:w withRAREActionLink:link withRAREiFunctionCallback:[[ComSparsewareBellavistaUtils_$6 alloc] initWithBoolean:decorated withBoolean:opaque]];
    [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) showWaitCursor];
  }
  @catch (JavaIoIOException *e) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:e];
  }
}

+ (void)showMainView {
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  RAREUTJSONObject *patient = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk(app)) getDataWithId:@"patient"], [RAREUTJSONObject class]);
  if (patient != nil) {
    NSString *id_ = (NSString *) check_class_cast([patient optStringWithNSString:@"id" withNSString:nil], [NSString class]);
    NSString *name = (NSString *) check_class_cast([patient optStringWithNSString:@"name" withNSString:nil], [NSString class]);
    if (id_ != nil && name != nil) {
      RAREWindowViewer *w = [RAREPlatform getWindowViewer];
      id<RAREiFunctionCallback> cb = [[ComSparsewareBellavistaUtils_$7 alloc] initWithRAREWindowViewer:w];
      @try {
        RAREUTJSONObject *map = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"user"], [RAREUTJSONObject class]);
        NSString *s = [((RAREUTJSONObject *) nil_chk(map)) optStringWithNSString:@"rmlMarkupFile" withNSString:@"physician.rml"];
        (void) [((RAREWindowViewer *) nil_chk(w)) createViewerWithNSString:s withRAREiFunctionCallback:cb];
      }
      @catch (JavaLangException *e) {
        [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:e];
      }
      return;
    }
  }
  [ComSparsewareBellavistaPatientSelect changePatientWithRAREiWidget:[app getTopWindowViewer] withComSparsewareBellavistaActionPath:nil];
}

+ (void)showPickListWithNSString:(NSString *)title
              withRAREActionLink:(RAREActionLink *)dataUrl
                     withBoolean:(BOOL)supportListDblClick
       withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback
                     withBoolean:(BOOL)onUiThread {
  [ComSparsewareBellavistaUtils showPickListWithNSString:title withRAREActionLink:dataUrl withJavaUtilList:nil withBoolean:supportListDblClick withRAREiFunctionCallback:callback withBoolean:onUiThread];
}

+ (void)showPickListWithNSString:(NSString *)title
                withJavaUtilList:(id<JavaUtilList>)rows
                     withBoolean:(BOOL)supportListDblClick
       withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback
                     withBoolean:(BOOL)onUiThread {
  [ComSparsewareBellavistaUtils showPickListWithNSString:title withRAREActionLink:nil withJavaUtilList:rows withBoolean:supportListDblClick withRAREiFunctionCallback:callback withBoolean:onUiThread];
}

+ (void)showPullBackAnimationWithRAREiViewer:(id<RAREiViewer>)viewer
                                 withBoolean:(BOOL)horizontal
                                 withBoolean:(BOOL)topLeft {
  if (ComSparsewareBellavistaUtils_pullbackAnimation_ == nil) {
    ComSparsewareBellavistaUtils_pullbackAnimation_ = [[RAREPullBackAnimation alloc] initWithBoolean:YES];
  }
  RAREPullBackAnimation *pa = ComSparsewareBellavistaUtils_pullbackAnimation_;
  if ([((RAREPullBackAnimation *) nil_chk(pa)) isRunning]) {
    pa = [[RAREPullBackAnimation alloc] init];
  }
  [pa setHorizontalWithBoolean:horizontal];
  [pa setDirectionWithRAREiAnimator_DirectionEnum:topLeft ? [RAREiAnimator_DirectionEnum BACKWARD] : [RAREiAnimator_DirectionEnum FORWARD]];
  [((id<RAREiViewer>) nil_chk(viewer)) animateWithRAREiPlatformAnimator:pa withRAREiFunctionCallback:nil];
}

+ (void)showShakeAnimationWithRAREiViewer:(id<RAREiViewer>)viewer {
  if (ComSparsewareBellavistaUtils_shakeAnimation_ == nil) {
    ComSparsewareBellavistaUtils_shakeAnimation_ = [[RAREShakeAnimation alloc] init];
  }
  RAREShakeAnimation *sa = ComSparsewareBellavistaUtils_shakeAnimation_;
  if ([((RAREShakeAnimation *) nil_chk(sa)) isRunning]) {
    sa = [[RAREShakeAnimation alloc] init];
  }
  [((id<RAREiViewer>) nil_chk(viewer)) animateWithRAREiPlatformAnimator:sa withRAREiFunctionCallback:nil];
}

+ (void)signInWithRAREiWidget:(id<RAREiWidget>)context
                 withNSString:(NSString *)username
                 withNSString:(NSString *)password
withComSparsewareBellavistaSettings_Server:(ComSparsewareBellavistaSettings_Server *)server {
  if (password != nil) {
    password = [password trim];
  }
  if (username != nil) {
    username = [username trim];
  }
  NSString *href = ((ComSparsewareBellavistaSettings_Server *) nil_chk(server))->serverURL_;
  if (![((NSString *) nil_chk(href)) hasSuffix:@"/"]) {
    href = [NSString stringWithFormat:@"%@/", href];
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if ([@"other" isEqual:href] && ([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getFormViewer])) getWidgetWithNSString:@"url"] != nil)) {
    href = [((id<RAREiWidget>) nil_chk([((id<RAREiFormViewer>) nil_chk([context getFormViewer])) getWidgetWithNSString:@"url"])) getValueAsString];
  }
  NSString *title;
  int n = [((NSString *) nil_chk(href)) indexOf:'^'];
  if (n != -1) {
    title = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:[href substring:n + 1]];
    href = [href substring:0 endIndex:n];
  }
  else {
    title = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.welcome"];
  }
  NSString *root = @"";
  JavaNetURL *url = nil;
  if ((href != nil) && ([href sequenceLength] > 0) && ![href hasPrefix:@"file:"] && ![@"local/" equalsIgnoreCase:href]) {
    if (![href contains:@"/demo"] && ![href contains:@"/BellaVista-android/assets/"]) {
      if ((password == nil) || ([password sequenceLength] < 4)) {
        [w alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.missing_password"]];
        return;
      }
      if ((username == nil) || ([username sequenceLength] < 4)) {
        [w alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.missing_username"]];
        return;
      }
    }
    else {
      ComSparsewareBellavistaUtils_demo_ = YES;
    }
    @try {
      url = [[JavaNetURL alloc] initWithNSString:href];
      root = [url getFile];
      n = [((NSString *) nil_chk(root)) lastIndexOf:'/'];
      if (n == -1) {
        root = @"";
      }
      else if (n > 0) {
        root = [root substring:0 endIndex:n];
      }
    }
    @catch (JavaLangException *e) {
      [w alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.invalid_server"]];
      return;
    }
  }
  else {
    ComSparsewareBellavistaUtils_demo_ = YES;
  }
  ComSparsewareBellavistaUtils_loginManager_ = [[ComSparsewareBellavistaUtils_LoginManager alloc] initWithRAREiWidget:context withJavaNetURL:url withNSString:root withComSparsewareBellavistaSettings_Server:server withNSString:title];
  [ComSparsewareBellavistaUtils_loginManager_ loginWithNSString:username withNSString:password];
}

+ (void)sortTableWithRARETableViewer:(RARETableViewer *)table
                             withInt:(int)sortPosition {
  id<JavaUtilList> rows = [((RARETableViewer *) nil_chk(table)) getRawRows];
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setColumnWithInt:sortPosition];
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([rows getWithInt:i])) getItemExWithInt:0];
    if (item != nil) {
      [item sortWithJavaUtilComparator:c];
    }
  }
  [table refreshItems];
}

+ (void)stopRealtimeUpdates {
}

+ (void)switchStackPaneViewerWithRAREStackPaneViewer:(RAREStackPaneViewer *)sp
                         withRAREiTransitionAnimator:(id<RAREiTransitionAnimator>)ta
                                         withBoolean:(BOOL)forward {
  int n = [((RAREStackPaneViewer *) nil_chk(sp)) getActiveViewerIndex];
  if (n == -1) {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:(id<RAREiTransitionAnimator>) check_protocol_cast(nil, @protocol(RAREiTransitionAnimator))];
    n = 0;
  }
  else {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:ta];
    if (forward) {
      if (n == 1) {
        [sp swapWithInt:0 withInt:1];
        n = 1;
      }
    }
    else {
      if (n == 0) {
        [sp swapWithInt:0 withInt:1];
        n = 0;
      }
    }
  }
  [sp switchToWithInt:n];
}

+ (void)switchToTabWithNSString:(NSString *)name {
}

+ (void)toggleActionsWithBoolean:(BOOL)enabled {
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  RAREUIAction *a = [((id<RAREiPlatformAppContext>) nil_chk(app)) getActionWithNSString:@"bv.action.lock"];
  if (a != nil && ![a isEnabled]) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.preferences"];
  if (a != nil && (ComSparsewareBellavistaUtils_applicationLock_ != nil || ![a isEnabled])) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.changePatient"];
  if (a != nil) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.print"];
  if (a != nil) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.help"];
  if (a != nil && ![a isEnabled]) {
    [a setEnabledWithBoolean:enabled];
  }
}

+ (void)toggleFullScreenWithBoolean:(BOOL)full {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  if (full) {
    if (![((id<RAREiPlatform>) nil_chk([RAREPlatform getPlatform])) isDesktop]) {
      [RAREPlatform setUseFullScreenWithBoolean:YES];
    }
    [ComSparsewareBellavistaPatientSelect resetActionBar];
    id<RAREiTarget> t = [w getTargetWithNSString:@"patient_info"];
    if (t != nil) {
      [t setVisibleWithBoolean:NO];
    }
    [((RAREActionBar *) nil_chk(ab)) setTitleWithJavaLangCharSequence:(id<JavaLangCharSequence>) check_protocol_cast([((id<RAREiPlatformAppContext>) nil_chk([w getAppContext])) getDataWithId:@"pt_name"], @protocol(JavaLangCharSequence))];
  }
  else {
    if (![((id<RAREiPlatform>) nil_chk([RAREPlatform getPlatform])) isDesktop]) {
      [RAREPlatform setUseFullScreenWithBoolean:NO];
    }
    id<RAREiTarget> t = [w getTargetWithNSString:@"patient_info"];
    if (t != nil) {
      [t setVisibleWithBoolean:YES];
    }
    [ComSparsewareBellavistaPatientSelect updateActionBar];
  }
  ComSparsewareBellavistaUtils_fullscreenMode_ = full;
}

+ (void)showPickListWithNSString:(NSString *)title
              withRAREActionLink:(RAREActionLink *)dataUrl
                withJavaUtilList:(id<JavaUtilList>)rows
                     withBoolean:(BOOL)supportListDblClick
       withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback
                     withBoolean:(BOOL)onUiThread {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  @try {
    RAREActionLink *link = [((RAREWindowViewer *) nil_chk(w)) createActionLinkWithId:@"/pick_list.rml"];
    (void) [RAREViewerCreator createViewerWithRAREiWidget:w withRAREActionLink:link withRAREiFunctionCallback:[[ComSparsewareBellavistaUtils_ShowPickListCallback alloc] initWithNSString:title withRAREActionLink:dataUrl withJavaUtilList:rows withBoolean:supportListDblClick withRAREiFunctionCallback:callback withBoolean:onUiThread]];
    [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) showWaitCursor];
  }
  @catch (JavaIoIOException *e) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:e];
  }
}

+ (void)lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:(ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *)type
                                                                    withBoolean:(BOOL)logout {
  if (ComSparsewareBellavistaUtils_applicationLock_ != nil) {
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  ComSparsewareBellavistaUtils_applicationLock_ = [[ComSparsewareBellavistaUtils_ApplicationLock alloc] initWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:type];
  [ComSparsewareBellavistaUtils toggleActionsWithBoolean:NO];
  RAREUIAction *a = [((RAREWindowViewer *) nil_chk(w)) getActionWithNSString:@"bv.action.lock"];
  if (a != nil) {
    [a setEnabledWithBoolean:NO];
  }
  if (logout) {
    [ComSparsewareBellavistaPatientSelect clearoutPatientCentricInfo];
    [((ComSparsewareBellavistaUtils_LoginManager *) nil_chk(ComSparsewareBellavistaUtils_loginManager_)) logout];
  }
  else {
    [ComSparsewareBellavistaPatientSelect resetActionBar];
  }
  id<RAREiContainer> rv = (id<RAREiContainer>) check_protocol_cast([w createViewerWithRAREiWidget:w withRARESPOTWidget:ComSparsewareBellavistaUtils_reloginConfig_], @protocol(RAREiContainer));
  RAREStackPaneViewer *panel = (RAREStackPaneViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(rv)) getWidgetWithNSString:@"reloginPanel"], [RAREStackPaneViewer class]);
  id<RAREiWidget> reason = [((id<RAREiContainer>) check_protocol_cast([((RAREStackPaneViewer *) nil_chk(panel)) getViewerWithInt:0], @protocol(RAREiContainer))) getWidgetWithNSString:@"reasonLabel"];
  switch ([type ordinal]) {
    case ComSparsewareBellavistaUtils_ApplicationLockType_TIMEOUT:
    [((id<RAREiWidget>) nil_chk(reason)) setValueWithId:[w getStringWithNSString:@"bv.text.client_timedout"]];
    break;
    case ComSparsewareBellavistaUtils_ApplicationLockType_UNAVAILABLE:
    [((id<RAREiWidget>) nil_chk(reason)) setValueWithId:[w getStringWithNSString:@"bv.text.service_unavailable"]];
    break;
    default:
    break;
  }
  id<RAREiTarget> t = [w getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk(t)) setViewerWithRAREiViewer:rv];
  if (logout) {
    [((id<RAREiViewer>) nil_chk(v)) dispose];
  }
  else {
    [panel switchToWithInt:1];
    ComSparsewareBellavistaUtils_applicationLock_->viewer_ = v;
  }
}

+ (void)initialize {
  if (self == [ComSparsewareBellavistaUtils class]) {
    ComSparsewareBellavistaUtils_actionPathSupporters_ = [[RAREUTIdentityArrayList alloc] initWithInt:5];
    ComSparsewareBellavistaUtils_stack_ = [[JavaUtilArrayList alloc] initWithInt:3];
    ComSparsewareBellavistaUtils_dialogOptions_ = [[JavaUtilHashMap alloc] initWithInt:5];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL },
    { "getDisplayedActionPath", NULL, "LComSparsewareBellavistaActionPath", 0x9, NULL },
    { "canReselectPatient", NULL, "Z", 0x9, NULL },
    { "categorizeWithJavaUtilList:withInt:withRARERenderableDataItem:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "categorizeWithRARETableViewer:withInt:withRARERenderableDataItem:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "continuePollingForUpdates", NULL, "Z", 0x9, NULL },
    { "createLinkWithRAREiWidget:withNSString:withBoolean:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createPhotosActionLinkWithNSString:withBoolean:", NULL, "LRAREActionLink", 0x9, NULL },
    { "fixCategorizedRowsWithJavaUtilList:withRAREUIFont:withBoolean:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "getaCommunicationHandler", NULL, "LComSparsewareBellavistaExternalaCommunicationHandler", 0x9, NULL },
    { "getActionPathWithBoolean:", NULL, "LComSparsewareBellavistaActionPath", 0x9, NULL },
    { "getAttachmentHandlerWithComSparsewareBellavistaDocument_DocumentItemTypeEnum:", NULL, "LComSparsewareBellavistaExternalaAttachmentHandler", 0x9, NULL },
    { "getListWidgetBoldFontWithRAREiWidget:", NULL, "LRAREUIFont", 0x9, NULL },
    { "getPatient", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "getPatientID", NULL, "LNSString", 0x9, NULL },
    { "getPreferences", NULL, "LComSparsewareBellavistaSettings_AppPreferences", 0x9, NULL },
    { "getSplitPaneViewerWithRAREiWidget:", NULL, "LRARESplitPaneViewer", 0x9, NULL },
    { "getStackPaneViewerWithRAREiWidget:", NULL, "LRAREStackPaneViewer", 0x9, NULL },
    { "getStatusIcons", NULL, "LJavaUtilHashMap", 0x9, NULL },
    { "getUserDisplayName", NULL, "LNSString", 0x9, NULL },
    { "getUserID", NULL, "LNSString", 0x9, NULL },
    { "groupByDateWithRARETableViewer:withJavaUtilList:", NULL, "LJavaUtilList", 0x9, NULL },
    { "groupRowsWithRARETableViewer:withJavaUtilList:withInt:withInt:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "handleActionPathWithComSparsewareBellavistaActionPath:", NULL, "Z", 0x9, NULL },
    { "isApplicationLocked", NULL, "Z", 0x9, NULL },
    { "isChartableWithNSString:", NULL, "Z", 0x9, NULL },
    { "isDemo", NULL, "Z", 0x9, NULL },
    { "isLoggingOff", NULL, "Z", 0x9, NULL },
    { "isReloggingIn", NULL, "Z", 0x9, NULL },
    { "isShuttingDown", NULL, "Z", 0x9, NULL },
    { "popWorkspaceViewer", NULL, "Z", 0x9, NULL },
    { "pushWorkspaceViewerWithNSString:", NULL, "V", 0x9, "JavaNetMalformedURLException" },
    { "resolveClassNameWithNSString:withNSString:", NULL, "LNSString", 0x9, NULL },
    { "showPickListWithNSString:withRAREActionLink:withJavaUtilList:withBoolean:withRAREiFunctionCallback:withBoolean:", NULL, "V", 0xa, NULL },
    { "lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:withBoolean:", NULL, "V", 0x8, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "colSeparator_", NULL, 0x9, "C" },
    { "ldSeparator_", NULL, 0x9, "C" },
    { "riSeparator_", NULL, 0x9, "C" },
    { "preferences_", NULL, 0x8, "LComSparsewareBellavistaSettings_AppPreferences" },
    { "loginManager_", NULL, 0x8, "LComSparsewareBellavistaUtils_LoginManager" },
    { "demo_", NULL, 0x8, "Z" },
    { "pullbackAnimation_", NULL, 0x8, "LRAREPullBackAnimation" },
    { "shakeAnimation_", NULL, 0x8, "LRAREShakeAnimation" },
    { "actionPath_", NULL, 0x8, "LComSparsewareBellavistaActionPath" },
    { "actionPathSupporters_", NULL, 0x8, "LRAREUTIdentityArrayList" },
    { "statusIcons_", NULL, 0x8, "LJavaUtilHashMap" },
    { "collectionManager_", NULL, 0x8, "LComSparsewareBellavistaCollectionManager" },
    { "attachmentHandlers_", NULL, 0x8, "LRAREUTJSONObject" },
    { "wasClosing_", NULL, 0x8, "Z" },
    { "applicationLock_", NULL, 0x8, "LComSparsewareBellavistaUtils_ApplicationLock" },
    { "commHandler_", NULL, 0x8, "LComSparsewareBellavistaExternalaCommunicationHandler" },
    { "settingsHandler_", NULL, 0x8, "LComSparsewareBellavistaSettings" },
    { "stack_", NULL, 0x8, "LJavaUtilArrayList" },
    { "backIcon_", NULL, 0x8, "LRAREUICompoundIcon" },
    { "dialogOptions_", NULL, 0x8, "LJavaUtilMap" },
    { "reloginConfig_", NULL, 0x8, "LRARESPOTViewer" },
    { "ignorePausing_", NULL, 0x8, "Z" },
    { "shuttingDown_", NULL, 0x8, "Z" },
    { "fullscreenMode_", NULL, 0x8, "Z" },
    { "boldFont_", NULL, 0xa, "LRAREUIFont" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils = { "Utils", "com.sparseware.bellavista", NULL, 0x1, 35, methods, 25, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils;
}

@end
@implementation ComSparsewareBellavistaUtils_StackEntry

- (id)initWithRAREiViewer:(id<RAREiViewer>)viewer {
  if (self = [super init]) {
    self->viewer_ = viewer;
  }
  return self;
}

- (id)initWithNSString:(NSString *)url
           withBoolean:(BOOL)disposable {
  if (self = [super init]) {
    self->url_ = url;
    self->disposable_ = disposable;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComSparsewareBellavistaUtils_StackEntry *)other {
  [super copyAllFieldsTo:other];
  other->disposable_ = disposable_;
  other->url_ = url_;
  other->viewer_ = viewer_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "viewer_", NULL, 0x0, "LRAREiViewer" },
    { "url_", NULL, 0x0, "LNSString" },
    { "disposable_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_StackEntry = { "StackEntry", "com.sparseware.bellavista", "Utils", 0x9, 0, NULL, 3, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_StackEntry;
}

@end
@implementation ComSparsewareBellavistaUtils_AlphaAnimator

- (id)initWithRAREiWidget:(id<RAREiWidget>)widget
             withNSString:(NSString *)dataKey {
  if (self = [super init]) {
    increment_ = 0.1f;
    min_ = 0.3f;
    self->widget_ = widget;
    self->dataKey_ = dataKey;
    self->alpha_ = 1;
  }
  return self;
}

- (void)run {
  if ([((id<RAREiWidget>) nil_chk(widget_)) isDisposed]) {
    return;
  }
  if ([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:dataKey_] != nil) {
    alpha_ = 1;
  }
  else {
    if (alpha_ >= 1) {
      up_ = NO;
      alpha_ = 1 - increment_;
    }
    else if (alpha_ <= min_) {
      up_ = YES;
      alpha_ = min_ + increment_;
    }
    else {
      if (up_) {
        alpha_ += increment_;
        alpha_ = [JavaLangMath minWithFloat:1 withFloat:alpha_];
      }
      else {
        alpha_ -= increment_;
        alpha_ = [JavaLangMath maxWithFloat:min_ withFloat:alpha_];
      }
    }
    (void) [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) setTimeoutWithId:self withLong:100];
  }
  [((id<RAREiPlatformComponent>) nil_chk([widget_ getContainerComponent])) setAlphaWithFloat:alpha_];
  [widget_ repaint];
}

- (void)copyAllFieldsTo:(ComSparsewareBellavistaUtils_AlphaAnimator *)other {
  [super copyAllFieldsTo:other];
  other->alpha_ = alpha_;
  other->dataKey_ = dataKey_;
  other->increment_ = increment_;
  other->min_ = min_;
  other->up_ = up_;
  other->widget_ = widget_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "widget_", NULL, 0x0, "LRAREiWidget" },
    { "dataKey_", NULL, 0x0, "LNSString" },
    { "alpha_", NULL, 0x0, "F" },
    { "up_", NULL, 0x0, "Z" },
    { "increment_", NULL, 0x0, "F" },
    { "min_", NULL, 0x0, "F" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_AlphaAnimator = { "AlphaAnimator", "com.sparseware.bellavista", "Utils", 0x8, 0, NULL, 6, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_AlphaAnimator;
}

@end
@implementation ComSparsewareBellavistaUtils_ApplicationLock

- (id)initWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:(ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *)type {
  if (self = [super init]) {
    NSString *patient = [ComSparsewareBellavistaUtils getPatientID];
    if (patient != nil) {
      actionPath_ = [ComSparsewareBellavistaUtils getDisplayedActionPath];
    }
  }
  return self;
}

- (void)disposeViewer {
  [((id<RAREiViewer>) nil_chk(viewer_)) dispose];
  [ComSparsewareBellavistaPatientSelect clearoutPatientCentricInfo];
  id<RAREiTarget> t = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiContainer> rv = (id<RAREiContainer>) check_protocol_cast([((id<RAREiTarget>) nil_chk(t)) getViewer], @protocol(RAREiContainer));
  [((RAREStackPaneViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(rv)) getWidgetWithNSString:@"reloginPanel"], [RAREStackPaneViewer class])) switchToWithInt:0];
  [rv update];
  viewer_ = nil;
}

- (void)restoreViewer {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiTarget> t = [((RAREWindowViewer *) nil_chk(w)) getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk(t)) setViewerWithRAREiViewer:viewer_];
  [((id<RAREiViewer>) nil_chk(v)) dispose];
  viewer_ = nil;
}

- (void)copyAllFieldsTo:(ComSparsewareBellavistaUtils_ApplicationLock *)other {
  [super copyAllFieldsTo:other];
  other->actionPath_ = actionPath_;
  other->viewer_ = viewer_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "viewer_", NULL, 0x0, "LRAREiViewer" },
    { "actionPath_", NULL, 0x0, "LComSparsewareBellavistaActionPath" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_ApplicationLock = { "ApplicationLock", "com.sparseware.bellavista", "Utils", 0x8, 1, methods, 2, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_ApplicationLock;
}

@end

static ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_TIMEOUT;
static ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_PAUSED;
static ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_UNAVAILABLE;
IOSObjectArray *ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_values;

@implementation ComSparsewareBellavistaUtils_ApplicationLockTypeEnum

+ (ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *)TIMEOUT {
  return ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_TIMEOUT;
}
+ (ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *)PAUSED {
  return ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_PAUSED;
}
+ (ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *)UNAVAILABLE {
  return ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_UNAVAILABLE;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [ComSparsewareBellavistaUtils_ApplicationLockTypeEnum class]) {
    ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_TIMEOUT = [[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum alloc] initWithNSString:@"TIMEOUT" withInt:0];
    ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_PAUSED = [[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum alloc] initWithNSString:@"PAUSED" withInt:1];
    ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_UNAVAILABLE = [[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum alloc] initWithNSString:@"UNAVAILABLE" withInt:2];
    ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_TIMEOUT, ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_PAUSED, ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_UNAVAILABLE, nil } count:3 type:[IOSClass classWithClass:[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_values];
}

+ (ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_values count]; i++) {
    ComSparsewareBellavistaUtils_ApplicationLockTypeEnum *e = ComSparsewareBellavistaUtils_ApplicationLockTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LComSparsewareBellavistaUtils_ApplicationLockTypeEnum"};
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_ApplicationLockTypeEnum = { "ApplicationLockType", "com.sparseware.bellavista", "Utils", 0x4018, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_ComSparsewareBellavistaUtils_ApplicationLockTypeEnum;
}

@end
@implementation ComSparsewareBellavistaUtils_LinkErrorHandler

- (id)init {
  return [super init];
}

- (JavaLangException *)getExceptionChangeWithRAREActionLink:(RAREActionLink *)link
                                      withJavaLangException:(JavaLangException *)ex {
  if ([ex isKindOfClass:[JavaNetConnectException class]]) {
    return [[ComSparsewareBellavistaUtils_PollingConnectionRefused alloc] init];
  }
  return ex;
}

- (RAREActionLink_iErrorHandler_ActionEnum *)handleErrorWithRAREActionLink:(RAREActionLink *)link
                                                     withJavaLangException:(JavaLangException *)ex
                                                    withRAREiURLConnection:(id<RAREiURLConnection>)conn {
  if ([ex isKindOfClass:[JavaNetConnectException class]]) {
    if ([((RAREActionLink *) nil_chk(link)) getAttributes] != nil && [((id<JavaUtilMap>) nil_chk([link getAttributes])) getWithId:@"polling"] != nil) {
      return [RAREActionLink_iErrorHandler_ActionEnum CHANGE_ERROR];
    }
  }
  return [RAREActionLink_iErrorHandler_ActionEnum ERROR];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getExceptionChangeWithRAREActionLink:withJavaLangException:", NULL, "LJavaLangException", 0x1, NULL },
    { "handleErrorWithRAREActionLink:withJavaLangException:withRAREiURLConnection:", NULL, "LRAREActionLink_iErrorHandler_ActionEnum", 0x1, NULL },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_LinkErrorHandler = { "LinkErrorHandler", "com.sparseware.bellavista", "Utils", 0x8, 2, methods, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaUtils_LinkErrorHandler;
}

@end
@implementation ComSparsewareBellavistaUtils_LoginManager

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
           withJavaNetURL:(JavaNetURL *)url
             withNSString:(NSString *)root
withComSparsewareBellavistaSettings_Server:(ComSparsewareBellavistaSettings_Server *)server
             withNSString:(NSString *)title {
  if (self = [super init]) {
    self->contextWidget_LoginManager_ = context;
    self->url_ = url;
    self->root_ = root;
    self->server_ = server;
    self->title_ = title;
  }
  return self;
}

- (BOOL)canReselectPatient {
  BOOL ok = reselectPatient_;
  reselectPatient_ = NO;
  return ok;
}

- (void)dispose {
}

- (id)compute {
  id result = nil;
  @try {
    RAREActionLink *l;
    if (url_ == nil) {
      l = [((RAREWindowViewer *) nil_chk(window_)) createActionLinkWithId:@"/hub/main/account/login/user.json"];
    }
    else {
      l = [((RAREWindowViewer *) nil_chk(window_)) createActionLinkWithId:[[JavaNetURL alloc] initWithJavaNetURL:url_ withNSString:@"hub/main/account/login/user.json"]];
    }
    NSString *s;
    if (![ComSparsewareBellavistaUtils demo]) {
      id<JavaUtilMap> map = [[JavaUtilHashMap alloc] init];
      (void) [map putWithId:@"username" withId:username_];
      (void) [map putWithId:@"password" withId:[RAREFunctions base64WithNSString:password_]];
      (void) [map putWithId:@"size" withId:[RAREUIScreen getRelativeScreenSizeName]];
      (void) [map putWithId:@"base64" withId:@"true"];
      s = [((RAREActionLink *) nil_chk(l)) sendFormDataWithRAREiWidget:contextWidget_LoginManager_ withJavaUtilMap:map];
    }
    else {
      s = [((RAREActionLink *) nil_chk(l)) getContentAsString];
    }
    RAREUTJSONObject *user = [[RAREUTJSONObject alloc] initWithNSString:s];
    result = user;
    if (((ComSparsewareBellavistaSettings_Server *) nil_chk(server_))->isContextServer_) {
      if (url_ != nil) {
        [((id<RAREiPlatformAppContext>) nil_chk([((RAREWindowViewer *) nil_chk(window_)) getAppContext])) setContextURLWithJavaNetURL:[[JavaNetURL alloc] initWithJavaNetURL:url_ withNSString:[NSString stringWithFormat:@"%@/", [RAREUIScreen getRelativeScreenSizeName]]] withNSString:root_];
      }
    }
    if (url_ != nil) {
      s = server_->serverURL_;
      if ([((NSString *) nil_chk(s)) hasSuffix:@"/"]) {
        s = [NSString stringWithFormat:@"%@hub/", s];
      }
      else {
        s = [NSString stringWithFormat:@"%@/hub/", s];
      }
      [((id<RAREiPlatformAppContext>) nil_chk([((RAREWindowViewer *) nil_chk(window_)) getAppContext])) addURLPrefixMappingWithNSString:@"/hub/" withNSString:s];
    }
    RAREUTJSONObject *csp = [user optJSONObjectWithNSString:@"site_parameters"];
    s = csp == nil ? nil : [csp optStringWithNSString:@"attributesURL" withNSString:nil];
    if (s != nil && [s sequenceLength] > 0) {
      l = [((RAREWindowViewer *) nil_chk(window_)) createActionLinkWithRAREiWidget:window_ withId:[NSString stringWithFormat:@"/hub/%@", s]];
      RAREUTJSONObject *att = [[RAREUTJSONObject alloc] initWithNSString:[((RAREActionLink *) nil_chk(l)) getContentAsString]];
      [((id<RAREiPlatformAppContext>) nil_chk([window_ getAppContext])) putDataWithJavaUtilMap:att withBoolean:YES];
    }
    (void) [ComSparsewareBellavistaUtils setReloginConfig:(RARESPOTViewer *) check_class_cast([((RAREWindowViewer *) nil_chk(window_)) createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithRAREiWidget:window_ withNSString:@"/relogin.rml"]], [RARESPOTViewer class])];
    [RAREActionLink setGlobalErrorHandlerWithRAREActionLink_iErrorHandler:[[ComSparsewareBellavistaUtils_LinkErrorHandler alloc] init]];
  }
  @catch (JavaLangException *e) {
    result = e;
  }
  password_ = nil;
  return result;
}

- (void)finishWithId:(id)result {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREWindowViewer *) nil_chk(w)) hideProgressPopup];
  if ([((id<RAREiWidget>) nil_chk(contextWidget_LoginManager_)) isDisposed]) {
    return;
  }
  if ([result isKindOfClass:[JavaLangException class]]) {
    if ([result isKindOfClass:[RAREHTTPException class]]) {
      RAREHTTPException *he = (RAREHTTPException *) check_class_cast(result, [RAREHTTPException class]);
      if ([((RAREHTTPException *) nil_chk(he)) getStatusCode] == 401) {
        [w alertWithId:[w getStringWithNSString:@"bv.text.invalidCredentials"]];
        id<RAREiWidget> ww = [((id<RAREiFormViewer>) nil_chk([contextWidget_LoginManager_ getFormViewer])) getWidgetWithNSString:@"password"];
        if (ww != nil) {
          [ww requestFocus];
        }
      }
      else {
        [w errorWithId:[he getMessageBody]];
      }
      return;
    }
    else if ([result isKindOfClass:[JavaNetSocketException class]]) {
      [w errorWithId:[RAREApplicationException getMessageExWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])]];
      return;
    }
    [w errorWithId:result];
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
    return;
  }
  (void) [ComSparsewareBellavistaUtils setPreferences:[((ComSparsewareBellavistaSettings *) nil_chk([ComSparsewareBellavistaUtils settingsHandler])) getAppPreferencesWithNSString:username_]];
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  RAREUTJSONObject *user = (RAREUTJSONObject *) check_class_cast(result, [RAREUTJSONObject class]);
  (void) [((id<RAREiPlatformAppContext>) nil_chk(app)) putDataWithId:@"user" withId:user];
  (void) [app putDataWithId:@"username" withId:username_];
  (void) [app putDataWithId:@"userDisplayName" withId:[((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:@"name" withNSString:username_]];
  RAREUIAction *a = [app getActionWithNSString:@"bv.action.preferences"];
  if (a != nil) {
    [a setEnabledWithBoolean:YES];
  }
  a = [app getActionWithNSString:@"bv.action.help"];
  if (a != nil) {
    [a setEnabledWithBoolean:YES];
  }
  if (title_ != nil && [title_ sequenceLength] > 0) {
    (void) [((id<JavaUtilMap>) nil_chk([w getStrings])) putWithId:@"bv.text.welcome" withId:title_];
  }
  @try {
    if ([ComSparsewareBellavistaUtils isDemo]) {
    }
    if ([ComSparsewareBellavistaUtils applicationLock] != nil) {
      (void) [ComSparsewareBellavistaUtils setActionPath:[ComSparsewareBellavistaUtils applicationLock]->actionPath_];
      (void) [ComSparsewareBellavistaUtils setApplicationLock:nil];
    }
    else {
      (void) [ComSparsewareBellavistaUtils setCollectionManager:[[ComSparsewareBellavistaCollectionManager alloc] init]];
      RAREUTJSONObject *info = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"careTeamInfo"], [RAREUTJSONObject class]);
      NSString *cls = [((RAREUTJSONObject *) nil_chk(info)) optStringWithNSString:@"communicationHandlerClass" withNSString:nil];
      if (cls != nil && [cls sequenceLength] > 0) {
        cls = [ComSparsewareBellavistaUtils resolveClassNameWithNSString:cls withNSString:@"external"];
        (void) [ComSparsewareBellavistaUtils setCommHandler:(ComSparsewareBellavistaExternalaCommunicationHandler *) check_class_cast([RAREPlatform createObjectWithNSString:cls], [ComSparsewareBellavistaExternalaCommunicationHandler class])];
        if ([ComSparsewareBellavistaUtils commHandler] == nil) {
          [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Unable to load communication class:%@", cls]];
        }
      }
      [[ComSparsewareBellavistaUtils collectionManager] startPolling];
    }
    [ComSparsewareBellavistaPatientSelect changePatientWithRAREiWidget:w withComSparsewareBellavistaActionPath:[ComSparsewareBellavistaUtils actionPath]];
  }
  @catch (JavaLangException *ex) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:ex];
  }
  contextWidget_LoginManager_ = nil;
}

- (void)loginWithNSString:(NSString *)username
             withNSString:(NSString *)password {
  self->username_ = username;
  self->password_ = password;
  loggingOff_ = NO;
  reloggingIn_ = NO;
  reselectPatient_ = NO;
  [ComSparsewareBellavistaUtils toggleActionsWithBoolean:NO];
  [self start];
}

- (void)logout {
  loggingOff_ = YES;
  [RAREPlatform closeOpenConnectionsWithBoolean:YES];
  if (![ComSparsewareBellavistaUtils isDemo] && ![ComSparsewareBellavistaUtils isApplicationLocked]) {
    @try {
      RAREActionLink *l = [((RAREWindowViewer *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getTopWindowViewer])) createActionLinkWithId:@"/hub/main/account/logout"];
      JavaLangThread *t = [[JavaLangThread alloc] initWithJavaLangRunnable:[[ComSparsewareBellavistaUtils_LoginManager_$1 alloc] initWithRAREActionLink:l]];
      [t setDaemonWithBoolean:YES];
      [t start];
      [t joinWithLong:1000];
    }
    @catch (JavaLangException *ex) {
    }
  }
}

- (void)reloginWithRAREiWidget:(id<RAREiWidget>)context
                  withNSString:(NSString *)password {
  contextWidget_LoginManager_ = context;
  self->password_ = password;
  loggingOff_ = NO;
  reloggingIn_ = YES;
  [self start];
}

- (void)start {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [w showProgressPopupWithJavaLangCharSequence:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.authenticating"]];
  (void) [w spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (void)copyAllFieldsTo:(ComSparsewareBellavistaUtils_LoginManager *)other {
  [super copyAllFieldsTo:other];
  other->contextWidget_LoginManager_ = contextWidget_LoginManager_;
  other->loggingOff_ = loggingOff_;
  other->password_ = password_;
  other->reloggingIn_ = reloggingIn_;
  other->reselectPatient_ = reselectPatient_;
  other->root_ = root_;
  other->server_ = server_;
  other->title_ = title_;
  other->url_ = url_;
  other->username_ = username_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "canReselectPatient", NULL, "Z", 0x1, NULL },
    { "compute", NULL, "LNSObject", 0x1, NULL },
    { "start", NULL, "V", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "root_", NULL, 0x0, "LNSString" },
    { "title_", NULL, 0x0, "LNSString" },
    { "server_", NULL, 0x0, "LComSparsewareBellavistaSettings_Server" },
    { "username_", NULL, 0x0, "LNSString" },
    { "url_", NULL, 0x0, "LJavaNetURL" },
    { "loggingOff_", NULL, 0x0, "Z" },
    { "reloggingIn_", NULL, 0x0, "Z" },
    { "contextWidget_LoginManager_", "contextWidget", 0x0, "LRAREiWidget" },
    { "password_", NULL, 0x0, "LNSString" },
    { "reselectPatient_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_LoginManager = { "LoginManager", "com.sparseware.bellavista", "Utils", 0x8, 3, methods, 10, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_LoginManager;
}

@end
@implementation ComSparsewareBellavistaUtils_LoginManager_$1

- (void)run {
  @try {
    [((RAREActionLink *) nil_chk(val$l_)) hit];
  }
  @catch (JavaLangException *ex) {
    [RAREPlatform ignoreExceptionWithNSString:@"logout" withJavaLangThrowable:ex];
  }
}

- (id)initWithRAREActionLink:(RAREActionLink *)capture$0 {
  val$l_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$l_", NULL, 0x1012, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_LoginManager_$1 = { "$1", "com.sparseware.bellavista", "Utils$LoginManager", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_LoginManager_$1;
}

@end
@implementation ComSparsewareBellavistaUtils_PollingConnectionRefused

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_PollingConnectionRefused = { "PollingConnectionRefused", "com.sparseware.bellavista", "Utils", 0x8, 0, NULL, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaUtils_PollingConnectionRefused;
}

@end
@implementation ComSparsewareBellavistaUtils_ShowPickListCallback

- (id)initWithNSString:(NSString *)title
    withRAREActionLink:(RAREActionLink *)dataUrl
      withJavaUtilList:(id<JavaUtilList>)rows
           withBoolean:(BOOL)supportListDblClick
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback
           withBoolean:(BOOL)onUiThread {
  if (self = [super init]) {
    self->title_ = title;
    self->dataUrl_ = dataUrl;
    self->rows_ = rows;
    self->supportListDblClick_ = supportListDblClick;
    self->callback_ = [[RARECallbackFunctionCallback alloc] initWithRAREiFunctionCallback:callback withBoolean:onUiThread];
  }
  return self;
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [self hideWaitCursor];
  @try {
    if (canceled) {
      [((id<RAREiFunctionCallback>) nil_chk(callback_)) finishedWithBoolean:canceled withId:returnValue];
      if ([returnValue isKindOfClass:[JavaLangException class]]) {
        [((RAREWindowViewer *) nil_chk(window_)) handleExceptionWithJavaLangThrowable:(JavaLangException *) check_class_cast(returnValue, [JavaLangException class])];
      }
      return;
    }
    id<RAREiContainer> v = (id<RAREiContainer>) check_protocol_cast(returnValue, @protocol(RAREiContainer));
    [((id<RAREiContainer>) nil_chk(v)) setAttributeWithNSString:@"dlgCallback" withId:callback_];
    [((id<RAREiWidget>) nil_chk([v getWidgetWithNSString:@"titleLabel"])) setValueWithId:title_];
    RAREaWidget *list = (RAREaWidget *) check_class_cast([v getWidgetWithNSString:@"list"], [RAREaWidget class]);
    if (rows_ != nil) {
      [((RAREaWidget *) nil_chk(list)) setAllWithJavaUtilCollection:rows_];
    }
    else {
      (void) [((RAREaWidget *) nil_chk(list)) setDataLinkWithRAREActionLink:dataUrl_ withBoolean:YES];
    }
    if (supportListDblClick_) {
      [((RAREaWidget *) nil_chk(list)) setEventHandlerWithNSString:@"onDblClick" withId:@"class:PickList#onOkAction" withBoolean:YES];
    }
    id<JavaUtilMap> map = [[JavaUtilHashMap alloc] init];
    (void) [map putWithId:@"decorated" withId:[JavaLangBoolean valueOfWithBoolean:NO]];
    (void) [map putWithId:@"opaque" withId:[JavaLangBoolean valueOfWithBoolean:NO]];
    (void) [v showAsDialogWithJavaUtilMap:map];
  }
  @finally {
    callback_ = nil;
    rows_ = nil;
    dataUrl_ = nil;
  }
}

- (void)copyAllFieldsTo:(ComSparsewareBellavistaUtils_ShowPickListCallback *)other {
  [super copyAllFieldsTo:other];
  other->callback_ = callback_;
  other->dataUrl_ = dataUrl_;
  other->rows_ = rows_;
  other->supportListDblClick_ = supportListDblClick_;
  other->title_ = title_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "callback_", NULL, 0x0, "LRAREiFunctionCallback" },
    { "dataUrl_", NULL, 0x0, "LRAREActionLink" },
    { "rows_", NULL, 0x0, "LJavaUtilList" },
    { "supportListDblClick_", NULL, 0x0, "Z" },
    { "title_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_ShowPickListCallback = { "ShowPickListCallback", "com.sparseware.bellavista", "Utils", 0x8, 0, NULL, 5, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_ShowPickListCallback;
}

@end
@implementation ComSparsewareBellavistaUtils_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideProgressPopup];
  @try {
    if (canceled || [returnValue isKindOfClass:[JavaLangThrowable class]]) {
      [((ComSparsewareBellavistaUtils_ApplicationLock *) nil_chk([ComSparsewareBellavistaUtils applicationLock])) disposeViewer];
    }
    else {
      [ComSparsewareBellavistaUtils toggleActionsWithBoolean:YES];
      [ComSparsewareBellavistaUtils handleStatusObjectWithRAREUTJSONObject:(RAREUTJSONObject *) check_class_cast(((RAREUTObjectHolder *) nil_chk(returnValue))->value_, [RAREUTJSONObject class])];
      [((ComSparsewareBellavistaUtils_ApplicationLock *) nil_chk([ComSparsewareBellavistaUtils applicationLock])) restoreViewer];
      [ComSparsewareBellavistaPatientSelect updateActionBar];
      (void) [ComSparsewareBellavistaUtils setApplicationLock:nil];
    }
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    [ComSparsewareBellavistaUtils exitEx];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$1 = { "$1", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$1;
}

@end
@implementation ComSparsewareBellavistaUtils_$2

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[ComSparsewareBellavistaUtils_$2_$1 alloc] init]];
  }
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$2 = { "$2", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$2;
}

@end
@implementation ComSparsewareBellavistaUtils_$2_$1

- (void)run {
  [ComSparsewareBellavistaUtils exitEx];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$2_$1 = { "$1", "com.sparseware.bellavista", "Utils$$2", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$2_$1;
}

@end
@implementation ComSparsewareBellavistaUtils_$3

- (void)run {
  if ([ComSparsewareBellavistaUtils applicationLock] != nil) {
    return;
  }
  if ([val$e_ isKindOfClass:[ComSparsewareBellavistaUtils_PollingConnectionRefused class]]) {
    [ComSparsewareBellavistaUtils lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum UNAVAILABLE] withBoolean:YES];
    return;
  }
  if ([val$e_ isKindOfClass:[JavaNetConnectException class]]) {
    [ComSparsewareBellavistaUtils lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum UNAVAILABLE] withBoolean:YES];
    [val$w_ alertWithId:[((RAREWindowViewer *) nil_chk(val$w_)) getStringWithNSString:@"bv.text.connection_refused"]];
    return;
  }
  if ([val$e_ isKindOfClass:[RAREHTTPException class]]) {
    RAREHTTPException *he = (RAREHTTPException *) check_class_cast(val$e_, [RAREHTTPException class]);
    int code = [((RAREHTTPException *) nil_chk(he)) getStatusCode];
    switch (code) {
      case 401:
      case 504:
      [ComSparsewareBellavistaUtils lockApplicationWithBoolean:YES];
      return;
      case 503:
      [ComSparsewareBellavistaUtils lockApplicationWithComSparsewareBellavistaUtils_ApplicationLockTypeEnum:[ComSparsewareBellavistaUtils_ApplicationLockTypeEnum UNAVAILABLE] withBoolean:YES];
      return;
      case 403:
      [ComSparsewareBellavistaUtils exitEx];
      return;
      case 409:
      break;
    }
  }
  [((JavaLangThrowable *) nil_chk(val$e_)) printStackTrace];
  [((RAREWindowViewer *) nil_chk(val$w_)) alertWithId:val$e_ withRAREiFunctionCallback:[[ComSparsewareBellavistaUtils_$3_$1 alloc] init]];
}

- (id)initWithJavaLangThrowable:(JavaLangThrowable *)capture$0
           withRAREWindowViewer:(RAREWindowViewer *)capture$1 {
  val$e_ = capture$0;
  val$w_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$e_", NULL, 0x1012, "LJavaLangThrowable" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$3 = { "$3", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$3;
}

@end
@implementation ComSparsewareBellavistaUtils_$3_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [ComSparsewareBellavistaUtils exitEx];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$3_$1 = { "$1", "com.sparseware.bellavista", "Utils$$3", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$3_$1;
}

@end
@implementation ComSparsewareBellavistaUtils_$4

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    [ComSparsewareBellavistaUtils pushWorkspaceViewerWithRAREiViewer:(id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer))];
  }
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$4 = { "$4", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$4;
}

@end
@implementation ComSparsewareBellavistaUtils_$5

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (![((RAREStackPaneViewer *) nil_chk(val$sp_)) isDisposed]) {
    int n = 1 - [val$sp_ getActiveViewerIndex];
    id<RAREiViewer> v = [val$sp_ removeViewerWithInt:n];
    if (v != nil) {
      [v dispose];
    }
  }
}

- (id)initWithRAREStackPaneViewer:(RAREStackPaneViewer *)capture$0 {
  val$sp_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$sp_", NULL, 0x1012, "LRAREStackPaneViewer" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$5 = { "$5", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$5;
}

@end
@implementation ComSparsewareBellavistaUtils_$6

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    [ComSparsewareBellavistaUtils showDialogWithRAREiViewer:(id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer)) withBoolean:val$decorated_ withBoolean:val$opaque_];
  }
}

- (id)initWithBoolean:(BOOL)capture$0
          withBoolean:(BOOL)capture$1 {
  val$decorated_ = capture$0;
  val$opaque_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$decorated_", NULL, 0x1012, "Z" },
    { "val$opaque_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$6 = { "$6", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$6;
}

@end
@implementation ComSparsewareBellavistaUtils_$7

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[JavaLangException class]]) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else {
    [ComSparsewareBellavistaUtils toggleActionsWithBoolean:YES];
    id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer));
    [((RAREWindowViewer *) nil_chk(val$w_)) activateViewerWithRAREiViewer:v withNSString:[RAREiTarget TARGET_WORKSPACE]];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaUtils_$7 = { "$7", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_ComSparsewareBellavistaUtils_$7;
}

@end
