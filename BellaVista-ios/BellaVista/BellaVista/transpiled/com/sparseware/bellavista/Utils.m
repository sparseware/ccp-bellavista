//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/Utils.java
//
//  Created by decoteaud on 3/14/16.
//

#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/CallbackFunctionCallback.h"
#include "com/appnativa/rare/ErrorInformation.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/aFunctionCallback.h"
#include "com/appnativa/rare/converters/DateContext.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/HTTPException.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/spot/GridPane.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/ActionBar.h"
#include "com/appnativa/rare/ui/AlertPanel.h"
#include "com/appnativa/rare/ui/FontUtils.h"
#include "com/appnativa/rare/ui/LinearPanel.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/effects/PullBackAnimation.h"
#include "com/appnativa/rare/ui/effects/ShakeAnimation.h"
#include "com/appnativa/rare/ui/effects/SlideAnimation.h"
#include "com/appnativa/rare/ui/effects/TransitionAnimator.h"
#include "com/appnativa/rare/ui/effects/iAnimator.h"
#include "com/appnativa/rare/ui/effects/iPlatformAnimator.h"
#include "com/appnativa/rare/ui/effects/iTransitionAnimator.h"
#include "com/appnativa/rare/ui/event/ActionEvent.h"
#include "com/appnativa/rare/ui/iActionComponent.h"
#include "com/appnativa/rare/ui/iPlatformComponent.h"
#include "com/appnativa/rare/ui/iPlatformGraphics.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/util/Grouper.h"
#include "com/appnativa/rare/util/SubItemComparator.h"
#include "com/appnativa/rare/viewer/GridPaneViewer.h"
#include "com/appnativa/rare/viewer/SplitPaneViewer.h"
#include "com/appnativa/rare/viewer/StackPaneViewer.h"
#include "com/appnativa/rare/viewer/TabPaneViewer.h"
#include "com/appnativa/rare/viewer/TableViewer.h"
#include "com/appnativa/rare/viewer/WidgetPaneViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/aContainer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/PushButtonWidget.h"
#include "com/appnativa/rare/widget/aWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/IdentityArrayList.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/appnativa/util/iFilterableList.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/CardStackUtils.h"
#include "com/sparseware/bellavista/CollectionManager.h"
#include "com/sparseware/bellavista/DefaultImageViewer.h"
#include "com/sparseware/bellavista/MessageException.h"
#include "com/sparseware/bellavista/OrderManager.h"
#include "com/sparseware/bellavista/Orders.h"
#include "com/sparseware/bellavista/PatientSelect.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/aAttachmentHandler.h"
#include "com/sparseware/bellavista/external/aCommunicationHandler.h"
#include "com/sparseware/bellavista/external/aProtocolHandler.h"
#include "com/sparseware/bellavista/iValueChecker.h"
#include "com/sparseware/bellavista/service/StreamHandlerFactory.h"
#include "java/io/IOException.h"
#include "java/io/StringWriter.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Package.h"
#include "java/lang/Runnable.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/net/ConnectException.h"
#include "java/net/MalformedURLException.h"
#include "java/net/SocketException.h"
#include "java/net/URL.h"
#include "java/net/URLStreamHandler.h"
#include "java/nio/channels/ClosedByInterruptException.h"
#include "java/nio/channels/ClosedChannelException.h"
#include "java/text/DateFormat.h"
#include "java/text/ParseException.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation CCPBVUtils

static unichar CCPBVUtils_colSeparator_ = '^';
static unichar CCPBVUtils_ldSeparator_ = '|';
static unichar CCPBVUtils_riSeparator_ = '~';
static NSString * CCPBVUtils_DISPOSABLE_STACKENTRY_PROPERTY_ = @"_BV_DISPOSABLE_";
static NSString * CCPBVUtils_POP_RUNNER_STACKENTRY_PROPERTY_ = @"_BV_POP_RUNNER_";
static CCPBVSettings_AppPreferences * CCPBVUtils_preferences_;
static CCPBVUtils_LoginManager * CCPBVUtils_loginManager_;
static BOOL CCPBVUtils_demo_;
static RAREPullBackAnimation * CCPBVUtils_pullbackAnimation_;
static RAREShakeAnimation * CCPBVUtils_shakeAnimation_;
static CCPBVActionPath * CCPBVUtils_actionPath_;
static RAREUTIdentityArrayList * CCPBVUtils_actionPathSupporters_;
static JavaUtilHashMap * CCPBVUtils_statusIcons_;
static CCPBVCollectionManager * CCPBVUtils_collectionManager_;
static RAREUTJSONObject * CCPBVUtils_attachmentHandlers_;
static BOOL CCPBVUtils_wasClosing_;
static CCPBVUtils_ApplicationLock * CCPBVUtils_applicationLock_;
static CCPBVaCommunicationHandler * CCPBVUtils_commHandler_;
static CCPBVSettings * CCPBVUtils_settingsHandler_;
static JavaUtilArrayList * CCPBVUtils_stack_;
static CCPBVUtils_BackIcon * CCPBVUtils_actionbarIcon_;
static id<JavaUtilMap> CCPBVUtils_dialogOptions_;
static RARESPOTViewer * CCPBVUtils_reloginConfig_;
static RARESPOTGridPane * CCPBVUtils_genericContainerCfg_;
static BOOL CCPBVUtils_ignorePausing_;
static BOOL CCPBVUtils_shuttingDown_;
static BOOL CCPBVUtils_fullscreenMode_;
static BOOL CCPBVUtils_cardStack_;
static RAREUIFont * CCPBVUtils_boldFont_;
static RARETransitionAnimator * CCPBVUtils_popAnimation_;
static id<RAREiContainer> CCPBVUtils_titleWidget_;
static id<JavaLangCharSequence> CCPBVUtils_actionBarTitle_;
static BOOL CCPBVUtils_googleGlass_;
static BOOL CCPBVUtils_reverseFling_;
static JavaUtilHashMap * CCPBVUtils_protocolHandlers_;
static CCPBVUtils_DefaultProtocolHandler * CCPBVUtils_defaultProtocolHandler_;
static BOOL CCPBVUtils_locking_;
static NSString * CCPBVUtils_styleSheet_;
static CCPBVSettings_Server * CCPBVUtils_dataServer_;
static CCPBVaProtocolHandler * CCPBVUtils_protocolHandler_;
static NSString * CCPBVUtils_serverHost_;
static JavaUtilHashSet * CCPBVUtils_imageAttachmentTypes_;

+ (unichar)colSeparator {
  return CCPBVUtils_colSeparator_;
}

+ (unichar *)colSeparatorRef {
  return &CCPBVUtils_colSeparator_;
}

+ (unichar)ldSeparator {
  return CCPBVUtils_ldSeparator_;
}

+ (unichar *)ldSeparatorRef {
  return &CCPBVUtils_ldSeparator_;
}

+ (unichar)riSeparator {
  return CCPBVUtils_riSeparator_;
}

+ (unichar *)riSeparatorRef {
  return &CCPBVUtils_riSeparator_;
}

+ (NSString *)DISPOSABLE_STACKENTRY_PROPERTY {
  return CCPBVUtils_DISPOSABLE_STACKENTRY_PROPERTY_;
}

+ (void)setDISPOSABLE_STACKENTRY_PROPERTY:(NSString *)DISPOSABLE_STACKENTRY_PROPERTY {
  CCPBVUtils_DISPOSABLE_STACKENTRY_PROPERTY_ = DISPOSABLE_STACKENTRY_PROPERTY;
}

+ (NSString *)POP_RUNNER_STACKENTRY_PROPERTY {
  return CCPBVUtils_POP_RUNNER_STACKENTRY_PROPERTY_;
}

+ (void)setPOP_RUNNER_STACKENTRY_PROPERTY:(NSString *)POP_RUNNER_STACKENTRY_PROPERTY {
  CCPBVUtils_POP_RUNNER_STACKENTRY_PROPERTY_ = POP_RUNNER_STACKENTRY_PROPERTY;
}

+ (CCPBVSettings_AppPreferences *)preferences {
  return CCPBVUtils_preferences_;
}

+ (void)setPreferences:(CCPBVSettings_AppPreferences *)preferences {
  CCPBVUtils_preferences_ = preferences;
}

+ (CCPBVUtils_LoginManager *)loginManager {
  return CCPBVUtils_loginManager_;
}

+ (void)setLoginManager:(CCPBVUtils_LoginManager *)loginManager {
  CCPBVUtils_loginManager_ = loginManager;
}

+ (BOOL)demo {
  return CCPBVUtils_demo_;
}

+ (BOOL *)demoRef {
  return &CCPBVUtils_demo_;
}

+ (RAREPullBackAnimation *)pullbackAnimation {
  return CCPBVUtils_pullbackAnimation_;
}

+ (void)setPullbackAnimation:(RAREPullBackAnimation *)pullbackAnimation {
  CCPBVUtils_pullbackAnimation_ = pullbackAnimation;
}

+ (RAREShakeAnimation *)shakeAnimation {
  return CCPBVUtils_shakeAnimation_;
}

+ (void)setShakeAnimation:(RAREShakeAnimation *)shakeAnimation {
  CCPBVUtils_shakeAnimation_ = shakeAnimation;
}

+ (CCPBVActionPath *)actionPath {
  return CCPBVUtils_actionPath_;
}

+ (void)setActionPath:(CCPBVActionPath *)actionPath {
  CCPBVUtils_actionPath_ = actionPath;
}

+ (RAREUTIdentityArrayList *)actionPathSupporters {
  return CCPBVUtils_actionPathSupporters_;
}

+ (void)setActionPathSupporters:(RAREUTIdentityArrayList *)actionPathSupporters {
  CCPBVUtils_actionPathSupporters_ = actionPathSupporters;
}

+ (JavaUtilHashMap *)statusIcons {
  return CCPBVUtils_statusIcons_;
}

+ (void)setStatusIcons:(JavaUtilHashMap *)statusIcons {
  CCPBVUtils_statusIcons_ = statusIcons;
}

+ (CCPBVCollectionManager *)collectionManager {
  return CCPBVUtils_collectionManager_;
}

+ (void)setCollectionManager:(CCPBVCollectionManager *)collectionManager {
  CCPBVUtils_collectionManager_ = collectionManager;
}

+ (RAREUTJSONObject *)attachmentHandlers {
  return CCPBVUtils_attachmentHandlers_;
}

+ (void)setAttachmentHandlers:(RAREUTJSONObject *)attachmentHandlers {
  CCPBVUtils_attachmentHandlers_ = attachmentHandlers;
}

+ (BOOL)wasClosing {
  return CCPBVUtils_wasClosing_;
}

+ (BOOL *)wasClosingRef {
  return &CCPBVUtils_wasClosing_;
}

+ (CCPBVUtils_ApplicationLock *)applicationLock {
  return CCPBVUtils_applicationLock_;
}

+ (void)setApplicationLock:(CCPBVUtils_ApplicationLock *)applicationLock {
  CCPBVUtils_applicationLock_ = applicationLock;
}

+ (CCPBVaCommunicationHandler *)commHandler {
  return CCPBVUtils_commHandler_;
}

+ (void)setCommHandler:(CCPBVaCommunicationHandler *)commHandler {
  CCPBVUtils_commHandler_ = commHandler;
}

+ (CCPBVSettings *)settingsHandler {
  return CCPBVUtils_settingsHandler_;
}

+ (void)setSettingsHandler:(CCPBVSettings *)settingsHandler {
  CCPBVUtils_settingsHandler_ = settingsHandler;
}

+ (JavaUtilArrayList *)stack {
  return CCPBVUtils_stack_;
}

+ (void)setStack:(JavaUtilArrayList *)stack {
  CCPBVUtils_stack_ = stack;
}

+ (CCPBVUtils_BackIcon *)actionbarIcon {
  return CCPBVUtils_actionbarIcon_;
}

+ (void)setActionbarIcon:(CCPBVUtils_BackIcon *)actionbarIcon {
  CCPBVUtils_actionbarIcon_ = actionbarIcon;
}

+ (id<JavaUtilMap>)dialogOptions {
  return CCPBVUtils_dialogOptions_;
}

+ (void)setDialogOptions:(id<JavaUtilMap>)dialogOptions {
  CCPBVUtils_dialogOptions_ = dialogOptions;
}

+ (RARESPOTViewer *)reloginConfig {
  return CCPBVUtils_reloginConfig_;
}

+ (void)setReloginConfig:(RARESPOTViewer *)reloginConfig {
  CCPBVUtils_reloginConfig_ = reloginConfig;
}

+ (RARESPOTGridPane *)genericContainerCfg {
  return CCPBVUtils_genericContainerCfg_;
}

+ (void)setGenericContainerCfg:(RARESPOTGridPane *)genericContainerCfg {
  CCPBVUtils_genericContainerCfg_ = genericContainerCfg;
}

+ (BOOL)ignorePausing {
  return CCPBVUtils_ignorePausing_;
}

+ (BOOL *)ignorePausingRef {
  return &CCPBVUtils_ignorePausing_;
}

+ (BOOL)shuttingDown {
  return CCPBVUtils_shuttingDown_;
}

+ (BOOL *)shuttingDownRef {
  return &CCPBVUtils_shuttingDown_;
}

+ (BOOL)fullscreenMode {
  return CCPBVUtils_fullscreenMode_;
}

+ (BOOL *)fullscreenModeRef {
  return &CCPBVUtils_fullscreenMode_;
}

+ (BOOL)cardStack {
  return CCPBVUtils_cardStack_;
}

+ (BOOL *)cardStackRef {
  return &CCPBVUtils_cardStack_;
}

+ (RAREUIFont *)boldFont {
  return CCPBVUtils_boldFont_;
}

+ (void)setBoldFont:(RAREUIFont *)boldFont {
  CCPBVUtils_boldFont_ = boldFont;
}

+ (RARETransitionAnimator *)popAnimation {
  return CCPBVUtils_popAnimation_;
}

+ (void)setPopAnimation:(RARETransitionAnimator *)popAnimation {
  CCPBVUtils_popAnimation_ = popAnimation;
}

+ (id<RAREiContainer>)titleWidget {
  return CCPBVUtils_titleWidget_;
}

+ (void)setTitleWidget:(id<RAREiContainer>)titleWidget {
  CCPBVUtils_titleWidget_ = titleWidget;
}

+ (id<JavaLangCharSequence>)actionBarTitle {
  return CCPBVUtils_actionBarTitle_;
}

+ (void)setActionBarTitle:(id<JavaLangCharSequence>)actionBarTitle {
  CCPBVUtils_actionBarTitle_ = actionBarTitle;
}

+ (BOOL)googleGlass {
  return CCPBVUtils_googleGlass_;
}

+ (BOOL *)googleGlassRef {
  return &CCPBVUtils_googleGlass_;
}

+ (BOOL)reverseFling {
  return CCPBVUtils_reverseFling_;
}

+ (BOOL *)reverseFlingRef {
  return &CCPBVUtils_reverseFling_;
}

+ (JavaUtilHashMap *)protocolHandlers {
  return CCPBVUtils_protocolHandlers_;
}

+ (void)setProtocolHandlers:(JavaUtilHashMap *)protocolHandlers {
  CCPBVUtils_protocolHandlers_ = protocolHandlers;
}

+ (CCPBVUtils_DefaultProtocolHandler *)defaultProtocolHandler {
  return CCPBVUtils_defaultProtocolHandler_;
}

+ (void)setDefaultProtocolHandler:(CCPBVUtils_DefaultProtocolHandler *)defaultProtocolHandler {
  CCPBVUtils_defaultProtocolHandler_ = defaultProtocolHandler;
}

+ (BOOL)locking {
  return CCPBVUtils_locking_;
}

+ (BOOL *)lockingRef {
  return &CCPBVUtils_locking_;
}

+ (NSString *)styleSheet {
  return CCPBVUtils_styleSheet_;
}

+ (void)setStyleSheet:(NSString *)styleSheet {
  CCPBVUtils_styleSheet_ = styleSheet;
}

+ (CCPBVSettings_Server *)dataServer {
  return CCPBVUtils_dataServer_;
}

+ (void)setDataServer:(CCPBVSettings_Server *)dataServer {
  CCPBVUtils_dataServer_ = dataServer;
}

+ (CCPBVaProtocolHandler *)protocolHandler {
  return CCPBVUtils_protocolHandler_;
}

+ (void)setProtocolHandler:(CCPBVaProtocolHandler *)protocolHandler {
  CCPBVUtils_protocolHandler_ = protocolHandler;
}

+ (NSString *)serverHost {
  return CCPBVUtils_serverHost_;
}

+ (void)setServerHost:(NSString *)serverHost {
  CCPBVUtils_serverHost_ = serverHost;
}

+ (JavaUtilHashSet *)imageAttachmentTypes {
  return CCPBVUtils_imageAttachmentTypes_;
}

+ (void)setImageAttachmentTypes:(JavaUtilHashSet *)imageAttachmentTypes {
  CCPBVUtils_imageAttachmentTypes_ = imageAttachmentTypes;
}

- (id)init {
  return [super init];
}

+ (void)addActionPathSupporterWithCCPBVActionPath_iActionPathSupporter:(id<CCPBVActionPath_iActionPathSupporter>)supporter {
  [((RAREUTIdentityArrayList *) nil_chk(CCPBVUtils_actionPathSupporters_)) removeWithId:supporter];
  [CCPBVUtils_actionPathSupporters_ addWithId:supporter];
}

+ (void)alertWithId:(id)message {
  [CCPBVUtils alertWithId:message withBoolean:NO];
}

+ (void)alertWithId:(id)message
        withBoolean:(BOOL)exit {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if (CCPBVUtils_cardStack_) {
    RAREWidgetPaneViewer *v = [CCPBVCardStackUtils createTextCardWithRAREiContainer:w withNSString:[nil_chk(message) description] withId:[[CCPBVUtils_$1 alloc] init]];
    if (exit) {
      [((RAREWidgetPaneViewer *) nil_chk(v)) setEventHandlerWithNSString:[RAREiConstants EVENT_DISPOSE] withId:@"class:Actions#onExit" withBoolean:YES];
    }
    [CCPBVUtils pushWorkspaceViewerWithRAREiViewer:v];
  }
  else {
    id<RAREiFunctionCallback> cb = nil;
    if (exit) {
      cb = [[CCPBVUtils_$2 alloc] init];
    }
    [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) alertWithId:message withRAREiFunctionCallback:cb];
  }
}

+ (void)applicationInitialized {
  CCPBVUtils_cardStack_ = [RAREUIScreen isSmallScreen];
  if (CCPBVUtils_protocolHandlers_ == nil) {
    RAREUTJSONObject *ph = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"protocolHandlers"], [RAREUTJSONObject class]);
    if ((ph != nil) && ![ph isEmpty]) {
      id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk([ph getObjectMap])) entrySet])) iterator];
      CCPBVUtils_protocolHandlers_ = [[JavaUtilHashMap alloc] initWithInt:2];
      while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
        id<JavaUtilMap_Entry> e = [it next];
        NSString *prototol = (NSString *) check_class_cast([((id<JavaUtilMap_Entry>) nil_chk(e)) getKey], [NSString class]);
        NSString *cls = (NSString *) check_class_cast([e getValue], [NSString class]);
        CCPBVaProtocolHandler *h = (CCPBVaProtocolHandler *) check_class_cast([RAREPlatform createObjectWithNSString:cls], [CCPBVaProtocolHandler class]);
        if (ph == nil) {
          [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"unable to create protocol handler:%@", cls]];
        }
        else {
          (void) [CCPBVUtils_protocolHandlers_ putWithId:prototol withId:h];
          (void) [CCPBVUtils_protocolHandlers_ putWithId:[NSString stringWithFormat:@"%@s", prototol] withId:h];
        }
      }
      if ([CCPBVUtils_protocolHandlers_ isEmpty]) {
        CCPBVUtils_protocolHandlers_ = nil;
      }
      else {
        CCPBVUtils_defaultProtocolHandler_ = [[CCPBVUtils_DefaultProtocolHandler alloc] init];
        [JavaNetURL setURLStreamHandlerFactoryWithJavaNetURLStreamHandlerFactory:[[CCPBVStreamHandlerFactory alloc] init]];
      }
    }
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  CCPBVUtils_actionbarIcon_ = [[CCPBVUtils_BackIcon alloc] initWithRAREiPlatformIcon:[((id<RAREiActionComponent>) nil_chk([((RAREActionBar *) nil_chk(ab)) getTitleComponent])) getIcon]];
  [ab setTitleIconWithRAREiPlatformIcon:CCPBVUtils_actionbarIcon_];
  [ab setTitleActionWithRAREiActionListener:[w getActionWithNSString:@"bv.action.back"]];
}

+ (void)applicationPaused {
  if (!CCPBVUtils_ignorePausing_ && [CCPBVUtils getUserID] != nil) {
    [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) closePopupWindowsWithBoolean:YES];
    if (([CCPBVUtils getUserID] != nil)) {
      [CCPBVUtils lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:[CCPBVUtils_ApplicationLockTypeEnum PAUSED] withBoolean:NO];
    }
  }
}

+ (void)applicationResumed {
  CCPBVUtils_ignorePausing_ = NO;
  if ((CCPBVUtils_applicationLock_ == nil) || (CCPBVUtils_applicationLock_->viewer_ == nil)) {
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiFunctionCallback> cb = [[CCPBVUtils_$3 alloc] initWithRAREWindowViewer:w];
  @try {
    RAREActionLink *l = [((RAREWindowViewer *) nil_chk(w)) createActionLinkWithId:@"/hub/main/account/status"];
    (void) [w getContentAsJSONWithId:l withRAREiFunctionCallback:cb];
    [w showProgressPopupWithJavaLangCharSequence:[w getStringWithNSString:@"bv.text.authenticating"]];
  }
  @catch (JavaLangException *e) {
    [((CCPBVUtils_ApplicationLock *) nil_chk(CCPBVUtils_applicationLock_)) disposeViewer];
  }
}

+ (int)calculateAgeWithId:(id)date {
  JavaUtilCalendar *cal;
  if ([date isKindOfClass:[JavaUtilDate class]]) {
    cal = [JavaUtilCalendar getInstance];
    [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:(JavaUtilDate *) check_class_cast(date, [JavaUtilDate class])];
  }
  else {
    cal = (JavaUtilCalendar *) check_class_cast(date, [JavaUtilCalendar class]);
  }
  JavaUtilCalendar *now = [JavaUtilCalendar getInstance];
  int age = [((JavaUtilCalendar *) nil_chk(now)) getWithInt:JavaUtilCalendar_YEAR] - [((JavaUtilCalendar *) nil_chk(cal)) getWithInt:JavaUtilCalendar_YEAR];
  if (([cal getWithInt:JavaUtilCalendar_MONTH] > [now getWithInt:JavaUtilCalendar_MONTH]) || (([cal getWithInt:JavaUtilCalendar_MONTH] == [now getWithInt:JavaUtilCalendar_MONTH]) && ([cal getWithInt:JavaUtilCalendar_DAY_OF_MONTH] > [now getWithInt:JavaUtilCalendar_DAY_OF_MONTH]))) {
    age--;
  }
  return age;
}

+ (BOOL)canReselectPatient {
  return (CCPBVUtils_loginManager_ != nil) && [CCPBVUtils_loginManager_ canReselectPatient];
}

+ (id<JavaUtilList>)categorizeWithJavaUtilList:(id<JavaUtilList>)rows
                                       withInt:(int)column
                    withRARERenderableDataItem:(RARERenderableDataItem *)missingCategoryItem
                                   withBoolean:(BOOL)sortOnLinkedData {
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  if ((len == 1) && ![((RARERenderableDataItem *) nil_chk([rows getWithInt:0])) isEnabled]) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([rows getWithInt:i])) getItemExWithInt:column];
    if (item != nil) {
      NSString *s = [((NSString *) nil_chk([item description])) trim];
      if ((s == nil) || ([s sequenceLength] == 0)) {
        s = [((RARERenderableDataItem *) nil_chk(missingCategoryItem)) description];
        item = missingCategoryItem;
      }
      (void) [map putWithId:s withId:item];
    }
  }
  JavaUtilArrayList *list = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[map values]];
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setUseLinkedDataWithBoolean:sortOnLinkedData];
  [JavaUtilCollections sortWithJavaUtilList:list withJavaUtilComparator:c];
  return list;
}

+ (id<JavaUtilList>)categorizeWithRARETableViewer:(RARETableViewer *)table
                                          withInt:(int)column
                       withRARERenderableDataItem:(RARERenderableDataItem *)missingCategoryItem
                                      withBoolean:(BOOL)sortOnLinkedData {
  int len = [((RARETableViewer *) nil_chk(table)) size];
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  if ((len == 1) && ![((RARERenderableDataItem *) nil_chk([table getWithInt:0])) isEnabled]) {
    return [JavaUtilCollections EMPTY_LIST];
  }
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([table getWithInt:i])) getItemExWithInt:column];
    if (item != nil) {
      NSString *s = [((NSString *) nil_chk([item description])) trim];
      if ((s == nil) || ([s sequenceLength] == 0)) {
        s = [((RARERenderableDataItem *) nil_chk(missingCategoryItem)) description];
        item = missingCategoryItem;
      }
      (void) [map putWithId:s withId:item];
    }
  }
  JavaUtilArrayList *list = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[map values]];
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setUseLinkedDataWithBoolean:sortOnLinkedData];
  [JavaUtilCollections sortWithJavaUtilList:list withJavaUtilComparator:c];
  return list;
}

+ (void)checkRowsAndOptimizeDatesWithJavaUtilList:(id<JavaUtilList>)rows
                                          withInt:(int)dateCol
                                          withInt:(int)dateType
                           withCCPBViValueChecker:(id<CCPBViValueChecker>)checker {
  @try {
    int len = [((id<JavaUtilList>) nil_chk(rows)) size];
    NSString *lastValue = nil;
    JavaUtilDate *lastDate = nil;
    for (int i = 0; i < len; i++) {
      RARERenderableDataItem *row = [rows getWithInt:i];
      RARERenderableDataItem *ditem = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:dateCol];
      id value = [((RARERenderableDataItem *) nil_chk(ditem)) getValueEx];
      [ditem setTypeWithInt:dateType];
      if ((lastValue != nil) && [lastValue isEqual:value]) {
        [ditem setValueWithId:lastDate];
      }
      else {
        lastValue = [ditem description];
        lastDate = (JavaUtilDate *) check_class_cast([ditem getValue], [JavaUtilDate class]);
      }
      if (checker != nil) {
        [checker checkRowWithRARERenderableDataItem:row withInt:i withInt:0 withInt:len];
      }
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
}

+ (void)checkRowsInReverseAndOptimizeDatesWithJavaUtilList:(id<JavaUtilList>)rows
                                                   withInt:(int)dateCol
                                                   withInt:(int)dateType
                                    withCCPBViValueChecker:(id<CCPBViValueChecker>)checker {
  @try {
    int len = [((id<JavaUtilList>) nil_chk(rows)) size];
    NSString *lastValue = nil;
    JavaUtilDate *lastDate = nil;
    for (int i = len - 1; i > -1; i--) {
      RARERenderableDataItem *row = [rows getWithInt:i];
      RARERenderableDataItem *ditem = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:dateCol];
      id value = [((RARERenderableDataItem *) nil_chk(ditem)) getValueEx];
      [ditem setTypeWithInt:dateType];
      if ((lastValue != nil) && [lastValue isEqual:value]) {
        [ditem setValueWithId:lastDate];
      }
      else {
        lastValue = [ditem description];
        lastDate = (JavaUtilDate *) check_class_cast([ditem getValue], [JavaUtilDate class]);
      }
      if (checker != nil) {
        if (![checker checkRowWithRARERenderableDataItem:row withInt:i withInt:0 withInt:len]) {
          (void) [rows removeWithInt:i];
        }
      }
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
}

+ (BOOL)clearViewerStack {
  int vsize = [CCPBVUtils getViewerStackSize];
  while (vsize > 0) {
    if (![CCPBVUtils popViewerStack]) {
      return NO;
    }
    vsize = [CCPBVUtils getViewerStackSize];
  }
  return YES;
}

+ (BOOL)continuePollingForUpdates {
  if ([CCPBVUtils isApplicationLocked] || ([CCPBVUtils getPatient] == nil)) {
    return NO;
  }
  return YES;
}

+ (RARERenderableDataItem *)createDisabledTableRowWithNSString:(NSString *)resource
                                                       withInt:(int)resourceColumn {
  RARERenderableDataItem *row = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createRowWithInt:3 withBoolean:YES];
  [((RARERenderableDataItem *) nil_chk(row)) setEnabledWithBoolean:NO];
  RARERenderableDataItem *item = [row getWithInt:1];
  [((RARERenderableDataItem *) nil_chk(item)) setValueWithId:[RAREPlatform getResourceAsStringWithNSString:resource]];
  [item setEnabledWithBoolean:NO];
  return row;
}

+ (RAREGridPaneViewer *)createGenericContainerViewerWithRAREiContainer:(id<RAREiContainer>)parent {
  return (RAREGridPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createViewerWithRAREiWidget:parent withRARESPOTWidget:CCPBVUtils_genericContainerCfg_], [RAREGridPaneViewer class]);
}

+ (RAREActionLink *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                                 withNSString:(NSString *)url {
  if (context == nil) {
    context = [RAREPlatform getWindowViewer];
  }
  @try {
    return [CCPBVUtils createLinkWithRAREiWidget:context withJavaNetURL:[((id<RAREiWidget>) nil_chk(context)) getURLWithNSString:url]];
  }
  @catch (JavaNetMalformedURLException *e) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:e];
    return nil;
  }
}

+ (RAREActionLink *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                                 withNSString:(NSString *)url
                                  withBoolean:(BOOL)rowInfo {
  if (context == nil) {
    context = [RAREPlatform getWindowViewer];
  }
  @try {
    return [CCPBVUtils createLinkWithRAREiWidget:context withJavaNetURL:[((id<RAREiWidget>) nil_chk(context)) getURLWithNSString:url] withBoolean:rowInfo];
  }
  @catch (JavaNetMalformedURLException *e) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:e];
    return nil;
  }
}

+ (RAREActionLink *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                               withJavaNetURL:(JavaNetURL *)url {
  if (CCPBVUtils_protocolHandlers_ != nil) {
    return [((CCPBVaProtocolHandler *) nil_chk([CCPBVUtils getProtocolHelperWithJavaNetURL:url])) createLinkWithRAREiWidget:context withJavaNetURL:url];
  }
  return [[RAREActionLink alloc] initWithRAREUTiURLResolver:context withJavaNetURL:url];
}

+ (RAREActionLink *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                               withJavaNetURL:(JavaNetURL *)url
                                  withBoolean:(BOOL)rowInfo {
  if (context == nil) {
    context = [RAREPlatform getWindowViewer];
  }
  RAREActionLink *link = [CCPBVUtils createLinkWithRAREiWidget:context withJavaNetURL:url];
  link = [[RAREActionLink alloc] initWithRAREUTiURLResolver:context withJavaNetURL:url];
  [link setColumnSeparatorWithChar:CCPBVUtils_colSeparator_];
  [link setLinkedDataSeparatorWithChar:CCPBVUtils_ldSeparator_];
  if (rowInfo) {
    [link setRowInfoSeparatorWithChar:CCPBVUtils_riSeparator_];
  }
  return link;
}

+ (RAREActionLink *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                               withJavaNetURL:(JavaNetURL *)url
                                 withNSString:(NSString *)type {
  if (CCPBVUtils_protocolHandlers_ != nil) {
    return [((CCPBVaProtocolHandler *) nil_chk([CCPBVUtils getProtocolHelperWithJavaNetURL:url])) createLinkWithRAREiWidget:context withJavaNetURL:url withNSString:type];
  }
  return [[RAREActionLink alloc] initWithRAREUTiURLResolver:context withJavaNetURL:url withNSString:type];
}

+ (RAREActionLink *)createPhotosActionLinkWithNSString:(NSString *)id_
                                           withBoolean:(BOOL)thumbnail {
  if (([((NSString *) nil_chk(id_)) indexOf:':'] != -1) || ([id_ indexOf:'/'] != -1)) {
    return [[RAREActionLink alloc] initWithNSString:id_];
  }
  RAREUTJSONObject *ps = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patientSelectInfo"], [RAREUTJSONObject class]);
  NSString *s = [((RAREUTJSONObject *) nil_chk(ps)) optStringWithNSString:thumbnail ? @"photosThumbnailsURL" : @"photosURL" withNSString:nil];
  if ((s == nil) || ([s sequenceLength] == 0)) {
    return nil;
  }
  return [[RAREActionLink alloc] initWithNSString:[RAREFunctions formatWithNSString:s withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ id_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
}

+ (JavaNetURLStreamHandler *)createURLStreamHandlerWithNSString:(NSString *)protocol {
  CCPBVaProtocolHandler *ph = (CCPBVUtils_protocolHandlers_ == nil) ? nil : [CCPBVUtils_protocolHandlers_ getWithId:protocol];
  return (ph == nil) ? nil : [ph createURLStreamHandlerWithNSString:protocol];
}

+ (void)exit {
  if (CCPBVUtils_wasClosing_) {
    return;
  }
  if (CCPBVUtils_cardStack_ || ([CCPBVUtils getUserID] == nil)) {
    [CCPBVUtils exitEx];
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if (CCPBVUtils_applicationLock_ != nil) {
    int oc = [CCPBVOrderManager getPendingOrderCount];
    if (oc != 0) {
      id<RAREiFunctionCallback> cb = [[CCPBVUtils_$4 alloc] initWithRAREWindowViewer:w];
      NSString *s = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.oe.text.has_pending_orders_while_locked" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [JavaLangInteger valueOfWithInt:oc] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      [w yesNoWithNSString:nil withId:s withRAREiFunctionCallback:cb];
      return;
    }
    [CCPBVUtils exitEx];
    return;
  }
  [((RAREWindowViewer *) nil_chk(w)) setCanCloseWithBoolean:NO];
  if (![CCPBVOrderManager canChangePatientOrExitWithBoolean:YES withCCPBVActionPath:nil]) {
    return;
  }
  id<RAREiFunctionCallback> cb = [[CCPBVUtils_$5 alloc] init];
  [w yesNoWithId:[((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getStringWithNSString:@"bv.text.exit_application"] withRAREiFunctionCallback:cb];
}

+ (void)exitEx {
  if (!CCPBVUtils_shuttingDown_ && ![RAREPlatform isShuttingDown]) {
    CCPBVUtils_shuttingDown_ = YES;
    if (CCPBVUtils_loginManager_ != nil) {
      [CCPBVUtils_loginManager_ logout];
    }
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    if ((w != nil) && ![w isDisposed]) {
      [w setCanCloseWithBoolean:YES];
    }
    CCPBVUtils_wasClosing_ = YES;
    [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) exit];
  }
}

+ (NSString *)expandTemplateWithNSString:(NSString *)template_
                         withJavaUtilMap:(id<JavaUtilMap>)data {
  int n = [((NSString *) nil_chk(template_)) indexOf:'{'];
  if (n == -1) {
    return template_;
  }
  IOSCharArray *a = [template_ toCharArray];
  int len = (int) [((IOSCharArray *) nil_chk(a)) count];
  RAREUTCharScanner *sc = [[RAREUTCharScanner alloc] init];
  JavaIoStringWriter *writer = [[JavaIoStringWriter alloc] initWithInt:[template_ sequenceLength]];
  [sc resetWithCharArray:a withInt:0 withInt:len withBoolean:NO];
  NSString *s;
  id o;
  int p = 0;
  do {
    n = n - p;
    [writer writeWithCharArray:a withInt:p withInt:n];
    [sc consumeWithInt:n + 1];
    p = [sc getPosition];
    n = [sc indexOfWithChar:'}' withBoolean:YES withBoolean:YES];
    if (n == -1) {
      break;
    }
    n = n - p;
    s = [sc getStringWithInt:p withInt:n];
    o = [((id<JavaUtilMap>) nil_chk(data)) getWithId:s];
    [sc resetWithCharArray:a withInt:0 withInt:len withBoolean:NO];
    [sc consumeWithInt:p];
    if (o != nil) {
      s = [o description];
      [writer writeWithNSString:s];
    }
    [sc consumeWithInt:n + 1];
    p = [sc getPosition];
    n = [sc indexOfWithChar:'{' withBoolean:NO withBoolean:NO];
  }
  while (n != -1);
  n = [sc getLength];
  if (n > 0) {
    [writer writeWithCharArray:a withInt:[sc getRelPosition] withInt:n];
  }
  return [writer description];
}

+ (void)filetToOnlyShowPageWithJavaUtilList:(id<JavaUtilList>)rows
                                    withInt:(int)pageStart
                                    withInt:(int)pageSize
                                    withInt:(int)totalCount {
  int end = [JavaLangMath minWithInt:pageStart + pageSize withInt:totalCount];
  for (int i = 0; i < end; i++) {
    RARERenderableDataItem *row = [((id<JavaUtilList>) nil_chk(rows)) getWithInt:i];
    id<RAREUTiFilterableList> items = [((RARERenderableDataItem *) nil_chk(row)) getItems];
    [((id<RAREUTiFilterableList>) nil_chk(items)) unfilter];
    for (int n = pageStart; n < end; n++) {
      [items addIndexToFilteredListWithInt:n];
    }
  }
}

+ (id<JavaUtilList>)fixCategorizedRowsWithJavaUtilList:(id<JavaUtilList>)rows
                                        withRAREUIFont:(RAREUIFont *)font
                                           withBoolean:(BOOL)appendCounts
                                           withBoolean:(BOOL)returnCategories {
  RARERenderableDataItem *item;
  RARERenderableDataItem *nitem;
  RARERenderableDataItem *row;
  JavaUtilArrayList *categories = nil;
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  if (returnCategories) {
    categories = [[JavaUtilArrayList alloc] initWithInt:len];
  }
  for (int i = 0; i < len; i++) {
    row = [rows getWithInt:i];
    item = [((RARERenderableDataItem *) nil_chk(row)) getItemWithInt:0];
    NSString *s = (appendCounts || returnCategories) ? [((RARERenderableDataItem *) nil_chk(item)) description] : nil;
    nitem = [[RARERenderableDataItem alloc] initWithId:[((RARERenderableDataItem *) nil_chk(item)) getValue] withInt:[item getType]];
    if (returnCategories) {
      [((JavaUtilArrayList *) nil_chk(categories)) addWithId:s];
    }
    if (appendCounts) {
      s = [NSString stringWithFormat:@"%@%@", s, [NSString stringWithFormat:@" (%d)", [item size]]];
      [nitem setTypeWithInt:RARERenderableDataItem_TYPE_STRING];
      [nitem setValueWithId:s];
    }
    [nitem setForegroundWithRAREUIColor:[item getForeground]];
    [nitem setFontWithRAREUIFont:font];
    [nitem setColumnSpanWithInt:-1];
    [row addWithId:nitem];
    [item setColumnSpanWithInt:1];
  }
  return categories;
}

+ (CCPBVaCommunicationHandler *)getaCommunicationHandler {
  return CCPBVUtils_commHandler_;
}

+ (CCPBVActionPath *)getActionPathWithBoolean:(BOOL)remove {
  CCPBVActionPath *p = CCPBVUtils_actionPath_;
  if (remove) {
    CCPBVUtils_actionPath_ = nil;
  }
  return p;
}

+ (CCPBVaAttachmentHandler *)getAttachmentHandlerWithNSString:(NSString *)type {
  type = [((NSString *) nil_chk(type)) lowercaseStringWithJRELocale:[JavaUtilLocale US]];
  NSString *s = type;
  if (CCPBVUtils_attachmentHandlers_ == nil) {
    CCPBVUtils_attachmentHandlers_ = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"attachmentHandlers"], [RAREUTJSONObject class]);
    if (CCPBVUtils_attachmentHandlers_ == nil) {
      CCPBVUtils_attachmentHandlers_ = [[RAREUTJSONObject alloc] init];
    }
  }
  s = [((RAREUTJSONObject *) nil_chk(CCPBVUtils_attachmentHandlers_)) optStringWithNSString:s];
  if ((s == nil) || ([s sequenceLength] == 0) || [s isEqual:@"default"]) {
    if (CCPBVUtils_imageAttachmentTypes_ == nil) {
      CCPBVUtils_imageAttachmentTypes_ = [[JavaUtilHashSet alloc] init];
      [CCPBVUtils_imageAttachmentTypes_ addWithId:@"image"];
      [CCPBVUtils_imageAttachmentTypes_ addWithId:@"image_slides"];
      [CCPBVUtils_imageAttachmentTypes_ addWithId:@"image/png"];
      [CCPBVUtils_imageAttachmentTypes_ addWithId:@"image/jpg"];
      [CCPBVUtils_imageAttachmentTypes_ addWithId:@"image/gif"];
    }
    if ([((JavaUtilHashSet *) nil_chk(CCPBVUtils_imageAttachmentTypes_)) containsWithId:type]) {
      return [[CCPBVDefaultImageViewer alloc] init];
    }
  }
  if ([((NSString *) nil_chk(s)) indexOf:'.'] == 0) {
    NSString *pn = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.class.defaultPackage"];
    if (pn != nil) {
      s = [NSString stringWithFormat:@"%@.%@", pn, s];
    }
    else {
      s = [NSString stringWithFormat:@"%@.%@", [((JavaLangPackage *) nil_chk([[IOSClass classWithClass:[CCPBVUtils class]] getPackage])) getName], s];
    }
  }
  return (CCPBVaAttachmentHandler *) check_class_cast([RAREPlatform createObjectWithNSString:s], [CCPBVaAttachmentHandler class]);
}

+ (RAREUTJSONObject *)getContentAsJSONWithNSString:(NSString *)url
                                   withJavaUtilMap:(id<JavaUtilMap>)data
                                       withBoolean:(BOOL)sendAsJSON {
  if ([RAREPlatform isUIThread]) {
    @throw [[RAREApplicationException alloc] initWithNSString:@"This method must only be called from a background thread"];
  }
  RAREActionLink *l = [[RAREActionLink alloc] initWithNSString:url];
  if ((data != nil) && sendAsJSON) {
    [l setRequestEncodingWithRAREActionLink_RequestEncodingEnum:[RAREActionLink_RequestEncodingEnum JSON]];
  }
  NSString *s = (data == nil) ? [l getContentAsString] : [l sendFormDataWithRAREUTiURLResolver:[RAREPlatform getWindowViewer] withJavaUtilMap:data];
  return [[RAREUTJSONObject alloc] initWithNSString:s];
}

+ (CCPBVSettings_Server *)getDefaultServer {
  return [((CCPBVSettings *) nil_chk(CCPBVUtils_settingsHandler_)) getDefaultServer];
}

+ (CCPBVActionPath *)getDisplayedActionPath {
  int len = [((RAREUTIdentityArrayList *) nil_chk(CCPBVUtils_actionPathSupporters_)) size];
  if (len == 0) {
    NSString *patient = [CCPBVUtils getPatientID];
    RARETabPaneViewer *tp = (patient == nil) ? nil : (RARETabPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"applicationTabs"], [RARETabPaneViewer class]);
    if (tp != nil) {
      return [[CCPBVActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ patient, [tp getSelectedTabName] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
    }
    return nil;
  }
  return [((id<CCPBVActionPath_iActionPathSupporter>) nil_chk([CCPBVUtils_actionPathSupporters_ getWithInt:len - 1])) getDisplayedActionPath];
}

+ (RAREUIFont *)getListWidgetBoldFontWithRAREiWidget:(id<RAREiWidget>)widget {
  if (CCPBVUtils_boldFont_ == nil) {
    RAREUIFont *f = [((id<RAREiWidget>) nil_chk(widget)) getFont];
    if (f == nil) {
      f = [RAREFontUtils getDefaultFont];
    }
    CCPBVUtils_boldFont_ = [((RAREUIFont *) nil_chk([widget getFont])) deriveBold];
  }
  return CCPBVUtils_boldFont_;
}

+ (RAREUTJSONObject *)getPatient {
  return (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patient"], [RAREUTJSONObject class]);
}

+ (NSString *)getPatientID {
  RAREUTJSONObject *o = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"patient"], [RAREUTJSONObject class]);
  return (o == nil) ? nil : [o optStringWithNSString:@"id" withNSString:nil];
}

+ (CCPBVSettings_AppPreferences *)getPreferences {
  return CCPBVUtils_preferences_;
}

+ (CCPBVaProtocolHandler *)getProtocolHandlerWithNSString:(NSString *)protocol {
  return [((JavaUtilHashMap *) nil_chk(CCPBVUtils_protocolHandlers_)) getWithId:protocol];
}

+ (RARESplitPaneViewer *)getSplitPaneViewerWithRAREiWidget:(id<RAREiWidget>)widget {
  if ([(id) widget isKindOfClass:[RARESplitPaneViewer class]]) {
    return (RARESplitPaneViewer *) check_class_cast(widget, [RARESplitPaneViewer class]);
  }
  id<RAREiContainer> p = [((id<RAREiWidget>) nil_chk(widget)) getParent];
  while (p != nil) {
    if (([(id) p isKindOfClass:[RARESplitPaneViewer class]]) && ([(id) [((id<RAREiContainer>) nil_chk(p)) getParent] isKindOfClass:[RARETabPaneViewer class]])) {
      return (RARESplitPaneViewer *) check_class_cast(p, [RARESplitPaneViewer class]);
    }
    p = (RAREaContainer *) check_class_cast([((id<RAREiContainer>) nil_chk(p)) getParent], [RAREaContainer class]);
  }
  return nil;
}

+ (RAREStackPaneViewer *)getStackPaneViewerWithRAREiWidget:(id<RAREiWidget>)widget {
  if ([(id) widget isKindOfClass:[RAREStackPaneViewer class]]) {
    return (RAREStackPaneViewer *) check_class_cast(widget, [RAREStackPaneViewer class]);
  }
  id<RAREiContainer> p = [((id<RAREiWidget>) nil_chk(widget)) getParent];
  while (p != nil) {
    if ([(id) p isKindOfClass:[RAREStackPaneViewer class]]) {
      return (RAREStackPaneViewer *) check_class_cast(p, [RAREStackPaneViewer class]);
    }
    p = [((id<RAREiContainer>) nil_chk(p)) getParent];
  }
  return nil;
}

+ (JavaUtilHashMap *)getStatusIcons {
  if (CCPBVUtils_statusIcons_ == nil) {
    CCPBVUtils_statusIcons_ = [[JavaUtilHashMap alloc] initWithInt:4];
    (void) [CCPBVUtils_statusIcons_ putWithId:[CCPBVaCommunicationHandler_StatusEnum OFFLINE] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_offline"]];
    (void) [CCPBVUtils_statusIcons_ putWithId:[CCPBVaCommunicationHandler_StatusEnum ONLINE] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_online"]];
    (void) [CCPBVUtils_statusIcons_ putWithId:[CCPBVaCommunicationHandler_StatusEnum AWAY] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_away"]];
    (void) [CCPBVUtils_statusIcons_ putWithId:[CCPBVaCommunicationHandler_StatusEnum BUSY] withId:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.status_busy"]];
  }
  return CCPBVUtils_statusIcons_;
}

+ (NSString *)getStyleSheet {
  return CCPBVUtils_styleSheet_;
}

+ (RAREUTJSONObject *)getUser {
  return (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"user"], [RAREUTJSONObject class]);
}

+ (NSString *)getUserDisplayName {
  RAREUTJSONObject *map = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"user"], [RAREUTJSONObject class]);
  return [((RAREUTJSONObject *) nil_chk(map)) getStringWithNSString:@"name"];
}

+ (NSString *)getUserID {
  return (NSString *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"username"], [NSString class]);
}

+ (int)getViewerStackSize {
  return [((JavaUtilArrayList *) nil_chk(CCPBVUtils_stack_)) size];
}

+ (id<RAREiViewer>)getCurrentViewerOnStack {
  return [((JavaUtilArrayList *) nil_chk(CCPBVUtils_stack_)) isEmpty] ? nil : ((CCPBVUtils_StackEntry *) nil_chk([CCPBVUtils_stack_ getWithInt:[CCPBVUtils_stack_ size] - 1]))->viewer_;
}

+ (id<JavaUtilList>)groupByDateWithRARETableViewer:(RARETableViewer *)widget
                                  withJavaUtilList:(id<JavaUtilList>)rows {
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  for (int i = 0; i < len; i++) {
    [((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk([rows getWithInt:i])) getWithInt:0])) setTypeWithInt:RARERenderableDataItem_TYPE_DATETIME];
  }
  RAREGrouper *g = [[RAREGrouper alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0 } count:1] withNSStringArray:nil withBoolean:YES withBoolean:YES];
  [g setFormatForTableWithBoolean:YES];
  [g setSortOrderWithInt:-1];
  rows = [g groupWithRAREiWidget:widget withJavaUtilList:rows];
  RAREUIFont *f = [CCPBVUtils getListWidgetBoldFontWithRAREiWidget:widget];
  (void) [CCPBVUtils fixCategorizedRowsWithJavaUtilList:rows withRAREUIFont:f withBoolean:NO withBoolean:NO];
  return rows;
}

+ (id<JavaUtilList>)groupRowsWithRARETableViewer:(RARETableViewer *)widget
                                withJavaUtilList:(id<JavaUtilList>)rows
                                         withInt:(int)column
                                         withInt:(int)sortOrder
                                     withBoolean:(BOOL)appendCounts {
  RAREGrouper *g = [[RAREGrouper alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ column } count:1] withNSStringArray:nil withBoolean:YES withBoolean:YES];
  [g setFormatForTableWithBoolean:YES];
  [g setSortOrderWithInt:sortOrder];
  rows = [g groupWithRAREiWidget:widget withJavaUtilList:rows];
  RAREUIFont *f = [CCPBVUtils getListWidgetBoldFontWithRAREiWidget:widget];
  (void) [CCPBVUtils fixCategorizedRowsWithJavaUtilList:rows withRAREUIFont:f withBoolean:appendCounts withBoolean:NO];
  return rows;
}

+ (BOOL)handleActionPathWithCCPBVActionPath:(CCPBVActionPath *)path {
  CCPBVUtils_actionPath_ = path;
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  NSString *s = [((CCPBVActionPath *) nil_chk(path)) shiftPeek];
  if ([RAREUTSNumber isNumericWithNSString:s]) {
    [CCPBVPatientSelect changePatientWithRAREiWidget:w withCCPBVActionPath:CCPBVUtils_actionPath_];
    return YES;
  }
  else {
    RARETabPaneViewer *tv = (RARETabPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) getViewerWithNSString:@"applicationTabs"], [RARETabPaneViewer class]);
    if (tv != nil) {
      (void) [path shift];
      [tv setSelectedTabNameWithNSString:s];
      return YES;
    }
    return NO;
  }
}

+ (void)handleErrorWithJavaLangThrowable:(JavaLangThrowable *)ex {
  if (([ex isKindOfClass:[JavaNioChannelsClosedChannelException class]]) || ([ex isKindOfClass:[JavaNioChannelsClosedByInterruptException class]])) {
    return;
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  JavaLangThrowable *e = [RAREApplicationException pealExceptionWithJavaLangThrowable:ex];
  [RAREPlatform runOnUIThreadWithJavaLangRunnable:[[CCPBVUtils_$6 alloc] initWithJavaLangThrowable:e withRAREWindowViewer:w]];
}

+ (CCPBVSettings_Server *)getServer {
  return CCPBVUtils_dataServer_;
}

+ (void)handleStatusObjectWithRAREUTJSONObject:(RAREUTJSONObject *)status {
}

+ (BOOL)isApplicationLocked {
  return CCPBVUtils_applicationLock_ != nil;
}

+ (BOOL)isCardStack {
  return CCPBVUtils_cardStack_;
}

+ (BOOL)isChartableWithNSString:(NSString *)value {
  unichar c = (value == nil) ? 0 : [value charAtWithInt:0];
  if (c == '-') {
    if ([((NSString *) nil_chk(value)) sequenceLength] == 1) {
      return NO;
    }
    c = [value charAtWithInt:1];
  }
  return [JavaLangCharacter isDigitWithChar:c];
}

+ (BOOL)isDemo {
  return CCPBVUtils_demo_;
}

+ (BOOL)isGoogleGlass {
  return CCPBVUtils_googleGlass_;
}

+ (BOOL)isLocking {
  return CCPBVUtils_locking_;
}

+ (BOOL)isLoggingOff {
  return (CCPBVUtils_loginManager_ != nil) && CCPBVUtils_loginManager_->loggingOff_;
}

+ (BOOL)isSameServerWithJavaNetURL:(JavaNetURL *)u1
                    withJavaNetURL:(JavaNetURL *)u2 {
  if (u1 == nil || u2 == nil) {
    return u1 == u2;
  }
  if (u1 == u2) {
    return YES;
  }
  if (![((NSString *) nil_chk([((JavaNetURL *) nil_chk(u1)) getProtocol])) isEqual:[((JavaNetURL *) nil_chk(u2)) getProtocol]]) {
    return NO;
  }
  if (![((NSString *) nil_chk([u1 getHost])) isEqual:[u2 getHost]]) {
    return NO;
  }
  return YES;
}

+ (BOOL)isReloggingIn {
  return (CCPBVUtils_loginManager_ != nil) && CCPBVUtils_loginManager_->reloggingIn_;
}

+ (BOOL)isReverseFling {
  return CCPBVUtils_reverseFling_;
}

+ (BOOL)isServerProtocolSupportedWithNSString:(NSString *)protocol {
  if ([((NSString *) nil_chk(protocol)) isEqual:@"https"] || [protocol isEqual:@"http"]) {
    return YES;
  }
  if (CCPBVUtils_protocolHandlers_ != nil) {
    return [CCPBVUtils_protocolHandlers_ getWithId:protocol] != nil;
  }
  return NO;
}

+ (BOOL)isShuttingDown {
  return CCPBVUtils_shuttingDown_ || [RAREPlatform isShuttingDown];
}

+ (void)lockApplicationWithBoolean:(BOOL)timedout {
  [CCPBVUtils lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:timedout ? [CCPBVUtils_ApplicationLockTypeEnum TIMEOUT] : [CCPBVUtils_ApplicationLockTypeEnum PAUSED] withBoolean:YES];
}

+ (JavaUtilDate *)parseDateWithNSString:(NSString *)value {
  @try {
    value = [((NSString *) nil_chk(value)) trim];
    if ([((NSString *) nil_chk(value)) sequenceLength] == 0) {
      return nil;
    }
    int n = [value indexOf:','];
    if (n != -1) {
      JavaTextDateFormat *df = [((RAREDateContext *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDefaultDateTimeContext])) getDisplayFormat];
      return [((JavaTextDateFormat *) nil_chk(df)) parseWithNSString:value];
    }
    if ([JavaLangCharacter isDigitWithChar:[value charAtWithInt:0]]) {
      JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
      if ([RAREUTHelper setDateTimeWithNSString:value withJavaUtilCalendar:cal withBoolean:YES]) {
        return [((JavaUtilCalendar *) nil_chk(cal)) getTime];
      }
      else {
        return nil;
      }
    }
    if ([value hasPrefix:@"@"]) {
      value = @"Tvalue";
    }
    return [RAREUTHelper createDateWithNSString:value];
  }
  @catch (JavaTextParseException *e) {
    return nil;
  }
}

+ (void)performCallbackWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb
                                     withBoolean:(BOOL)canceled
                                          withId:(id)returnValue {
  if (cb != nil) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVUtils_$7 alloc] initWithRAREiFunctionCallback:cb withBoolean:canceled withId:returnValue]];
  }
}

+ (BOOL)popViewerStack {
  return [CCPBVUtils popViewerStackWithBoolean:NO];
}

+ (BOOL)popViewerStackWithBoolean:(BOOL)ignorePopRunner {
  int len = [((JavaUtilArrayList *) nil_chk(CCPBVUtils_stack_)) size];
  if (len == 0) {
    return NO;
  }
  CCPBVUtils_StackEntry *e = [CCPBVUtils_stack_ getWithInt:len - 1];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiTarget> t = ((CCPBVUtils_StackEntry *) nil_chk(e))->target_;
  id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk(t)) getViewer];
  if (v != nil) {
    id<JavaLangRunnable> r = (id<JavaLangRunnable>) check_protocol_cast([v getAttributeWithNSString:CCPBVUtils_POP_RUNNER_STACKENTRY_PROPERTY_], @protocol(JavaLangRunnable));
    if (r != nil) {
      if (!ignorePopRunner) {
        [r run];
        return NO;
      }
      (void) [v removeAttributeWithNSString:CCPBVUtils_POP_RUNNER_STACKENTRY_PROPERTY_];
    }
  }
  (void) [CCPBVUtils_stack_ removeWithInt:len - 1];
  [((CCPBVUtils_BackIcon *) nil_chk(CCPBVUtils_actionbarIcon_)) decrement];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  if (e->viewer_ == nil) {
    [e createViewerAndCallpopWorkspaceViewer];
  }
  else {
    [((RAREActionBar *) nil_chk(ab)) setTitleIconWithRAREiPlatformIcon:CCPBVUtils_actionbarIcon_];
    if ([CCPBVUtils_actionbarIcon_ getBacks] == 0) {
      if ([RAREUIScreen isLargeScreen]) {
        [ab setTitleWithJavaLangCharSequence:[w getTitle]];
      }
    }
    id<RAREiViewer> ov = [t setViewerWithRAREiViewer:e->viewer_];
    if ([CCPBVUtils isCardStack]) {
      [CCPBVCardStackUtils updateTitleWithRAREiViewer:e->viewer_ withBoolean:YES];
    }
    if ((ov != nil) && [ov isAutoDispose]) {
      [ov dispose];
    }
    t = [w getTargetWithNSString:@"patient_info"];
    if (t != nil) {
      [t setVisibleWithBoolean:!CCPBVUtils_fullscreenMode_];
    }
  }
  [((RAREActionBar *) nil_chk(ab)) revalidate];
  return YES;
}

+ (void)pushViewerWithRAREiViewer:(id<RAREiViewer>)v
                  withRAREiTarget:(id<RAREiTarget>)t
                      withBoolean:(BOOL)disposible
             withJavaLangRunnable:(id<JavaLangRunnable>)popRunner {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  if (popRunner != nil) {
    [((id<RAREiViewer>) nil_chk(v)) setAttributeWithNSString:CCPBVUtils_POP_RUNNER_STACKENTRY_PROPERTY_ withId:popRunner];
  }
  if ([((CCPBVUtils_BackIcon *) nil_chk(CCPBVUtils_actionbarIcon_)) getBacks] == 0) {
    if ([RAREUIScreen isLargeScreen] && (t == [((id<RAREiViewer>) nil_chk([w getWorkspaceViewer])) getTarget])) {
      [((RAREActionBar *) nil_chk(ab)) setTitleWithJavaLangCharSequence:(id<JavaLangCharSequence>) check_protocol_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"pt_name_age_sex"], @protocol(JavaLangCharSequence))];
    }
  }
  id<RAREiViewer> ov = [((id<RAREiTarget>) nil_chk(t)) removeViewer];
  CCPBVUtils_StackEntry *e = [[CCPBVUtils_StackEntry alloc] initWithRAREiViewer:ov withRAREiTarget:t];
  [((JavaUtilArrayList *) nil_chk(CCPBVUtils_stack_)) addWithId:e];
  [CCPBVUtils_actionbarIcon_ increment];
  [((RAREActionBar *) nil_chk(ab)) setTitleIconWithRAREiPlatformIcon:CCPBVUtils_actionbarIcon_];
  if ([CCPBVUtils isCardStack]) {
    [CCPBVCardStackUtils updateTitleWithRAREiViewer:v withBoolean:NO];
  }
  if (disposible) {
    [((id<RAREiViewer>) nil_chk(v)) setAttributeWithNSString:CCPBVUtils_DISPOSABLE_STACKENTRY_PROPERTY_ withId:[JavaLangBoolean valueOfWithBoolean:YES]];
  }
  [t setTransitionAnimatorWithRAREiTransitionAnimator:nil];
  if (v == nil) {
    v = nil;
  }
  (void) [t setViewerWithRAREiViewer:v];
  [ab revalidate];
}

+ (void)pushWorkspaceViewerWithRAREiViewer:(id<RAREiViewer>)v {
  [CCPBVUtils pushWorkspaceViewerWithRAREiViewer:v withBoolean:NO withJavaLangRunnable:nil];
}

+ (void)pushWorkspaceViewerWithRAREiViewer:(id<RAREiViewer>)v
                               withBoolean:(BOOL)disposible {
  [CCPBVUtils pushWorkspaceViewerWithRAREiViewer:v withBoolean:disposible withJavaLangRunnable:nil];
}

+ (void)pushWorkspaceViewerWithRAREiViewer:(id<RAREiViewer>)v
                               withBoolean:(BOOL)disposible
                      withJavaLangRunnable:(id<JavaLangRunnable>)popRunner {
  id<RAREiTarget> t = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  [CCPBVUtils pushViewerWithRAREiViewer:v withRAREiTarget:t withBoolean:disposible withJavaLangRunnable:popRunner];
}

+ (void)pushWorkspaceViewerWithNSString:(NSString *)url {
  [CCPBVUtils pushWorkspaceViewerWithNSString:url withBoolean:NO withJavaLangRunnable:nil];
}

+ (void)pushWorkspaceViewerWithNSString:(NSString *)url
                            withBoolean:(BOOL)disposable
                   withJavaLangRunnable:(id<JavaLangRunnable>)popRunner {
  id<RAREiFunctionCallback> cb = [[CCPBVUtils_$8 alloc] initWithBoolean:disposable withJavaLangRunnable:popRunner];
  (void) [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createViewerWithNSString:url withRAREiFunctionCallback:cb];
}

+ (void)removeActionPathSupporterWithCCPBVActionPath_iActionPathSupporter:(id<CCPBVActionPath_iActionPathSupporter>)supporter {
  [((RAREUTIdentityArrayList *) nil_chk(CCPBVUtils_actionPathSupporters_)) removeWithId:supporter];
}

+ (void)resetActionBar {
  if (CCPBVUtils_actionBarTitle_ != nil) {
    RAREActionBar *ab = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getActionBar];
    [((RAREActionBar *) nil_chk(ab)) setTitleWithJavaLangCharSequence:CCPBVUtils_actionBarTitle_];
    [ab setTitleIconWithRAREiPlatformIcon:nil];
    [ab setTitleIconWithRAREiPlatformIcon:CCPBVUtils_actionbarIcon_];
    [((CCPBVUtils_BackIcon *) nil_chk(CCPBVUtils_actionbarIcon_)) showPatientIconWithBoolean:NO];
    if (CCPBVUtils_cardStack_) {
      [CCPBVCardStackUtils clearTitle];
    }
    else {
      [ab setSecondaryTitleWithRAREiWidget:(id<RAREiWidget>) check_protocol_cast(nil, @protocol(RAREiWidget))];
    }
  }
}

+ (void)resignInWithRAREiWidget:(id<RAREiWidget>)context
                   withNSString:(NSString *)password {
  if ((CCPBVUtils_protocolHandler_ != nil) && [((CCPBVSettings_Server *) nil_chk(CCPBVUtils_dataServer_)) hasCustomLogin]) {
    [CCPBVUtils_protocolHandler_ reloginWithRAREiFunctionCallback:[[CCPBVUtils_$9 alloc] initWithRAREiWidget:context]];
    return;
  }
  [((CCPBVUtils_LoginManager *) nil_chk(CCPBVUtils_loginManager_)) reloginWithRAREiWidget:context withNSString:password];
}

+ (NSString *)resolveClassNameWithNSString:(NSString *)cls
                              withNSString:(NSString *)addon {
  if ([((NSString *) nil_chk(cls)) indexOf:'.'] == -1) {
    NSString *pkg = [((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getStringWithNSString:@"Rare.class.defaultPackage"];
    if (pkg == nil) {
      pkg = [((JavaLangPackage *) nil_chk([[IOSClass classWithClass:[CCPBVUtils class]] getPackage])) getName];
    }
    if (addon != nil) {
      cls = [NSString stringWithFormat:@"%@.%@.%@", pkg, addon, cls];
    }
    else {
      cls = [NSString stringWithFormat:@"%@.%@", pkg, cls];
    }
  }
  return cls;
}

+ (void)setActionPathWithCCPBVActionPath:(CCPBVActionPath *)path {
  CCPBVUtils_actionPath_ = path;
}

+ (void)setFirstSelectedTabWithNSString:(NSString *)name {
  [CCPBVUtils setActionPathWithCCPBVActionPath:[[CCPBVActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
}

+ (void)setIgnorePausingWithBoolean:(BOOL)ignore {
  CCPBVUtils_ignorePausing_ = ignore;
}

+ (void)setViewerInStackPaneViewerWithRAREStackPaneViewer:(RAREStackPaneViewer *)sp
                                          withRAREiViewer:(id<RAREiViewer>)viewer
                              withRAREiTransitionAnimator:(id<RAREiTransitionAnimator>)ta
                                              withBoolean:(BOOL)forward
                                              withBoolean:(BOOL)horizontal
                                              withBoolean:(BOOL)disposeOld {
  int n = [((RAREStackPaneViewer *) nil_chk(sp)) getActiveViewerIndex];
  int len = [sp size];
  if (len < 2) {
    [sp addViewerWithNSString:nil withRAREiViewer:viewer];
  }
  else {
    if (n == -1) {
      n = 1;
    }
    id<RAREiViewer> ov = [sp setViewerWithInt:1 - n withRAREiViewer:viewer];
    if (ov != nil) {
      [ov dispose];
    }
  }
  if (n == -1) {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:(id<RAREiTransitionAnimator>) check_protocol_cast(nil, @protocol(RAREiTransitionAnimator))];
    n = 0;
  }
  else {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:ta];
    if (ta != nil) {
      [((RARESlideAnimation *) check_class_cast([ta getInAnimator], [RARESlideAnimation class])) setHorizontalWithBoolean:horizontal];
    }
    if (forward) {
      if (n == 1) {
        [sp swapWithInt:0 withInt:1];
      }
      n = 1;
    }
    else {
      if (n == 0) {
        [sp swapWithInt:0 withInt:1];
      }
      n = 0;
    }
  }
  if ([CCPBVUtils isCardStack]) {
    [CCPBVCardStackUtils updateTitleWithRAREiViewer:viewer withBoolean:YES];
  }
  if (disposeOld) {
    id<RAREiFunctionCallback> cb = [[CCPBVUtils_$10 alloc] initWithRAREStackPaneViewer:sp];
    [sp switchToWithInt:n withRAREiFunctionCallback:cb];
  }
  else {
    [sp switchToWithInt:n];
  }
}

+ (void)showDialogWithRAREiViewer:(id<RAREiViewer>)v
                      withBoolean:(BOOL)decorated
                      withBoolean:(BOOL)opaque {
  RAREWindowViewer *w = [((id<RAREiPlatformAppContext>) nil_chk([((id<RAREiViewer>) nil_chk(v)) getAppContext])) getWindowViewer];
  id<JavaUtilMap> map = CCPBVUtils_dialogOptions_;
  [((id<JavaUtilMap>) nil_chk(map)) clear];
  (void) [map putWithId:@"opaque" withId:[JavaLangBoolean valueOfWithBoolean:opaque]];
  (void) [map putWithId:@"decorated" withId:[JavaLangBoolean valueOfWithBoolean:decorated]];
  (void) [map putWithId:@"title" withId:[v getTitle]];
  @try {
    [CCPBVUtils stopRealtimeUpdates];
    (void) [v showAsDialogWithJavaUtilMap:map];
  }
  @catch (JavaLangException *e) {
    [((RAREWindowViewer *) nil_chk(w)) handleExceptionWithJavaLangThrowable:e];
  }
}

+ (void)showDialogWithNSString:(NSString *)url
                   withBoolean:(BOOL)decorated
                   withBoolean:(BOOL)opaque {
  @try {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    RAREActionLink *link = [((RAREWindowViewer *) nil_chk(w)) createActionLinkWithId:url];
    (void) [RAREViewerCreator createViewerWithRAREiWidget:w withRAREActionLink:link withRAREiFunctionCallback:[[CCPBVUtils_$11 alloc] initWithBoolean:decorated withBoolean:opaque]];
    [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) showWaitCursor];
  }
  @catch (JavaIoIOException *e) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:e];
  }
}

+ (void)showMainView {
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  RAREUTJSONObject *patient = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk(app)) getDataWithId:@"patient"], [RAREUTJSONObject class]);
  if (patient != nil) {
    NSString *id_ = (NSString *) check_class_cast([patient optStringWithNSString:@"id" withNSString:nil], [NSString class]);
    NSString *name = (NSString *) check_class_cast([patient optStringWithNSString:@"name" withNSString:nil], [NSString class]);
    if ((id_ != nil) && (name != nil)) {
      RAREWindowViewer *w = [RAREPlatform getWindowViewer];
      id<RAREiFunctionCallback> cb = [[CCPBVUtils_$12 alloc] initWithRAREWindowViewer:w];
      @try {
        RAREUTJSONObject *map = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"user"], [RAREUTJSONObject class]);
        NSString *s = [((RAREUTJSONObject *) nil_chk(map)) optStringWithNSString:@"rmlMarkupFile" withNSString:@"physician.rml"];
        (void) [((RAREWindowViewer *) nil_chk(w)) createViewerWithNSString:s withRAREiFunctionCallback:cb];
      }
      @catch (JavaLangException *e) {
        [CCPBVUtils handleErrorWithJavaLangThrowable:e];
      }
      return;
    }
  }
  [CCPBVPatientSelect changePatientWithRAREiWidget:[app getMainWindowViewer] withCCPBVActionPath:nil];
}

+ (void)showPullBackAnimationWithRAREiViewer:(id<RAREiViewer>)viewer
                                 withBoolean:(BOOL)horizontal
                                 withBoolean:(BOOL)topLeft {
  if (CCPBVUtils_pullbackAnimation_ == nil) {
    CCPBVUtils_pullbackAnimation_ = [[RAREPullBackAnimation alloc] initWithBoolean:YES];
  }
  RAREPullBackAnimation *pa = CCPBVUtils_pullbackAnimation_;
  if ([((RAREPullBackAnimation *) nil_chk(pa)) isRunning]) {
    pa = [[RAREPullBackAnimation alloc] init];
  }
  [pa setHorizontalWithBoolean:horizontal];
  [pa setDirectionWithRAREiAnimator_DirectionEnum:topLeft ? [RAREiAnimator_DirectionEnum BACKWARD] : [RAREiAnimator_DirectionEnum FORWARD]];
  [((id<RAREiViewer>) nil_chk(viewer)) animateWithRAREiPlatformAnimator:pa withRAREiFunctionCallback:nil];
}

+ (void)showShakeAnimationWithRAREiViewer:(id<RAREiViewer>)viewer {
  if (CCPBVUtils_shakeAnimation_ == nil) {
    CCPBVUtils_shakeAnimation_ = [[RAREShakeAnimation alloc] init];
  }
  RAREShakeAnimation *sa = CCPBVUtils_shakeAnimation_;
  if ([((RAREShakeAnimation *) nil_chk(sa)) isRunning]) {
    sa = [[RAREShakeAnimation alloc] init];
  }
  [((id<RAREiViewer>) nil_chk(viewer)) animateWithRAREiPlatformAnimator:sa withRAREiFunctionCallback:nil];
}

+ (void)signInWithRAREiWidget:(id<RAREiWidget>)context
                 withNSString:(NSString *)username
                 withNSString:(NSString *)password
     withCCPBVSettings_Server:(CCPBVSettings_Server *)server {
  if (password != nil) {
    password = [password trim];
  }
  if (username != nil) {
    username = [username trim];
  }
  NSString *href = [((CCPBVSettings_Server *) nil_chk(server)) getURL];
  if (![((NSString *) nil_chk(href)) hasSuffix:@"/"]) {
    href = [NSString stringWithFormat:@"%@/", href];
  }
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if ([@"other" isEqual:href] && ([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(context)) getFormViewer])) getWidgetWithNSString:@"url"] != nil)) {
    href = [((id<RAREiWidget>) nil_chk([((id<RAREiFormViewer>) nil_chk([context getFormViewer])) getWidgetWithNSString:@"url"])) getValueAsString];
  }
  NSString *title;
  int n = [((NSString *) nil_chk(href)) indexOf:'^'];
  if (n != -1) {
    title = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:[href substring:n + 1]];
    href = [href substring:0 endIndex:n];
  }
  else {
    title = [((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.welcome"];
  }
  NSString *root = @"";
  JavaNetURL *url = nil;
  if ((href != nil) && ([href sequenceLength] > 0) && ![href hasPrefix:@"file:"] && ![@"local/" equalsIgnoreCase:href]) {
    if (![href contains:@"/demo"] && ![href contains:@"/BellaVista-android/assets/"]) {
      if ([server isRestricted]) {
        if ((password == nil) || ([password sequenceLength] < 4)) {
          [w alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.missing_password"]];
          return;
        }
        if ((username == nil) || ([username sequenceLength] < 4)) {
          [w alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.missing_username"]];
          return;
        }
      }
    }
    else {
      CCPBVUtils_demo_ = YES;
    }
    @try {
      url = [[JavaNetURL alloc] initWithNSString:href];
      root = [url getFile];
      n = [((NSString *) nil_chk(root)) lastIndexOf:'/'];
      if (n == -1) {
        root = @"";
      }
      else if (n > 0) {
        root = [root substring:0 endIndex:n];
      }
    }
    @catch (JavaLangException *e) {
      [w alertWithId:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.format.invalid_server" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ href, [RAREApplicationException getMessageExWithJavaLangThrowable:e] } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
      return;
    }
  }
  else {
    CCPBVUtils_demo_ = YES;
  }
  CCPBVUtils_loginManager_ = [[CCPBVUtils_LoginManager alloc] initWithRAREiWidget:context withJavaNetURL:url withNSString:root withCCPBVSettings_Server:server withNSString:title];
  if ((CCPBVUtils_protocolHandlers_ != nil) && [server hasCustomLogin]) {
    CCPBVaProtocolHandler *ph = [CCPBVUtils_protocolHandlers_ getWithId:[((JavaNetURL *) nil_chk(url)) getProtocol]];
    if (ph != nil) {
      [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
      [ph customLoginWithCCPBVSettings_Server:server withRAREiFunctionCallback:[[CCPBVUtils_$13 alloc] initWithRAREWindowViewer:w]];
      return;
    }
  }
  [CCPBVUtils_loginManager_ loginWithNSString:username withNSString:password];
}

+ (void)sortTableWithRARETableViewer:(RARETableViewer *)table
                             withInt:(int)sortPosition {
  id<JavaUtilList> rows = [((RARETableViewer *) nil_chk(table)) getRawRows];
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setColumnWithInt:sortPosition];
  for (int i = 0; i < len; i++) {
    RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk([rows getWithInt:i])) getItemExWithInt:0];
    if (item != nil) {
      [item sortWithJavaUtilComparator:c];
    }
  }
  [table refreshItems];
}

+ (void)stopRealtimeUpdates {
}

+ (void)switchStackPaneViewerWithRAREStackPaneViewer:(RAREStackPaneViewer *)sp
                         withRAREiTransitionAnimator:(id<RAREiTransitionAnimator>)ta
                                         withBoolean:(BOOL)forward {
  int n = [((RAREStackPaneViewer *) nil_chk(sp)) getActiveViewerIndex];
  if (n == -1) {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:(id<RAREiTransitionAnimator>) check_protocol_cast(nil, @protocol(RAREiTransitionAnimator))];
    n = 0;
  }
  else {
    [sp setTransitionAnimatorWithRAREiTransitionAnimator:ta];
    if (forward) {
      if (n == 1) {
        [sp swapWithInt:0 withInt:1];
        n = 1;
      }
    }
    else {
      if (n == 0) {
        [sp swapWithInt:0 withInt:1];
        n = 0;
      }
    }
  }
  [sp switchToWithInt:n];
}

+ (void)switchToTabWithNSString:(NSString *)name {
}

+ (void)toggleActionsWithBoolean:(BOOL)enabled {
  id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
  RAREUIAction *a = [((id<RAREiPlatformAppContext>) nil_chk(app)) getActionWithNSString:@"bv.action.lock"];
  if ((a != nil) && ![a isEnabled]) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.preferences"];
  if ((a != nil) && ((CCPBVUtils_applicationLock_ != nil) || ![a isEnabled])) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.change_patient"];
  if (a != nil) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.new_orders"];
  if (a != nil) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.print"];
  if (a != nil) {
    [a setEnabledWithBoolean:enabled];
  }
  a = [app getActionWithNSString:@"bv.action.help"];
  if ((a != nil) && ![a isEnabled]) {
    [a setEnabledWithBoolean:enabled];
  }
}

+ (void)toggleFullScreenWithBoolean:(BOOL)full {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
  if (full) {
    if (![((id<RAREiPlatform>) nil_chk([RAREPlatform getPlatform])) isDesktop]) {
      [RAREPlatform setUseFullScreenWithBoolean:YES];
    }
    id<RAREiTarget> t = [w getTargetWithNSString:@"patient_info"];
    if (t != nil) {
      [t setVisibleWithBoolean:NO];
    }
    [((RAREActionBar *) nil_chk(ab)) setTitleWithJavaLangCharSequence:(id<JavaLangCharSequence>) check_protocol_cast([((id<RAREiPlatformAppContext>) nil_chk([w getAppContext])) getDataWithId:@"pt_name"], @protocol(JavaLangCharSequence))];
  }
  else {
    if (![((id<RAREiPlatform>) nil_chk([RAREPlatform getPlatform])) isDesktop]) {
      [RAREPlatform setUseFullScreenWithBoolean:NO];
    }
    id<RAREiTarget> t = [w getTargetWithNSString:@"patient_info"];
    if (t != nil) {
      [t setVisibleWithBoolean:YES];
    }
  }
  CCPBVUtils_fullscreenMode_ = full;
}

+ (void)updateActionBar {
  if (![RAREUIScreen isLargeScreen]) {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    RAREActionBar *ab = [((RAREWindowViewer *) nil_chk(w)) getActionBar];
    if (CCPBVUtils_actionBarTitle_ == nil) {
      CCPBVUtils_actionBarTitle_ = [CCPBVUtils isCardStack] ? @"" : ((id) [((id<RAREiActionComponent>) nil_chk([((RAREActionBar *) nil_chk(ab)) getTitleComponent])) getText]);
    }
    [((RAREActionBar *) nil_chk(ab)) setVisibleWithBoolean:YES];
    if ([CCPBVUtils getPatient] != nil) {
      ((CCPBVUtils_BackIcon *) nil_chk(CCPBVUtils_actionbarIcon_))->patientIcon_ = (id<RAREiPlatformIcon>) check_protocol_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"pt_thumbnail"], @protocol(RAREiPlatformIcon));
      [CCPBVUtils_actionbarIcon_ showPatientIconWithBoolean:YES];
      [ab setTitleIconWithRAREiPlatformIcon:nil];
      [ab setTitleIconWithRAREiPlatformIcon:CCPBVUtils_actionbarIcon_];
      if ([CCPBVUtils isCardStack]) {
        [ab setTitleWithJavaLangCharSequence:@""];
        [((id<RAREiWidget>) nil_chk([((id<RAREiContainer>) nil_chk(CCPBVUtils_titleWidget_)) getWidgetWithNSString:@"title"])) reset];
        [ab setSecondaryTitleWithRAREiWidget:CCPBVUtils_titleWidget_];
      }
      else {
        [ab setTitleWithJavaLangCharSequence:[nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"pt_name"]) description]];
      }
    }
    else if ([CCPBVUtils isCardStack]) {
      [ab setTitleWithJavaLangCharSequence:@""];
      id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]])) getViewer];
      [CCPBVCardStackUtils updateTitleWithRAREiViewer:v withBoolean:YES];
    }
  }
}

+ (CCPBVaProtocolHandler *)getProtocolHelperWithJavaNetURL:(JavaNetURL *)url {
  CCPBVaProtocolHandler *ph = (CCPBVUtils_protocolHandlers_ == nil) ? nil : [CCPBVUtils_protocolHandlers_ getWithId:[((JavaNetURL *) nil_chk(url)) getProtocol]];
  return (ph == nil) ? CCPBVUtils_defaultProtocolHandler_ : ph;
}

+ (void)lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:(CCPBVUtils_ApplicationLockTypeEnum *)type
                                                  withBoolean:(BOOL)logout {
  if (CCPBVUtils_applicationLock_ != nil) {
    return;
  }
  CCPBVUtils_locking_ = YES;
  @try {
    RAREWindowViewer *w = [RAREPlatform getWindowViewer];
    [CCPBVOrderManager lockingApplication];
    while ([CCPBVUtils popViewerStackWithBoolean:YES]) ;
    CCPBVUtils_applicationLock_ = [[CCPBVUtils_ApplicationLock alloc] initWithCCPBVUtils_ApplicationLockTypeEnum:type];
    [CCPBVUtils toggleActionsWithBoolean:NO];
    RAREUIAction *a = [((RAREWindowViewer *) nil_chk(w)) getActionWithNSString:@"bv.action.lock"];
    if (a != nil) {
      [a setEnabledWithBoolean:NO];
    }
    if (logout) {
      [CCPBVPatientSelect clearoutPatientCentricInfo];
      [((CCPBVUtils_LoginManager *) nil_chk(CCPBVUtils_loginManager_)) logout];
    }
    else {
      [CCPBVUtils resetActionBar];
    }
    id<RAREiContainer> rv = (id<RAREiContainer>) check_protocol_cast([w createViewerWithRAREiWidget:w withRARESPOTWidget:CCPBVUtils_reloginConfig_], @protocol(RAREiContainer));
    RAREStackPaneViewer *panel = (RAREStackPaneViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(rv)) getWidgetWithNSString:@"reloginPanel"], [RAREStackPaneViewer class]);
    id<RAREiWidget> reason = [((id<RAREiContainer>) check_protocol_cast([((RAREStackPaneViewer *) nil_chk(panel)) getViewerWithInt:0], @protocol(RAREiContainer))) getWidgetWithNSString:@"reasonLabel"];
    switch ([type ordinal]) {
      case CCPBVUtils_ApplicationLockType_TIMEOUT:
      [((id<RAREiWidget>) nil_chk(reason)) setValueWithId:[w getStringWithNSString:@"bv.text.client_timedout"]];
      break;
      case CCPBVUtils_ApplicationLockType_UNAVAILABLE:
      [((id<RAREiWidget>) nil_chk(reason)) setValueWithId:[w getStringWithNSString:@"bv.text.service_unavailable"]];
      break;
      default:
      break;
    }
    id<RAREiTarget> t = [w getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
    id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk(t)) setViewerWithRAREiViewer:rv];
    if (logout) {
      [((id<RAREiViewer>) nil_chk(v)) dispose];
    }
    else {
      [panel switchToWithInt:1];
      CCPBVUtils_applicationLock_->viewer_ = v;
    }
  }
  @finally {
    CCPBVUtils_locking_ = NO;
  }
}

+ (NSString *)getServerHost {
  if (CCPBVUtils_serverHost_ == nil) {
    @try {
      CCPBVUtils_serverHost_ = [((JavaNetURL *) nil_chk([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getURLWithNSString:@"/hub/main/"])) getHost];
    }
    @catch (JavaNetMalformedURLException *e) {
      [RAREPlatform ignoreExceptionWithJavaLangThrowable:e];
    }
    if (CCPBVUtils_serverHost_ == nil) {
      CCPBVUtils_serverHost_ = @"";
    }
  }
  return CCPBVUtils_serverHost_;
}

+ (void)initialize {
  if (self == [CCPBVUtils class]) {
    CCPBVUtils_actionPathSupporters_ = [[RAREUTIdentityArrayList alloc] initWithInt:5];
    CCPBVUtils_stack_ = [[JavaUtilArrayList alloc] initWithInt:3];
    CCPBVUtils_dialogOptions_ = [[JavaUtilHashMap alloc] initWithInt:5];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL },
    { "canReselectPatient", NULL, "Z", 0x9, NULL },
    { "categorizeWithJavaUtilList:withInt:withRARERenderableDataItem:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "categorizeWithRARETableViewer:withInt:withRARERenderableDataItem:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "clearViewerStack", NULL, "Z", 0x9, NULL },
    { "continuePollingForUpdates", NULL, "Z", 0x9, NULL },
    { "createDisabledTableRowWithNSString:withInt:", NULL, "LRARERenderableDataItem", 0x9, NULL },
    { "createGenericContainerViewerWithRAREiContainer:", NULL, "LRAREGridPaneViewer", 0x9, NULL },
    { "createLinkWithRAREiWidget:withNSString:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createLinkWithRAREiWidget:withNSString:withBoolean:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createLinkWithRAREiWidget:withJavaNetURL:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createLinkWithRAREiWidget:withJavaNetURL:withBoolean:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createLinkWithRAREiWidget:withJavaNetURL:withNSString:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createPhotosActionLinkWithNSString:withBoolean:", NULL, "LRAREActionLink", 0x9, NULL },
    { "createURLStreamHandlerWithNSString:", NULL, "LJavaNetURLStreamHandler", 0x9, NULL },
    { "expandTemplateWithNSString:withJavaUtilMap:", NULL, "LNSString", 0x9, "JavaIoIOException" },
    { "fixCategorizedRowsWithJavaUtilList:withRAREUIFont:withBoolean:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "getaCommunicationHandler", NULL, "LCCPBVaCommunicationHandler", 0x9, NULL },
    { "getActionPathWithBoolean:", NULL, "LCCPBVActionPath", 0x9, NULL },
    { "getAttachmentHandlerWithNSString:", NULL, "LCCPBVaAttachmentHandler", 0x9, NULL },
    { "getContentAsJSONWithNSString:withJavaUtilMap:withBoolean:", NULL, "LRAREUTJSONObject", 0x9, "JavaLangException" },
    { "getDefaultServer", NULL, "LCCPBVSettings_Server", 0x9, NULL },
    { "getDisplayedActionPath", NULL, "LCCPBVActionPath", 0x9, NULL },
    { "getListWidgetBoldFontWithRAREiWidget:", NULL, "LRAREUIFont", 0x9, NULL },
    { "getPatient", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "getPatientID", NULL, "LNSString", 0x9, NULL },
    { "getPreferences", NULL, "LCCPBVSettings_AppPreferences", 0x9, NULL },
    { "getProtocolHandlerWithNSString:", NULL, "LCCPBVaProtocolHandler", 0x9, NULL },
    { "getSplitPaneViewerWithRAREiWidget:", NULL, "LRARESplitPaneViewer", 0x9, NULL },
    { "getStackPaneViewerWithRAREiWidget:", NULL, "LRAREStackPaneViewer", 0x9, NULL },
    { "getStatusIcons", NULL, "LJavaUtilHashMap", 0x9, NULL },
    { "getStyleSheet", NULL, "LNSString", 0x9, NULL },
    { "getUser", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "getUserDisplayName", NULL, "LNSString", 0x9, NULL },
    { "getUserID", NULL, "LNSString", 0x9, NULL },
    { "getCurrentViewerOnStack", NULL, "LRAREiViewer", 0x9, NULL },
    { "groupByDateWithRARETableViewer:withJavaUtilList:", NULL, "LJavaUtilList", 0x9, NULL },
    { "groupRowsWithRARETableViewer:withJavaUtilList:withInt:withInt:withBoolean:", NULL, "LJavaUtilList", 0x9, NULL },
    { "handleActionPathWithCCPBVActionPath:", NULL, "Z", 0x9, NULL },
    { "getServer", NULL, "LCCPBVSettings_Server", 0x9, NULL },
    { "isApplicationLocked", NULL, "Z", 0x9, NULL },
    { "isCardStack", NULL, "Z", 0x9, NULL },
    { "isChartableWithNSString:", NULL, "Z", 0x9, NULL },
    { "isDemo", NULL, "Z", 0x9, NULL },
    { "isGoogleGlass", NULL, "Z", 0x9, NULL },
    { "isLocking", NULL, "Z", 0x9, NULL },
    { "isLoggingOff", NULL, "Z", 0x9, NULL },
    { "isSameServerWithJavaNetURL:withJavaNetURL:", NULL, "Z", 0x9, NULL },
    { "isReloggingIn", NULL, "Z", 0x9, NULL },
    { "isReverseFling", NULL, "Z", 0x9, NULL },
    { "isServerProtocolSupportedWithNSString:", NULL, "Z", 0x9, NULL },
    { "isShuttingDown", NULL, "Z", 0x9, NULL },
    { "parseDateWithNSString:", NULL, "LJavaUtilDate", 0x9, NULL },
    { "popViewerStack", NULL, "Z", 0x9, NULL },
    { "popViewerStackWithBoolean:", NULL, "Z", 0x9, NULL },
    { "pushWorkspaceViewerWithNSString:", NULL, "V", 0x9, "JavaNetMalformedURLException" },
    { "pushWorkspaceViewerWithNSString:withBoolean:withJavaLangRunnable:", NULL, "V", 0x9, "JavaNetMalformedURLException" },
    { "resolveClassNameWithNSString:withNSString:", NULL, "LNSString", 0x9, NULL },
    { "getProtocolHelperWithJavaNetURL:", NULL, "LCCPBVaProtocolHandler", 0xa, NULL },
    { "lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:withBoolean:", NULL, "V", 0x8, NULL },
    { "getServerHost", NULL, "LNSString", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "colSeparator_", NULL, 0x9, "C" },
    { "ldSeparator_", NULL, 0x9, "C" },
    { "riSeparator_", NULL, 0x9, "C" },
    { "DISPOSABLE_STACKENTRY_PROPERTY_", NULL, 0x9, "LNSString" },
    { "POP_RUNNER_STACKENTRY_PROPERTY_", NULL, 0x9, "LNSString" },
    { "preferences_", NULL, 0x8, "LCCPBVSettings_AppPreferences" },
    { "loginManager_", NULL, 0x8, "LCCPBVUtils_LoginManager" },
    { "demo_", NULL, 0x8, "Z" },
    { "pullbackAnimation_", NULL, 0x8, "LRAREPullBackAnimation" },
    { "shakeAnimation_", NULL, 0x8, "LRAREShakeAnimation" },
    { "actionPath_", NULL, 0x8, "LCCPBVActionPath" },
    { "actionPathSupporters_", NULL, 0x8, "LRAREUTIdentityArrayList" },
    { "statusIcons_", NULL, 0x8, "LJavaUtilHashMap" },
    { "collectionManager_", NULL, 0x8, "LCCPBVCollectionManager" },
    { "attachmentHandlers_", NULL, 0x8, "LRAREUTJSONObject" },
    { "wasClosing_", NULL, 0x8, "Z" },
    { "applicationLock_", NULL, 0x8, "LCCPBVUtils_ApplicationLock" },
    { "commHandler_", NULL, 0x8, "LCCPBVaCommunicationHandler" },
    { "settingsHandler_", NULL, 0x8, "LCCPBVSettings" },
    { "stack_", NULL, 0x8, "LJavaUtilArrayList" },
    { "actionbarIcon_", NULL, 0x8, "LCCPBVUtils_BackIcon" },
    { "dialogOptions_", NULL, 0x8, "LJavaUtilMap" },
    { "reloginConfig_", NULL, 0x8, "LRARESPOTViewer" },
    { "genericContainerCfg_", NULL, 0x8, "LRARESPOTGridPane" },
    { "ignorePausing_", NULL, 0x8, "Z" },
    { "shuttingDown_", NULL, 0x8, "Z" },
    { "fullscreenMode_", NULL, 0x8, "Z" },
    { "cardStack_", NULL, 0x9, "Z" },
    { "boldFont_", NULL, 0x8, "LRAREUIFont" },
    { "popAnimation_", NULL, 0x8, "LRARETransitionAnimator" },
    { "titleWidget_", NULL, 0x8, "LRAREiContainer" },
    { "actionBarTitle_", NULL, 0xa, "LJavaLangCharSequence" },
    { "googleGlass_", NULL, 0x9, "Z" },
    { "reverseFling_", NULL, 0x9, "Z" },
    { "protocolHandlers_", NULL, 0x8, "LJavaUtilHashMap" },
    { "defaultProtocolHandler_", NULL, 0x8, "LCCPBVUtils_DefaultProtocolHandler" },
    { "locking_", NULL, 0xa, "Z" },
    { "styleSheet_", NULL, 0xa, "LNSString" },
    { "dataServer_", NULL, 0x8, "LCCPBVSettings_Server" },
    { "protocolHandler_", NULL, 0x8, "LCCPBVaProtocolHandler" },
    { "serverHost_", NULL, 0xa, "LNSString" },
    { "imageAttachmentTypes_", NULL, 0x8, "LJavaUtilHashSet" },
  };
  static J2ObjcClassInfo _CCPBVUtils = { "Utils", "com.sparseware.bellavista", NULL, 0x1, 61, methods, 42, fields, 0, NULL};
  return &_CCPBVUtils;
}

@end
@implementation CCPBVUtils_BadgeCompoundIcon

- (id)initWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)firstIcon
          withRAREiPlatformIcon:(id<RAREiPlatformIcon>)secondIcon {
  return [super initWithRAREiPlatformIcon:firstIcon withRAREiPlatformIcon:secondIcon];
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height {
  [((id<RAREiPlatformIcon>) IOSObjectArray_Get(nil_chk(icons_), 0)) paintWithRAREiPlatformGraphics:g withFloat:x withFloat:y withFloat:width withFloat:height];
  int w = [((id<RAREiPlatformIcon>) IOSObjectArray_Get(icons_, 1)) getIconWidth];
  [((id<RAREiPlatformIcon>) IOSObjectArray_Get(icons_, 1)) paintWithRAREiPlatformGraphics:g withFloat:x + width - w withFloat:0 withFloat:w withFloat:w];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVUtils_BadgeCompoundIcon = { "BadgeCompoundIcon", "com.sparseware.bellavista", "Utils", 0x9, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVUtils_BadgeCompoundIcon;
}

@end
@implementation CCPBVUtils_StackEntry

- (id)initWithRAREiViewer:(id<RAREiViewer>)viewer
          withRAREiTarget:(id<RAREiTarget>)t {
  if (self = [super init]) {
    if ([((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:[((id<RAREiViewer>) nil_chk(viewer)) getAttributeWithNSString:[CCPBVUtils DISPOSABLE_STACKENTRY_PROPERTY]]]) {
      RAREActionLink *l = [viewer getViewerActionLink];
      if (l != nil) {
        viewerLink_ = l;
        [viewer dispose];
        viewer = nil;
      }
    }
    self->target_ = t;
    self->viewer_ = viewer;
  }
  return self;
}

- (void)createViewerAndCallpopWorkspaceViewer {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  @try {
    [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
    (void) [w createViewerWithRAREActionLink:viewerLink_ withRAREiFunctionCallback:self];
  }
  @catch (JavaNetMalformedURLException *e) {
    [((RAREWindowViewer *) nil_chk(w)) hideWaitCursor];
    [CCPBVUtils handleErrorWithJavaLangThrowable:e];
  }
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    viewer_ = ((id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer)));
    [CCPBVUtils popViewerStack];
  }
}

- (void)copyAllFieldsTo:(CCPBVUtils_StackEntry *)other {
  [super copyAllFieldsTo:other];
  other->disposable_ = disposable_;
  other->target_ = target_;
  other->viewer_ = viewer_;
  other->viewerLink_ = viewerLink_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "viewer_", NULL, 0x0, "LRAREiViewer" },
    { "viewerLink_", NULL, 0x0, "LRAREActionLink" },
    { "disposable_", NULL, 0x0, "Z" },
    { "target_", NULL, 0x0, "LRAREiTarget" },
  };
  static J2ObjcClassInfo _CCPBVUtils_StackEntry = { "StackEntry", "com.sparseware.bellavista", "Utils", 0x9, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVUtils_StackEntry;
}

@end
@implementation CCPBVUtils_AlphaAnimator

- (id)initWithRAREiWidget:(id<RAREiWidget>)widget
             withNSString:(NSString *)dataKey {
  if (self = [super init]) {
    increment_ = 0.1f;
    min_ = 0.3f;
    self->widget_ = widget;
    self->dataKey_ = dataKey;
    self->alpha_ = 1;
  }
  return self;
}

- (void)run {
  if ([((id<RAREiWidget>) nil_chk(widget_)) isDisposed]) {
    return;
  }
  if ([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:dataKey_] != nil) {
    alpha_ = 1;
  }
  else {
    if (alpha_ >= 1) {
      up_ = NO;
      alpha_ = 1 - increment_;
    }
    else if (alpha_ <= min_) {
      up_ = YES;
      alpha_ = min_ + increment_;
    }
    else {
      if (up_) {
        alpha_ += increment_;
        alpha_ = [JavaLangMath minWithFloat:1 withFloat:alpha_];
      }
      else {
        alpha_ -= increment_;
        alpha_ = [JavaLangMath maxWithFloat:min_ withFloat:alpha_];
      }
    }
    (void) [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) setTimeoutWithId:self withLong:100];
  }
  [((id<RAREiPlatformComponent>) nil_chk([widget_ getContainerComponent])) setAlphaWithFloat:alpha_];
  [widget_ repaint];
}

- (void)copyAllFieldsTo:(CCPBVUtils_AlphaAnimator *)other {
  [super copyAllFieldsTo:other];
  other->alpha_ = alpha_;
  other->dataKey_ = dataKey_;
  other->increment_ = increment_;
  other->min_ = min_;
  other->up_ = up_;
  other->widget_ = widget_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "widget_", NULL, 0x0, "LRAREiWidget" },
    { "dataKey_", NULL, 0x0, "LNSString" },
    { "alpha_", NULL, 0x0, "F" },
    { "up_", NULL, 0x0, "Z" },
    { "increment_", NULL, 0x0, "F" },
    { "min_", NULL, 0x0, "F" },
  };
  static J2ObjcClassInfo _CCPBVUtils_AlphaAnimator = { "AlphaAnimator", "com.sparseware.bellavista", "Utils", 0x8, 0, NULL, 6, fields, 0, NULL};
  return &_CCPBVUtils_AlphaAnimator;
}

@end
@implementation CCPBVUtils_ApplicationLock

- (id)initWithCCPBVUtils_ApplicationLockTypeEnum:(CCPBVUtils_ApplicationLockTypeEnum *)type {
  if (self = [super init]) {
    NSString *patient = [CCPBVUtils getPatientID];
    if (patient != nil) {
      actionPath_ = [CCPBVUtils getDisplayedActionPath];
    }
  }
  return self;
}

- (void)disposeViewer {
  [((id<RAREiViewer>) nil_chk(viewer_)) dispose];
  [CCPBVPatientSelect clearoutPatientCentricInfo];
  id<RAREiTarget> t = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiContainer> rv = (id<RAREiContainer>) check_protocol_cast([((id<RAREiTarget>) nil_chk(t)) getViewer], @protocol(RAREiContainer));
  [((RAREStackPaneViewer *) check_class_cast([((id<RAREiContainer>) nil_chk(rv)) getWidgetWithNSString:@"reloginPanel"], [RAREStackPaneViewer class])) switchToWithInt:0];
  [rv update];
  viewer_ = nil;
}

- (void)restoreViewer {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  id<RAREiTarget> t = [((RAREWindowViewer *) nil_chk(w)) getTargetWithNSString:[RAREiTarget TARGET_WORKSPACE]];
  id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk(t)) setViewerWithRAREiViewer:viewer_];
  [((id<RAREiViewer>) nil_chk(v)) dispose];
  viewer_ = nil;
}

- (void)copyAllFieldsTo:(CCPBVUtils_ApplicationLock *)other {
  [super copyAllFieldsTo:other];
  other->actionPath_ = actionPath_;
  other->viewer_ = viewer_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithCCPBVUtils_ApplicationLockTypeEnum:", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "viewer_", NULL, 0x0, "LRAREiViewer" },
    { "actionPath_", NULL, 0x0, "LCCPBVActionPath" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ApplicationLock = { "ApplicationLock", "com.sparseware.bellavista", "Utils", 0x8, 1, methods, 2, fields, 0, NULL};
  return &_CCPBVUtils_ApplicationLock;
}

@end

static CCPBVUtils_ApplicationLockTypeEnum *CCPBVUtils_ApplicationLockTypeEnum_TIMEOUT;
static CCPBVUtils_ApplicationLockTypeEnum *CCPBVUtils_ApplicationLockTypeEnum_PAUSED;
static CCPBVUtils_ApplicationLockTypeEnum *CCPBVUtils_ApplicationLockTypeEnum_UNAVAILABLE;
IOSObjectArray *CCPBVUtils_ApplicationLockTypeEnum_values;

@implementation CCPBVUtils_ApplicationLockTypeEnum

+ (CCPBVUtils_ApplicationLockTypeEnum *)TIMEOUT {
  return CCPBVUtils_ApplicationLockTypeEnum_TIMEOUT;
}
+ (CCPBVUtils_ApplicationLockTypeEnum *)PAUSED {
  return CCPBVUtils_ApplicationLockTypeEnum_PAUSED;
}
+ (CCPBVUtils_ApplicationLockTypeEnum *)UNAVAILABLE {
  return CCPBVUtils_ApplicationLockTypeEnum_UNAVAILABLE;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [CCPBVUtils_ApplicationLockTypeEnum class]) {
    CCPBVUtils_ApplicationLockTypeEnum_TIMEOUT = [[CCPBVUtils_ApplicationLockTypeEnum alloc] initWithNSString:@"TIMEOUT" withInt:0];
    CCPBVUtils_ApplicationLockTypeEnum_PAUSED = [[CCPBVUtils_ApplicationLockTypeEnum alloc] initWithNSString:@"PAUSED" withInt:1];
    CCPBVUtils_ApplicationLockTypeEnum_UNAVAILABLE = [[CCPBVUtils_ApplicationLockTypeEnum alloc] initWithNSString:@"UNAVAILABLE" withInt:2];
    CCPBVUtils_ApplicationLockTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ CCPBVUtils_ApplicationLockTypeEnum_TIMEOUT, CCPBVUtils_ApplicationLockTypeEnum_PAUSED, CCPBVUtils_ApplicationLockTypeEnum_UNAVAILABLE, nil } count:3 type:[IOSClass classWithClass:[CCPBVUtils_ApplicationLockTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:CCPBVUtils_ApplicationLockTypeEnum_values];
}

+ (CCPBVUtils_ApplicationLockTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [CCPBVUtils_ApplicationLockTypeEnum_values count]; i++) {
    CCPBVUtils_ApplicationLockTypeEnum *e = CCPBVUtils_ApplicationLockTypeEnum_values->buffer_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static const char *superclass_type_args[] = {"LCCPBVUtils_ApplicationLockTypeEnum"};
  static J2ObjcClassInfo _CCPBVUtils_ApplicationLockTypeEnum = { "ApplicationLockType", "com.sparseware.bellavista", "Utils", 0x4018, 0, NULL, 0, NULL, 1, superclass_type_args};
  return &_CCPBVUtils_ApplicationLockTypeEnum;
}

@end
@implementation CCPBVUtils_BackIcon

- (id)initWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  if (self = [super init]) {
    self->icon_ = icon;
    self->appIcon_ = icon;
    self->backIcon_ = [RAREPlatform getResourceAsIconWithNSString:@"bv.icon.back_thin"];
    iconWidth_ = [((id<RAREiPlatformIcon>) nil_chk(icon)) getIconWidth];
    iconHeight_ = [icon getIconHeight];
    backIconWidth_ = [((id<RAREiPlatformIcon>) nil_chk(backIcon_)) getIconWidth];
    backIconHeight_ = [backIcon_ getIconHeight];
  }
  return self;
}

- (void)decrement {
  backs_--;
  if (backs_ < 0) {
    backs_ = 0;
  }
}

- (int)getBacks {
  return backs_;
}

- (id<RAREiPlatformIcon>)getDisabledVersion {
  return self;
}

- (int)getIconHeight {
  return [JavaLangMath maxWithInt:backIconHeight_ withInt:iconHeight_];
}

- (int)getIconWidth {
  return iconWidth_ + (backs_ * backIconWidth_);
}

- (void)increment {
  backs_++;
}

- (void)paintWithRAREiPlatformGraphics:(id<RAREiPlatformGraphics>)g
                             withFloat:(float)x
                             withFloat:(float)y
                             withFloat:(float)width
                             withFloat:(float)height {
  float yy = (height - backIconHeight_) / 2;
  for (int i = 0; i < backs_; i++) {
    [((id<RAREiPlatformIcon>) nil_chk(backIcon_)) paintWithRAREiPlatformGraphics:g withFloat:x withFloat:yy withFloat:width withFloat:height];
    x += backIconWidth_;
    width -= backIconWidth_;
  }
  yy = (height - iconHeight_) / 2;
  [((id<RAREiPlatformIcon>) nil_chk(icon_)) paintWithRAREiPlatformGraphics:g withFloat:x withFloat:yy withFloat:width withFloat:height];
}

- (void)setIconWithRAREiPlatformIcon:(id<RAREiPlatformIcon>)icon {
  self->icon_ = icon;
}

- (void)showPatientIconWithBoolean:(BOOL)show {
  if (show) {
    icon_ = patientIcon_;
  }
  else {
    icon_ = appIcon_;
  }
  if (icon_ == nil) {
    icon_ = appIcon_;
  }
  iconWidth_ = [((id<RAREiPlatformIcon>) nil_chk(icon_)) getIconWidth];
  iconHeight_ = [icon_ getIconHeight];
}

- (void)copyAllFieldsTo:(CCPBVUtils_BackIcon *)other {
  [super copyAllFieldsTo:other];
  other->appIcon_ = appIcon_;
  other->backIcon_ = backIcon_;
  other->backIconHeight_ = backIconHeight_;
  other->backIconWidth_ = backIconWidth_;
  other->backs_ = backs_;
  other->icon_ = icon_;
  other->iconHeight_ = iconHeight_;
  other->iconWidth_ = iconWidth_;
  other->patientIcon_ = patientIcon_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getDisabledVersion", NULL, "LRAREiPlatformIcon", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "appIcon_", NULL, 0x0, "LRAREiPlatformIcon" },
    { "patientIcon_", NULL, 0x0, "LRAREiPlatformIcon" },
    { "icon_", NULL, 0x0, "LRAREiPlatformIcon" },
    { "backIcon_", NULL, 0x0, "LRAREiPlatformIcon" },
    { "backs_", NULL, 0x0, "I" },
    { "iconHeight_", NULL, 0x0, "I" },
    { "iconWidth_", NULL, 0x0, "I" },
    { "backIconWidth_", NULL, 0x0, "I" },
    { "backIconHeight_", NULL, 0x0, "I" },
  };
  static J2ObjcClassInfo _CCPBVUtils_BackIcon = { "BackIcon", "com.sparseware.bellavista", "Utils", 0x8, 1, methods, 9, fields, 0, NULL};
  return &_CCPBVUtils_BackIcon;
}

@end
@implementation CCPBVUtils_DefaultProtocolHandler

- (void)customLoginWithCCPBVSettings_Server:(CCPBVSettings_Server *)server
                  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
}

- (void)initialize__WithCCPBVSettings_Server:(CCPBVSettings_Server *)server {
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initialize__WithCCPBVSettings_Server:", NULL, "V", 0x1, "JavaLangException" },
  };
  static J2ObjcClassInfo _CCPBVUtils_DefaultProtocolHandler = { "DefaultProtocolHandler", "com.sparseware.bellavista", "Utils", 0x8, 1, methods, 0, NULL, 0, NULL};
  return &_CCPBVUtils_DefaultProtocolHandler;
}

@end
@implementation CCPBVUtils_ErrorPanel

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
             withNSString:(NSString *)message
              withBoolean:(BOOL)debug {
  return [self initCCPBVUtils_ErrorPanelWithRAREiWidget:context withNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.text.application_error"] withNSString:message withBoolean:debug];
}

- (id)initCCPBVUtils_ErrorPanelWithRAREiWidget:(id<RAREiWidget>)context
                                  withNSString:(NSString *)title
                                  withNSString:(NSString *)message
                                   withBoolean:(BOOL)debug {
  if (self = [super initWithRAREiWidget:context withNSString:title withId:message withRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"bv.icon.alert_error"] withBoolean:YES]) {
    self->message_ = message;
    email_ = (NSString *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"support_email"], [NSString class]);
    subject_ = (NSString *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"support_email_sumject"], [NSString class]);
    self->debug_ = debug;
    [self setRightAlignButtonsWithBoolean:YES];
  }
  return self;
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
             withNSString:(NSString *)title
             withNSString:(NSString *)message
              withBoolean:(BOOL)debug {
  return [self initCCPBVUtils_ErrorPanelWithRAREiWidget:context withNSString:title withNSString:message withBoolean:debug];
}

- (int)addOtherButtonsBeforeWithRARELinearPanel:(RARELinearPanel *)buttonPanel {
  RAREPushButtonWidget *b = [RAREAlertPanel createButtonWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"Rare.action.copy"] withNSString:nil withRAREiActionListener:[[CCPBVUtils_ErrorPanel_$1 alloc] initWithCCPBVUtils_ErrorPanel:self]];
  int count = 1;
  [((RARELinearPanel *) nil_chk(buttonPanel)) addComponentWithRAREiPlatformComponent:[((RAREPushButtonWidget *) nil_chk(b)) getContainerComponent]];
  if (email_ != nil) {
    count++;
    b = [RAREAlertPanel createButtonWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.text.email"] withNSString:[self getButtonTemplateWithNSString:nil] withRAREiActionListener:[[CCPBVUtils_ErrorPanel_$2 alloc] initWithCCPBVUtils_ErrorPanel:self]];
    [buttonPanel addComponentWithRAREiPlatformComponent:[((RAREPushButtonWidget *) nil_chk(b)) getContainerComponent]];
  }
  b = [RAREAlertPanel createButtonWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.text.exit"] withNSString:[self getButtonTemplateWithNSString:nil] withRAREiActionListener:[[CCPBVUtils_ErrorPanel_$3 alloc] initWithCCPBVUtils_ErrorPanel:self]];
  yesButton_ = b;
  if (debug_) {
    count++;
    [buttonPanel addComponentWithRAREiPlatformComponent:[((RAREPushButtonWidget *) nil_chk(yesButton_)) getContainerComponent]];
    b = [RAREAlertPanel createButtonWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.text.continue"] withNSString:[self getButtonTemplateWithNSString:nil] withRAREiActionListener:[[CCPBVUtils_ErrorPanel_$4 alloc] initWithCCPBVUtils_ErrorPanel:self]];
    yesButton_ = b;
  }
  return count;
}

- (void)copyAllFieldsTo:(CCPBVUtils_ErrorPanel *)other {
  [super copyAllFieldsTo:other];
  other->debug_ = debug_;
  other->email_ = email_;
  other->message_ = message_;
  other->subject_ = subject_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addOtherButtonsBeforeWithRARELinearPanel:", NULL, "I", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "message_", NULL, 0x0, "LNSString" },
    { "email_", NULL, 0x0, "LNSString" },
    { "subject_", NULL, 0x0, "LNSString" },
    { "debug_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ErrorPanel = { "ErrorPanel", "com.sparseware.bellavista", "Utils", 0x8, 1, methods, 4, fields, 0, NULL};
  return &_CCPBVUtils_ErrorPanel;
}

@end
@implementation CCPBVUtils_ErrorPanel_$1

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) copyToClipboardWithNSString:this$0_->message_];
  [((id<RAREiPlatformComponent>) nil_chk([((RAREActionEvent *) nil_chk(e)) getComponent])) setEnabledWithBoolean:NO];
}

- (id)initWithCCPBVUtils_ErrorPanel:(CCPBVUtils_ErrorPanel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVUtils_ErrorPanel" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ErrorPanel_$1 = { "$1", "com.sparseware.bellavista", "Utils$ErrorPanel", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_ErrorPanel_$1;
}

@end
@implementation CCPBVUtils_ErrorPanel_$2

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  if (this$0_->subject_ == nil) {
    this$0_->subject_ = [RAREPlatform getResourceAsStringWithNSString:@"bv.text.bv_application_error"];
  }
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) mailToWithNSString:this$0_->email_ withNSString:this$0_->subject_ withNSString:this$0_->message_];
}

- (id)initWithCCPBVUtils_ErrorPanel:(CCPBVUtils_ErrorPanel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVUtils_ErrorPanel" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ErrorPanel_$2 = { "$2", "com.sparseware.bellavista", "Utils$ErrorPanel", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_ErrorPanel_$2;
}

@end
@implementation CCPBVUtils_ErrorPanel_$3

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [this$0_ cancel];
  [CCPBVUtils exitEx];
}

- (id)initWithCCPBVUtils_ErrorPanel:(CCPBVUtils_ErrorPanel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVUtils_ErrorPanel" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ErrorPanel_$3 = { "$3", "com.sparseware.bellavista", "Utils$ErrorPanel", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_ErrorPanel_$3;
}

@end
@implementation CCPBVUtils_ErrorPanel_$4

- (void)actionPerformedWithRAREActionEvent:(RAREActionEvent *)e {
  [this$0_ cancel];
}

- (id)initWithCCPBVUtils_ErrorPanel:(CCPBVUtils_ErrorPanel *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVUtils_ErrorPanel" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ErrorPanel_$4 = { "$4", "com.sparseware.bellavista", "Utils$ErrorPanel", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_ErrorPanel_$4;
}

@end
@implementation CCPBVUtils_LinkErrorHandler

- (id)init {
  return [super init];
}

- (JavaLangException *)getExceptionChangeWithRAREActionLink:(RAREActionLink *)link
                                      withJavaLangException:(JavaLangException *)ex {
  if ([ex isKindOfClass:[JavaNetConnectException class]]) {
    return [[CCPBVUtils_PollingConnectionRefused alloc] init];
  }
  return ex;
}

- (RAREActionLink_iErrorHandler_ActionEnum *)handleErrorWithRAREActionLink:(RAREActionLink *)link
                                                     withJavaLangException:(JavaLangException *)ex
                                                    withRAREiURLConnection:(id<RAREiURLConnection>)conn {
  if ([ex isKindOfClass:[JavaNetConnectException class]]) {
    if (([((RAREActionLink *) nil_chk(link)) getAttributes] != nil) && ([((id<JavaUtilMap>) nil_chk([link getAttributes])) getWithId:@"polling"] != nil)) {
      return [RAREActionLink_iErrorHandler_ActionEnum CHANGE_ERROR];
    }
  }
  return [RAREActionLink_iErrorHandler_ActionEnum ERROR];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getExceptionChangeWithRAREActionLink:withJavaLangException:", NULL, "LJavaLangException", 0x1, NULL },
    { "handleErrorWithRAREActionLink:withJavaLangException:withRAREiURLConnection:", NULL, "LRAREActionLink_iErrorHandler_ActionEnum", 0x1, NULL },
  };
  static J2ObjcClassInfo _CCPBVUtils_LinkErrorHandler = { "LinkErrorHandler", "com.sparseware.bellavista", "Utils", 0x8, 2, methods, 0, NULL, 0, NULL};
  return &_CCPBVUtils_LinkErrorHandler;
}

@end
@implementation CCPBVUtils_LoginManager

- (id)initWithRAREiWidget:(id<RAREiWidget>)context
           withJavaNetURL:(JavaNetURL *)url
             withNSString:(NSString *)root
 withCCPBVSettings_Server:(CCPBVSettings_Server *)server
             withNSString:(NSString *)title {
  if (self = [super init]) {
    self->contextWidget_LoginManager_ = context;
    self->url_ = url;
    self->root_ = root;
    self->server_ = server;
    self->title_ = title;
  }
  return self;
}

- (BOOL)canReselectPatient {
  BOOL ok = reselectPatient_;
  reselectPatient_ = NO;
  return ok;
}

- (id)compute {
  id result = nil;
  @try {
    RAREActionLink *l;
    id<RAREiPlatformAppContext> app = [((RAREWindowViewer *) nil_chk(window_)) getAppContext];
    if ([CCPBVUtils cardStack] && ![CCPBVUtils demo]) {
      if (url_ == nil) {
        l = [CCPBVUtils createLinkWithRAREiWidget:window_ withNSString:@"/hub/main/account/pin_login/user.json"];
      }
      else {
        l = [CCPBVUtils createLinkWithRAREiWidget:window_ withJavaNetURL:[[JavaNetURL alloc] initWithJavaNetURL:url_ withNSString:@"hub/main/account/pin_login/user.json"]];
      }
    }
    else {
      if (url_ == nil) {
        l = [CCPBVUtils createLinkWithRAREiWidget:window_ withNSString:@"/hub/main/account/login/user.json"];
      }
      else {
        l = [CCPBVUtils createLinkWithRAREiWidget:window_ withJavaNetURL:[[JavaNetURL alloc] initWithJavaNetURL:url_ withNSString:@"hub/main/account/login/user.json"]];
      }
    }
    NSString *s;
    if (![CCPBVUtils demo]) {
      if (([CCPBVUtils protocolHandler] == nil) && ([CCPBVUtils protocolHandlers] != nil)) {
        CCPBVaProtocolHandler *ph = [[CCPBVUtils protocolHandlers] getWithId:[((JavaNetURL *) nil_chk([((RAREActionLink *) nil_chk(l)) getURLWithRAREUTiURLResolver:window_])) getProtocol]];
        if (ph != nil) {
          [ph initialize__WithCCPBVSettings_Server:server_];
          (void) [CCPBVUtils setProtocolHandler:ph];
        }
      }
      if ([((CCPBVSettings_Server *) nil_chk(server_)) isRestricted]) {
        id<JavaUtilMap> map = [[JavaUtilHashMap alloc] init];
        (void) [map putWithId:@"username" withId:username_];
        (void) [map putWithId:@"password" withId:[RAREFunctions base64WithNSString:password_]];
        (void) [map putWithId:@"size" withId:[RAREUIScreen getRelativeScreenSizeName]];
        (void) [map putWithId:@"base64" withId:@"true"];
        s = [((RAREActionLink *) nil_chk(l)) sendFormDataWithRAREUTiURLResolver:contextWidget_LoginManager_ withJavaUtilMap:map];
      }
      else {
        s = [((RAREActionLink *) nil_chk(l)) getContentAsString];
      }
    }
    else {
      s = [((RAREActionLink *) nil_chk(l)) getContentAsString];
    }
    RAREUTJSONObject *user = [[RAREUTJSONObject alloc] initWithNSString:s];
    result = user;
    if ([((CCPBVSettings_Server *) nil_chk(server_)) isContextServer]) {
      if (url_ != nil) {
        [((id<RAREiPlatformAppContext>) nil_chk(app)) setContextURLWithJavaNetURL:[[JavaNetURL alloc] initWithJavaNetURL:url_ withNSString:[NSString stringWithFormat:@"%@/", [RAREUIScreen getRelativeScreenSizeName]]] withNSString:root_];
      }
    }
    if (url_ != nil) {
      s = [server_ getURL];
      if ([((NSString *) nil_chk(s)) hasSuffix:@"/"]) {
        s = [NSString stringWithFormat:@"%@hub/", s];
      }
      else {
        s = [NSString stringWithFormat:@"%@/hub/", s];
      }
      [((id<RAREiPlatformAppContext>) nil_chk(app)) addURLPrefixMappingWithNSString:@"/hub/" withNSString:s];
    }
    RAREUTJSONObject *csp = [user optJSONObjectWithNSString:@"site_parameters"];
    s = (csp == nil) ? nil : [csp optStringWithNSString:@"attributesURL" withNSString:nil];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      l = [window_ createActionLinkWithRAREiWidget:window_ withId:s];
      RAREUTJSONObject *att = [[RAREUTJSONObject alloc] initWithNSString:[((RAREActionLink *) nil_chk(l)) getContentAsString]];
      [((id<RAREiPlatformAppContext>) nil_chk([window_ getAppContext])) putDataWithJavaUtilMap:att withBoolean:YES];
    }
    else if (csp != nil) {
      [((id<RAREiPlatformAppContext>) nil_chk([window_ getAppContext])) putDataWithJavaUtilMap:csp withBoolean:NO];
    }
    s = (csp == nil) ? nil : [csp optStringWithNSString:@"resourceStringsURL" withNSString:nil];
    if ((s != nil) && ([s sequenceLength] > 0)) {
      l = [window_ createActionLinkWithRAREiWidget:window_ withId:s];
      (void) [RAREPlatform loadResourceStringsWithRAREiPlatformAppContext:app withJavaUtilMap:[((id<RAREiPlatformAppContext>) nil_chk(app)) getResourceStrings] withRAREActionLink:l withBoolean:NO];
    }
    (void) [CCPBVUtils setReloginConfig:(RARESPOTViewer *) check_class_cast([window_ createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithRAREUTiURLResolver:window_ withNSString:@"relogin.rml"]], [RARESPOTViewer class])];
    (void) [CCPBVUtils setGenericContainerCfg:(RARESPOTGridPane *) check_class_cast([window_ createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithRAREUTiURLResolver:window_ withNSString:@"/generic_container.rml"]], [RARESPOTGridPane class])];
    if ([CCPBVUtils cardStack]) {
      RARESPOTViewer *cfg = (RARESPOTViewer *) check_class_cast([window_ createConfigurationObjectWithRAREActionLink:[[RAREActionLink alloc] initWithRAREUTiURLResolver:window_ withNSString:@"infobar.rml"]], [RARESPOTViewer class]);
      id<JavaLangRunnable> r = [[CCPBVUtils_LoginManager_$1 alloc] initWithCCPBVUtils_LoginManager:self withRARESPOTViewer:cfg];
      [RAREPlatform invokeLaterWithJavaLangRunnable:r];
    }
    @try {
      l = [[RAREActionLink alloc] initWithNSString:@"/data/stylesheet.css"];
      (void) [CCPBVUtils setStyleSheet:[l getContentAsString]];
    }
    @catch (JavaLangException *ignore) {
    }
    [RAREActionLink setGlobalErrorHandlerWithRAREActionLink_iErrorHandler:[[CCPBVUtils_LinkErrorHandler alloc] init]];
  }
  @catch (JavaLangException *e) {
    result = e;
  }
  password_ = nil;
  if ([CCPBVUtils protocolHandler] != nil) {
    [RAREPlatform setMaxBackgroundThreadCountWithInt:5];
  }
  return result;
}

- (void)dispose {
}

- (void)finishWithId:(id)result {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  if ([((id<RAREiWidget>) nil_chk(contextWidget_LoginManager_)) isDisposed]) {
    [((RAREWindowViewer *) nil_chk(w)) hideWaitCursorWithBoolean:YES];
    return;
  }
  if ([result isKindOfClass:[JavaLangException class]]) {
    [((RAREWindowViewer *) nil_chk(w)) hideWaitCursorWithBoolean:YES];
    if ([result isKindOfClass:[RAREHTTPException class]]) {
      RAREHTTPException *he = (RAREHTTPException *) check_class_cast(result, [RAREHTTPException class]);
      if ([((RAREHTTPException *) nil_chk(he)) getStatusCode] == 401) {
        [w alertWithId:[w getStringWithNSString:@"bv.text.invalidCredentials"]];
        id<RAREiWidget> ww = [((id<RAREiFormViewer>) nil_chk([contextWidget_LoginManager_ getFormViewer])) getWidgetWithNSString:@"password"];
        if (ww != nil) {
          [ww requestFocus];
        }
      }
      else {
        NSString *s = [he getMessageBody];
        if ([((NSString *) nil_chk(s)) sequenceLength] == 0) {
          s = [RAREApplicationException getMessageExWithJavaLangThrowable:he];
        }
        [w errorWithId:s];
      }
      return;
    }
    else if ([result isKindOfClass:[JavaNetSocketException class]]) {
      [w errorWithId:[RAREApplicationException getMessageExWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])]];
      return;
    }
    [w errorWithId:result];
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
    return;
  }
  @try {
    id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
    RAREUTJSONObject *user = (RAREUTJSONObject *) check_class_cast(result, [RAREUTJSONObject class]);
    (void) [((id<RAREiPlatformAppContext>) nil_chk(app)) putDataWithId:@"user" withId:user];
    if (username_ == nil || [username_ sequenceLength] == 0) {
      username_ = [((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:@"username" withNSString:@"unknown"];
    }
    (void) [CCPBVUtils setPreferences:[((CCPBVSettings *) nil_chk([CCPBVUtils settingsHandler])) getAppPreferencesWithNSString:username_]];
    (void) [app putDataWithId:@"username" withId:username_];
    (void) [app putDataWithId:@"userDisplayName" withId:[((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:@"name" withNSString:username_]];
    RAREUIAction *a = [app getActionWithNSString:@"bv.action.preferences"];
    if (a != nil) {
      [a setEnabledWithBoolean:YES];
    }
    a = [app getActionWithNSString:@"bv.action.help"];
    if (a != nil) {
      [a setEnabledWithBoolean:YES];
    }
    if ((title_ != nil) && ([title_ sequenceLength] > 0)) {
      (void) [((id<JavaUtilMap>) nil_chk([((RAREWindowViewer *) nil_chk(w)) getStrings])) putWithId:@"bv.text.welcome" withId:title_];
    }
    if ([CCPBVUtils isDemo]) {
    }
    if ([CCPBVUtils applicationLock] != nil) {
      (void) [CCPBVUtils setActionPath:[CCPBVUtils applicationLock]->actionPath_];
      (void) [CCPBVUtils setApplicationLock:nil];
    }
    else {
      (void) [CCPBVUtils setCollectionManager:[[CCPBVCollectionManager alloc] init]];
      RAREUTJSONObject *info = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"careTeamInfo"], [RAREUTJSONObject class]);
      NSString *cls = [((RAREUTJSONObject *) nil_chk(info)) optStringWithNSString:@"communicationHandlerClass" withNSString:nil];
      if ((cls != nil) && ([cls sequenceLength] > 0)) {
        cls = [CCPBVUtils resolveClassNameWithNSString:cls withNSString:@"external"];
        (void) [CCPBVUtils setCommHandler:(CCPBVaCommunicationHandler *) check_class_cast([RAREPlatform createObjectWithNSString:cls], [CCPBVaCommunicationHandler class])];
        if ([CCPBVUtils commHandler] == nil) {
          [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Unable to load communication class:%@", cls]];
        }
      }
      if (![CCPBVUtils cardStack]) {
        [[CCPBVUtils collectionManager] startPolling];
      }
    }
    if ([RAREUIScreen isSmallScreen]) {
      [CCPBVCardStackUtils setupEnvironmentWithRAREWindowViewer:w];
    }
    [CCPBVOrders setupEnvironmentWithRAREWindowViewer:w];
    if (![((CCPBVSettings_Server *) nil_chk(server_)) canChangePatient]) {
      RAREActionBar *ab = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getActionBar];
      [((RAREActionBar *) nil_chk(ab)) removeWithNSString:@"bv.action.change_patient"];
    }
    if ([server_ hasCustomLogin]) {
      RAREActionBar *ab = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getActionBar];
      [((RAREActionBar *) nil_chk(ab)) removeWithNSString:@"bv.action.lock"];
    }
    if (![CCPBVOrders hasOrderEntrySupport]) {
      RAREActionBar *ab = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getActionBar];
      [((RAREActionBar *) nil_chk(ab)) removeWithNSString:@"bv.action.new_orders"];
    }
    (void) [CCPBVUtils setDataServer:server_];
    [((RAREWindowViewer *) nil_chk(w)) hideWaitCursorWithBoolean:YES];
    [CCPBVPatientSelect changePatientWithRAREiWidget:w withCCPBVActionPath:[CCPBVUtils actionPath]];
  }
  @catch (JavaLangException *ex) {
    [((RAREWindowViewer *) nil_chk(w)) hideWaitCursorWithBoolean:YES];
    [CCPBVUtils handleErrorWithJavaLangThrowable:ex];
  }
  contextWidget_LoginManager_ = nil;
}

- (void)loginWithNSString:(NSString *)username
             withNSString:(NSString *)password {
  self->username_ = username;
  self->password_ = password;
  loggingOff_ = NO;
  reloggingIn_ = NO;
  reselectPatient_ = NO;
  [CCPBVUtils toggleActionsWithBoolean:NO];
  [self start];
}

- (void)logout {
  loggingOff_ = YES;
  [RAREPlatform closeOpenConnectionsWithBoolean:YES];
  if (![CCPBVUtils isDemo] && ![CCPBVUtils isApplicationLocked]) {
    @try {
      RAREActionLink *l = [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) createActionLinkWithId:@"/hub/main/account/logout"];
      JavaLangThread *t = [[JavaLangThread alloc] initWithJavaLangRunnable:[[CCPBVUtils_LoginManager_$2 alloc] initWithRAREActionLink:l]];
      [t setDaemonWithBoolean:YES];
      [t start];
      [t joinWithLong:1000];
    }
    @catch (JavaLangException *ex) {
    }
  }
}

- (void)reloginWithRAREiWidget:(id<RAREiWidget>)context
                  withNSString:(NSString *)password {
  contextWidget_LoginManager_ = context;
  self->password_ = password;
  loggingOff_ = NO;
  reloggingIn_ = YES;
  [self start];
}

- (void)start {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [w showProgressPopupWithJavaLangCharSequence:[((RAREWindowViewer *) nil_chk(w)) getStringWithNSString:@"bv.text.authenticating"]];
  (void) [w spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (void)copyAllFieldsTo:(CCPBVUtils_LoginManager *)other {
  [super copyAllFieldsTo:other];
  other->contextWidget_LoginManager_ = contextWidget_LoginManager_;
  other->loggingOff_ = loggingOff_;
  other->password_ = password_;
  other->reloggingIn_ = reloggingIn_;
  other->reselectPatient_ = reselectPatient_;
  other->root_ = root_;
  other->server_ = server_;
  other->title_ = title_;
  other->url_ = url_;
  other->username_ = username_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "canReselectPatient", NULL, "Z", 0x1, NULL },
    { "compute", NULL, "LNSObject", 0x1, NULL },
    { "start", NULL, "V", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "root_", NULL, 0x0, "LNSString" },
    { "title_", NULL, 0x0, "LNSString" },
    { "server_", NULL, 0x0, "LCCPBVSettings_Server" },
    { "username_", NULL, 0x0, "LNSString" },
    { "url_", NULL, 0x0, "LJavaNetURL" },
    { "loggingOff_", NULL, 0x0, "Z" },
    { "reloggingIn_", NULL, 0x0, "Z" },
    { "contextWidget_LoginManager_", "contextWidget", 0x0, "LRAREiWidget" },
    { "password_", NULL, 0x0, "LNSString" },
    { "reselectPatient_", NULL, 0x0, "Z" },
  };
  static J2ObjcClassInfo _CCPBVUtils_LoginManager = { "LoginManager", "com.sparseware.bellavista", "Utils", 0x8, 3, methods, 10, fields, 0, NULL};
  return &_CCPBVUtils_LoginManager;
}

@end
@implementation CCPBVUtils_LoginManager_$1

- (void)run {
  (void) [CCPBVUtils setTitleWidget:(id<RAREiContainer>) check_protocol_cast([((RAREWindowViewer *) nil_chk(this$0_->window_)) createWidgetWithRARESPOTWidget:val$cfg_], @protocol(RAREiContainer))];
}

- (id)initWithCCPBVUtils_LoginManager:(CCPBVUtils_LoginManager *)outer$
                   withRARESPOTViewer:(RARESPOTViewer *)capture$0 {
  this$0_ = outer$;
  val$cfg_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVUtils_LoginManager" },
    { "val$cfg_", NULL, 0x1012, "LRARESPOTViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_LoginManager_$1 = { "$1", "com.sparseware.bellavista", "Utils$LoginManager", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVUtils_LoginManager_$1;
}

@end
@implementation CCPBVUtils_LoginManager_$2

- (void)run {
  @try {
    [((RAREActionLink *) nil_chk(val$l_)) hit];
  }
  @catch (JavaLangException *ex) {
    [RAREPlatform ignoreExceptionWithNSString:@"logout" withJavaLangThrowable:ex];
  }
}

- (id)initWithRAREActionLink:(RAREActionLink *)capture$0 {
  val$l_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$l_", NULL, 0x1012, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _CCPBVUtils_LoginManager_$2 = { "$2", "com.sparseware.bellavista", "Utils$LoginManager", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_LoginManager_$2;
}

@end
@implementation CCPBVUtils_PollingConnectionRefused

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVUtils_PollingConnectionRefused = { "PollingConnectionRefused", "com.sparseware.bellavista", "Utils", 0x8, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVUtils_PollingConnectionRefused;
}

@end
@implementation CCPBVUtils_ShowPickListCallback

- (id)initWithNSString:(NSString *)title
    withRAREActionLink:(RAREActionLink *)dataUrl
      withJavaUtilList:(id<JavaUtilList>)rows
           withBoolean:(BOOL)supportListDblClick
withRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback
           withBoolean:(BOOL)onUiThread {
  if (self = [super init]) {
    self->title_ = title;
    self->dataUrl_ = dataUrl;
    self->rows_ = rows;
    self->supportListDblClick_ = supportListDblClick;
    self->callback_ = [[RARECallbackFunctionCallback alloc] initWithRAREiFunctionCallback:callback withBoolean:onUiThread];
  }
  return self;
}

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [self hideWaitCursor];
  @try {
    if (canceled) {
      [((id<RAREiFunctionCallback>) nil_chk(callback_)) finishedWithBoolean:canceled withId:returnValue];
      if ([returnValue isKindOfClass:[JavaLangException class]]) {
        [((RAREWindowViewer *) nil_chk(window_)) handleExceptionWithJavaLangThrowable:(JavaLangException *) check_class_cast(returnValue, [JavaLangException class])];
      }
      return;
    }
    id<RAREiContainer> v = (id<RAREiContainer>) check_protocol_cast(returnValue, @protocol(RAREiContainer));
    [((id<RAREiContainer>) nil_chk(v)) setAttributeWithNSString:@"dlgCallback" withId:callback_];
    [((id<RAREiWidget>) nil_chk([v getWidgetWithNSString:@"titleLabel"])) setValueWithId:title_];
    RAREaWidget *list = (RAREaWidget *) check_class_cast([v getWidgetWithNSString:@"list"], [RAREaWidget class]);
    if (rows_ != nil) {
      [((RAREaWidget *) nil_chk(list)) setAllWithJavaUtilCollection:rows_];
    }
    else {
      (void) [((RAREaWidget *) nil_chk(list)) setDataLinkWithRAREActionLink:dataUrl_ withBoolean:YES];
    }
    if (supportListDblClick_) {
      [((RAREaWidget *) nil_chk(list)) setEventHandlerWithNSString:@"onDblClick" withId:@"class:PickList#onOkAction" withBoolean:YES];
    }
    id<JavaUtilMap> map = [[JavaUtilHashMap alloc] init];
    (void) [map putWithId:@"decorated" withId:[JavaLangBoolean valueOfWithBoolean:NO]];
    (void) [map putWithId:@"opaque" withId:[JavaLangBoolean valueOfWithBoolean:NO]];
    (void) [v showAsDialogWithJavaUtilMap:map];
  }
  @finally {
    callback_ = nil;
    rows_ = nil;
    dataUrl_ = nil;
  }
}

- (void)copyAllFieldsTo:(CCPBVUtils_ShowPickListCallback *)other {
  [super copyAllFieldsTo:other];
  other->callback_ = callback_;
  other->dataUrl_ = dataUrl_;
  other->rows_ = rows_;
  other->supportListDblClick_ = supportListDblClick_;
  other->title_ = title_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "callback_", NULL, 0x0, "LRAREiFunctionCallback" },
    { "dataUrl_", NULL, 0x0, "LRAREActionLink" },
    { "rows_", NULL, 0x0, "LJavaUtilList" },
    { "supportListDblClick_", NULL, 0x0, "Z" },
    { "title_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVUtils_ShowPickListCallback = { "ShowPickListCallback", "com.sparseware.bellavista", "Utils", 0x8, 0, NULL, 5, fields, 0, NULL};
  return &_CCPBVUtils_ShowPickListCallback;
}

@end
@implementation CCPBVUtils_$1

- (void)run {
  [CCPBVUtils popViewerStack];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVUtils_$1 = { "$1", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVUtils_$1;
}

@end
@implementation CCPBVUtils_$2

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [CCPBVUtils exitEx];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVUtils_$2 = { "$2", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVUtils_$2;
}

@end
@implementation CCPBVUtils_$3

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideProgressPopup];
  @try {
    if (canceled || ([returnValue isKindOfClass:[JavaLangThrowable class]])) {
      [((CCPBVUtils_ApplicationLock *) nil_chk([CCPBVUtils applicationLock])) disposeViewer];
    }
    else {
      [CCPBVUtils toggleActionsWithBoolean:YES];
      [CCPBVUtils handleStatusObjectWithRAREUTJSONObject:(RAREUTJSONObject *) check_class_cast(((RAREUTObjectHolder *) nil_chk(returnValue))->value_, [RAREUTJSONObject class])];
      [((CCPBVUtils_ApplicationLock *) nil_chk([CCPBVUtils applicationLock])) restoreViewer];
      [CCPBVUtils updateActionBar];
      (void) [CCPBVUtils setApplicationLock:nil];
    }
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    [CCPBVUtils exitEx];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$3 = { "$3", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_$3;
}

@end
@implementation CCPBVUtils_$4

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (canceled || (returnValue == nil)) {
    return;
  }
  if ([returnValue isKindOfClass:[JavaLangException class]]) {
    [((RAREWindowViewer *) nil_chk(val$w_)) handleExceptionWithJavaLangThrowable:(JavaLangException *) check_class_cast(returnValue, [JavaLangException class])];
  }
  if ([((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
    [CCPBVUtils exitEx];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$4 = { "$4", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_$4;
}

@end
@implementation CCPBVUtils_$5

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
    [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVUtils_$5_$1 alloc] init]];
  }
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVUtils_$5 = { "$5", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVUtils_$5;
}

@end
@implementation CCPBVUtils_$5_$1

- (void)run {
  [CCPBVUtils exitEx];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcClassInfo _CCPBVUtils_$5_$1 = { "$1", "com.sparseware.bellavista", "Utils$$5", 0x8000, 0, NULL, 0, NULL, 0, NULL};
  return &_CCPBVUtils_$5_$1;
}

@end
@implementation CCPBVUtils_$6

- (void)run {
  if ([CCPBVUtils applicationLock] != nil) {
    return;
  }
  if ([val$e_ isKindOfClass:[CCPBVMessageException class]] && ![((CCPBVMessageException *) check_class_cast(val$e_, [CCPBVMessageException class])) isFatal]) {
    [((RAREWindowViewer *) nil_chk(val$w_)) alertWithId:[((CCPBVMessageException *) check_class_cast(val$e_, [CCPBVMessageException class])) getMessage]];
    return;
  }
  if ([val$e_ isKindOfClass:[CCPBVUtils_PollingConnectionRefused class]]) {
    [CCPBVUtils lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:[CCPBVUtils_ApplicationLockTypeEnum UNAVAILABLE] withBoolean:YES];
    return;
  }
  if ([val$e_ isKindOfClass:[JavaNetConnectException class]]) {
    [CCPBVUtils lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:[CCPBVUtils_ApplicationLockTypeEnum UNAVAILABLE] withBoolean:YES];
    [val$w_ alertWithId:[((RAREWindowViewer *) nil_chk(val$w_)) getStringWithNSString:@"bv.text.connection_refused"]];
    return;
  }
  if ([val$e_ isKindOfClass:[RAREHTTPException class]]) {
    NSString *msg;
    RAREHTTPException *he = (RAREHTTPException *) check_class_cast(val$e_, [RAREHTTPException class]);
    int code = [((RAREHTTPException *) nil_chk(he)) getStatusCode];
    switch (code) {
      case 401:
      case 504:
      if ([CCPBVUtils getUserID] == nil) {
        break;
      }
      [CCPBVUtils lockApplicationWithBoolean:YES];
      return;
      case 503:
      [CCPBVUtils lockApplicationWithCCPBVUtils_ApplicationLockTypeEnum:[CCPBVUtils_ApplicationLockTypeEnum UNAVAILABLE] withBoolean:YES];
      return;
      case 403:
      [CCPBVUtils exitEx];
      return;
      case 303:
      msg = [he getMessageBody];
      if ([((NSString *) nil_chk(msg)) sequenceLength] > 0) {
        [((RAREWindowViewer *) nil_chk(val$w_)) alertWithId:msg];
        return;
      }
      return;
      case 420:
      msg = [he getMessageBody];
      if ([((NSString *) nil_chk(msg)) sequenceLength] > 0) {
        CCPBVUtils_ErrorPanel *p = [[CCPBVUtils_ErrorPanel alloc] initWithRAREiWidget:[RAREPlatform getWindowViewer] withNSString:[he getStatus] withNSString:msg withBoolean:YES];
        [p showDialogWithRAREiFunctionCallback:nil];
        return;
      }
      return;
      case 409:
      break;
    }
  }
  [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:val$e_];
  BOOL debug = [CCPBVUtils demo];
  if (([CCPBVUtils dataServer] != nil) && [[CCPBVUtils dataServer] optBooleanWithNSString:@"debug"]) {
    debug = YES;
  }
  RAREErrorInformation *ei = [[RAREErrorInformation alloc] initWithJavaLangThrowable:val$e_];
  NSString *msg = [ei toAlertPanelString];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  CCPBVUtils_ErrorPanel *p = [[CCPBVUtils_ErrorPanel alloc] initWithRAREiWidget:w withNSString:msg withBoolean:debug];
  [p showDialogWithRAREiFunctionCallback:nil];
}

- (id)initWithJavaLangThrowable:(JavaLangThrowable *)capture$0
           withRAREWindowViewer:(RAREWindowViewer *)capture$1 {
  val$e_ = capture$0;
  val$w_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$e_", NULL, 0x1012, "LJavaLangThrowable" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$6 = { "$6", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVUtils_$6;
}

@end
@implementation CCPBVUtils_$7

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:val$canceled_ withId:val$returnValue_];
}

- (id)initWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$0
                        withBoolean:(BOOL)capture$1
                             withId:(id)capture$2 {
  val$cb_ = capture$0;
  val$canceled_ = capture$1;
  val$returnValue_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
    { "val$canceled_", NULL, 0x1012, "Z" },
    { "val$returnValue_", NULL, 0x1012, "LNSObject" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$7 = { "$7", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVUtils_$7;
}

@end
@implementation CCPBVUtils_$8

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    [CCPBVUtils pushWorkspaceViewerWithRAREiViewer:(id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer)) withBoolean:val$disposable_ withJavaLangRunnable:val$popRunner_];
  }
}

- (id)initWithBoolean:(BOOL)capture$0
 withJavaLangRunnable:(id<JavaLangRunnable>)capture$1 {
  val$disposable_ = capture$0;
  val$popRunner_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$disposable_", NULL, 0x1012, "Z" },
    { "val$popRunner_", NULL, 0x1012, "LJavaLangRunnable" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$8 = { "$8", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVUtils_$8;
}

@end
@implementation CCPBVUtils_$9

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [CCPBVUtils clearViewerStack];
  if (!canceled) {
    [((CCPBVUtils_LoginManager *) nil_chk([CCPBVUtils loginManager])) reloginWithRAREiWidget:val$context_ withNSString:nil];
  }
  else if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
}

- (id)initWithRAREiWidget:(id<RAREiWidget>)capture$0 {
  val$context_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$context_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$9 = { "$9", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_$9;
}

@end
@implementation CCPBVUtils_$10

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (![((RAREStackPaneViewer *) nil_chk(val$sp_)) isDisposed]) {
    int n = 1 - [val$sp_ getActiveViewerIndex];
    id<RAREiViewer> v = [val$sp_ removeViewerWithInt:n];
    if (v != nil) {
      [v dispose];
    }
  }
}

- (id)initWithRAREStackPaneViewer:(RAREStackPaneViewer *)capture$0 {
  val$sp_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$sp_", NULL, 0x1012, "LRAREStackPaneViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$10 = { "$10", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_$10;
}

@end
@implementation CCPBVUtils_$11

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else if (!canceled) {
    [CCPBVUtils showDialogWithRAREiViewer:(id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer)) withBoolean:val$decorated_ withBoolean:val$opaque_];
  }
}

- (id)initWithBoolean:(BOOL)capture$0
          withBoolean:(BOOL)capture$1 {
  val$decorated_ = capture$0;
  val$opaque_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$decorated_", NULL, 0x1012, "Z" },
    { "val$opaque_", NULL, 0x1012, "Z" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$11 = { "$11", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVUtils_$11;
}

@end
@implementation CCPBVUtils_$12

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if ([returnValue isKindOfClass:[JavaLangException class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  else {
    [CCPBVUtils toggleActionsWithBoolean:YES];
    id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer));
    [((RAREWindowViewer *) nil_chk(val$w_)) activateViewerWithRAREiViewer:v withNSString:[RAREiTarget TARGET_WORKSPACE]];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$12 = { "$12", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_$12;
}

@end
@implementation CCPBVUtils_$13

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [CCPBVUtils clearViewerStack];
  if (!canceled) {
    [((CCPBVUtils_LoginManager *) nil_chk([CCPBVUtils loginManager])) loginWithNSString:nil withNSString:nil];
  }
  else if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursorWithBoolean:YES];
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
}

- (id)initWithRAREWindowViewer:(RAREWindowViewer *)capture$0 {
  val$w_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVUtils_$13 = { "$13", "com.sparseware.bellavista", "Utils", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVUtils_$13;
}

@end
