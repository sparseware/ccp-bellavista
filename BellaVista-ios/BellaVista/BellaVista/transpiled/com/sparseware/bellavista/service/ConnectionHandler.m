//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/service/ConnectionHandler.java
//
//  Created by decoteaud on 2/17/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/net/JavaURLConnection.h"
#include "com/appnativa/rare/net/iURLConnection.h"
#include "com/appnativa/util/io/BufferedReaderEx.h"
#include "com/sparseware/bellavista/service/ConnectionHandler.h"
#include "com/sparseware/bellavista/service/aHttpURLConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"

@implementation CCPBVConnectionHandler

- (id)initWithNSStringArray:(IOSObjectArray *)protocols {
  if (self = [super init]) {
    self->protocols_ = protocols;
  }
  return self;
}

- (id<RAREiURLConnection>)openConnectionWithJavaNetURL:(JavaNetURL *)url
                                          withNSString:(NSString *)mimeType {
  NSString *protocol = [((JavaNetURL *) nil_chk(url)) getProtocol];
  {
    IOSObjectArray *a__ = protocols_;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *s = (*b__++);
      if ([((NSString *) nil_chk(s)) isEqual:protocol]) {
        return [[CCPBVConnectionHandler_JavaURLConnectionEx alloc] initWithJavaNetURLConnection:[url openConnection] withNSString:nil withNSString:mimeType];
      }
    }
  }
  return nil;
}

- (void)copyAllFieldsTo:(CCPBVConnectionHandler *)other {
  [super copyAllFieldsTo:other];
  other->protocols_ = protocols_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "openConnectionWithJavaNetURL:withNSString:", NULL, "LRAREiURLConnection", 0x1, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "protocols_", NULL, 0x0, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _CCPBVConnectionHandler = { "ConnectionHandler", "com.sparseware.bellavista.service", NULL, 0x1, 1, methods, 1, fields, 0, NULL};
  return &_CCPBVConnectionHandler;
}

@end
@implementation CCPBVConnectionHandler_JavaURLConnectionEx

- (id)initWithJavaNetURLConnection:(JavaNetURLConnection *)conn {
  return [super initWithJavaNetURLConnection:conn];
}

- (id)initWithJavaNetURLConnection:(JavaNetURLConnection *)conn
                      withNSString:(NSString *)userInfo {
  return [super initWithJavaNetURLConnection:conn withNSString:userInfo];
}

- (id)initWithJavaNetURLConnection:(JavaNetURLConnection *)conn
                      withNSString:(NSString *)userInfo
                      withNSString:(NSString *)mimeType {
  return [super initWithJavaNetURLConnection:conn withNSString:userInfo withNSString:mimeType];
}

- (JavaIoReader *)getReader {
  [self connectAndCheckForError];
  if ([aConnection_ isKindOfClass:[CCPBVaHttpURLConnection class]]) {
    return [((CCPBVaHttpURLConnection *) check_class_cast(aConnection_, [CCPBVaHttpURLConnection class])) getContentReader];
  }
  int n = [self getContentLength];
  if ((n > 0) && (n < 8192)) {
    return [[RAREUTBufferedReaderEx alloc] initWithJavaIoReader:[[JavaIoInputStreamReader alloc] initWithJavaIoInputStream:[((JavaNetURLConnection *) nil_chk(aConnection_)) getInputStream] withNSString:[self getCharset]] withInt:n];
  }
  return [[RAREUTBufferedReaderEx alloc] initWithJavaIoReader:[[JavaIoInputStreamReader alloc] initWithJavaIoInputStream:[((JavaNetURLConnection *) nil_chk(aConnection_)) getInputStream] withNSString:[self getCharset]] withInt:(n > 0) ? 8192 : 4096];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getReader", NULL, "LJavaIoReader", 0x1, "JavaIoIOException" },
  };
  static J2ObjcClassInfo _CCPBVConnectionHandler_JavaURLConnectionEx = { "JavaURLConnectionEx", "com.sparseware.bellavista.service", "ConnectionHandler", 0x8, 1, methods, 0, NULL, 0, NULL};
  return &_CCPBVConnectionHandler_JavaURLConnectionEx;
}

@end
