//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/oe/FormsManager.java
//
//  Created by decoteaud on 2/17/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/spot/CheckBox.h"
#include "com/appnativa/rare/spot/ComboBox.h"
#include "com/appnativa/rare/spot/DateChooser.h"
#include "com/appnativa/rare/spot/EmptyText.h"
#include "com/appnativa/rare/spot/Form.h"
#include "com/appnativa/rare/spot/Label.h"
#include "com/appnativa/rare/spot/Line.h"
#include "com/appnativa/rare/spot/ListBox.h"
#include "com/appnativa/rare/spot/PasswordField.h"
#include "com/appnativa/rare/spot/Rectangle.h"
#include "com/appnativa/rare/spot/ScrollPane.h"
#include "com/appnativa/rare/spot/TextArea.h"
#include "com/appnativa/rare/spot/TextField.h"
#include "com/appnativa/rare/spot/TimeSpinner.h"
#include "com/appnativa/rare/spot/Widget.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIFont.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/border/UIEmptyBorder.h"
#include "com/appnativa/rare/ui/iListHandler.h"
#include "com/appnativa/rare/ui/iPlatformBorder.h"
#include "com/appnativa/rare/viewer/FormViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/widget/CheckBoxWidget.h"
#include "com/appnativa/rare/widget/ComboBoxWidget.h"
#include "com/appnativa/rare/widget/DateChooserWidget.h"
#include "com/appnativa/rare/widget/aSpinnerWidget.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTAny.h"
#include "com/appnativa/spot/SPOTBoolean.h"
#include "com/appnativa/spot/SPOTDateTime.h"
#include "com/appnativa/spot/SPOTInteger.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/spot/SPOTSet.h"
#include "com/appnativa/spot/SPOTTime.h"
#include "com/appnativa/spot/iSPOTElement.h"
#include "com/appnativa/util/MutableInteger.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/StringCache.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/OrderManager.h"
#include "com/sparseware/bellavista/Orders.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/oe/FieldValue.h"
#include "com/sparseware/bellavista/oe/FormsManager.h"
#include "com/sparseware/bellavista/oe/Order.h"
#include "com/sparseware/bellavista/oe/OrderEntry.h"
#include "com/sparseware/bellavista/oe/OrderFields.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Runnable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/text/NumberFormat.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@implementation CCPBVFormsManager

static NSString * CCPBVFormsManager_decimalFormat_ = @"#.################";
static int CCPBVFormsManager_decimalFormatPosition_;
static RARESPOTLabel * CCPBVFormsManager_promptLabel_;
static NSString * CCPBVFormsManager_FOCUS_GAINED_EVENT_;
static NSString * CCPBVFormsManager_FOCUS_LOST_EVENT_;
static NSString * CCPBVFormsManager_VISIBILITY_TOGGLE_ACTION_;
static NSString * CCPBVFormsManager_VALUE_CHANGED_;
static NSString * CCPBVFormsManager_VALUE_ACTION_;
static id<RAREiPlatformBorder> CCPBVFormsManager_popupPaddingBorder_;
static BOOL CCPBVFormsManager_addColonToPrompt_;
static id<RAREiWidget> CCPBVFormsManager_updatingWidget_;

+ (NSString *)decimalFormat {
  return CCPBVFormsManager_decimalFormat_;
}

+ (void)setDecimalFormat:(NSString *)decimalFormat {
  CCPBVFormsManager_decimalFormat_ = decimalFormat;
}

+ (int)decimalFormatPosition {
  return CCPBVFormsManager_decimalFormatPosition_;
}

+ (int *)decimalFormatPositionRef {
  return &CCPBVFormsManager_decimalFormatPosition_;
}

+ (RARESPOTLabel *)promptLabel {
  return CCPBVFormsManager_promptLabel_;
}

+ (void)setPromptLabel:(RARESPOTLabel *)promptLabel {
  CCPBVFormsManager_promptLabel_ = promptLabel;
}

+ (NSString *)FOCUS_GAINED_EVENT {
  return CCPBVFormsManager_FOCUS_GAINED_EVENT_;
}

+ (NSString *)FOCUS_LOST_EVENT {
  return CCPBVFormsManager_FOCUS_LOST_EVENT_;
}

+ (NSString *)VISIBILITY_TOGGLE_ACTION {
  return CCPBVFormsManager_VISIBILITY_TOGGLE_ACTION_;
}

+ (NSString *)VALUE_CHANGED {
  return CCPBVFormsManager_VALUE_CHANGED_;
}

+ (NSString *)VALUE_ACTION {
  return CCPBVFormsManager_VALUE_ACTION_;
}

+ (id<RAREiPlatformBorder>)popupPaddingBorder {
  return CCPBVFormsManager_popupPaddingBorder_;
}

+ (void)setPopupPaddingBorder:(id<RAREiPlatformBorder>)popupPaddingBorder {
  CCPBVFormsManager_popupPaddingBorder_ = popupPaddingBorder;
}

+ (BOOL)addColonToPrompt {
  return CCPBVFormsManager_addColonToPrompt_;
}

+ (BOOL *)addColonToPromptRef {
  return &CCPBVFormsManager_addColonToPrompt_;
}

+ (id<RAREiWidget>)updatingWidget {
  return CCPBVFormsManager_updatingWidget_;
}

+ (void)setUpdatingWidget:(id<RAREiWidget>)updatingWidget {
  CCPBVFormsManager_updatingWidget_ = updatingWidget;
}

+ (void)handleTogglingItemSelectedWithRAREiWidget:(id<RAREiWidget>)widget {
  NSString *ld;
  if ([(id) widget conformsToProtocol: @protocol(RAREiListHandler)]) {
    ld = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([((id<RAREiListHandler>) check_protocol_cast(widget, @protocol(RAREiListHandler))) getSelectedItem])) getLinkedData], [NSString class]);
  }
  else {
    ld = [((RARECheckBoxWidget *) check_class_cast(widget, [RARECheckBoxWidget class])) isChecked] ? @"true" : @"false";
  }
  CCPBVFieldValue *fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(widget)) getLinkedData], [CCPBVFieldValue class]);
  RAREUTJSONObject *field = ((CCPBVFieldValue *) nil_chk(fv))->field_;
  RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(field)) getJSONObjectWithNSString:@"toggle"];
  NSString *id_ = [((RAREUTJSONObject *) nil_chk(o)) getStringWithNSString:@"fieldID"];
  id<RAREiContainer> c = [widget getFormViewer];
  NSString *tt = [o getStringWithNSString:@"type"];
  if ([((NSString *) nil_chk(tt)) isEqual:@"enabled"]) {
    id<RAREiWidget> tw = [((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:id_];
    if (tw != nil) {
      [tw setEnabledWithBoolean:[((NSString *) nil_chk(ld)) isEqual:[o getStringWithNSString:@"itemLinkedData"]]];
    }
  }
  else if ([tt isEqual:@"visible"]) {
    id<RAREiWidget> tw = [((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:id_];
    if (tw != nil) {
      [tw setVisibleWithBoolean:[((NSString *) nil_chk(ld)) isEqual:[o getStringWithNSString:@"itemLinkedData"]]];
      [((RAREWindowViewer *) nil_chk([widget getWindow])) pack];
    }
  }
  else if ([tt isEqual:@"popup"] && [((NSString *) nil_chk(ld)) isEqual:[o getStringWithNSString:@"itemLinkedData"]]) {
    CCPBVFieldValue *cfv = (CCPBVFieldValue *) check_class_cast([((id<RAREiContainer>) nil_chk(c)) getLinkedData], [CCPBVFieldValue class]);
    RAREUTJSONObject *info = ((CCPBVFieldValue *) nil_chk(cfv))->field_;
    id<JavaUtilList> fields = (id<JavaUtilList>) check_protocol_cast([((RAREUTJSONObject *) nil_chk(info)) getJSONArrayWithNSString:@"fields"], @protocol(JavaUtilList));
    RAREUTJSONObject *gfield = fv->groupField_;
    if ((gfield == nil) && (fields != nil)) {
      for (RAREUTJSONObject * __strong f in fields) {
        if ([((NSString *) nil_chk(id_)) isEqual:[((RAREUTJSONObject *) nil_chk(f)) optWithNSString:[CCPBVOrderFields ID]]]) {
          gfield = f;
          fv->groupField_ = f;
          break;
        }
      }
    }
    if (gfield != nil) {
      RAREWindowViewer *w = [RAREPlatform getWindowViewer];
      id<JavaUtilMap> pvalues = [CCPBVFormsManager resolveValuesMapWithRAREiWidget:c withCCPBVFieldValue:cfv];
      id_ = [gfield getStringWithNSString:[CCPBVOrderFields ID]];
      id<JavaUtilMap> values = (id<JavaUtilMap>) check_protocol_cast([((id<JavaUtilMap>) nil_chk(pvalues)) getWithId:id_], @protocol(JavaUtilMap));
      if (values == nil) {
        values = [[JavaUtilHashMap alloc] init];
        (void) [pvalues putWithId:id_ withId:values];
      }
      JavaUtilArrayList *links = [[JavaUtilArrayList alloc] initWithInt:2];
      id<RAREiContainer> group = [CCPBVFormsManager createGroupWithRAREiContainer:nil withRAREUTJSONObject:gfield withRAREWindowViewer:w withRAREUTMutableInteger:[[RAREUTMutableInteger alloc] initWithInt:0] withJavaUtilMap:values withJavaUtilArrayList:links];
      [((id<RAREiContainer>) nil_chk(group)) setVisibleWithBoolean:YES];
      if (CCPBVFormsManager_popupPaddingBorder_ == nil) {
        CCPBVFormsManager_popupPaddingBorder_ = [[RAREUIEmptyBorder alloc] initWithFloat:[RAREUIScreen PLATFORM_PIXELS_4]];
      }
      if ([links isEmpty]) {
        [CCPBVFormsManager handleGroupWithRAREWindowViewer:w withRAREUTJSONObject:gfield withRAREiContainer:group];
      }
      else {
        RAREUTJSONObject *ggfield = gfield;
        id<JavaLangRunnable> r = [[CCPBVFormsManager_$1 alloc] initWithJavaUtilArrayList:links withRAREWindowViewer:w withRAREUTJSONObject:ggfield withRAREiContainer:group];
        [((RAREWindowViewer *) nil_chk(w)) hideWaitCursor];
        (void) [w spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ r } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      }
    }
  }
}

+ (void)handleGroupWithRAREWindowViewer:(RAREWindowViewer *)w
                   withRAREUTJSONObject:(RAREUTJSONObject *)gfield
                     withRAREiContainer:(id<RAREiContainer>)group {
  [((id<RAREiContainer>) nil_chk(group)) setBorderWithRAREiPlatformBorder:CCPBVFormsManager_popupPaddingBorder_];
  [CCPBVOrderManager yesNoWithRAREWindowViewer:w withRAREUTJSONObject:gfield withRAREiContainer:group withRAREiFunctionCallback:[[CCPBVFormsManager_$2 alloc] initWithRAREiContainer:group]];
}

+ (id<RAREiWidget>)addWidgetWithRAREiContainer:(id<RAREiContainer>)parent
                           withCCPBVFieldValue:(CCPBVFieldValue *)fv
                          withRAREWindowViewer:(RAREWindowViewer *)w
                                   withBoolean:(BOOL)combosForSpinners
                                   withBoolean:(BOOL)combosForBoolean
                                   withBoolean:(BOOL)combosForList
                      withRAREUTMutableInteger:(RAREUTMutableInteger *)yPosition
                                   withBoolean:(BOOL)standalone
                         withJavaUtilArrayList:(JavaUtilArrayList *)links {
  RAREUTJSONObject *field = ((CCPBVFieldValue *) nil_chk(fv))->field_;
  if (CCPBVFormsManager_decimalFormat_ == nil) {
    RAREUTJSONObject *o = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"ordersInfo"], [RAREUTJSONObject class]);
    CCPBVFormsManager_decimalFormat_ = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"fieldDecimalFormatString" withNSString:@"#.################"];
    CCPBVFormsManager_decimalFormatPosition_ = [((NSString *) nil_chk(CCPBVFormsManager_decimalFormat_)) indexOf:'.'];
    if (CCPBVFormsManager_decimalFormatPosition_ == -1) {
      @throw [[RAREApplicationException alloc] initWithNSString:@"The 'orderInfo.fieldDecimalFormatString' is missing the decimal"];
    }
  }
  CCPBVOrderFields_FieldTypeEnum *type = [CCPBVOrderFields getFieldTypeWithRAREUTJSONObject:field];
  RARESPOTWidget *cfg = nil;
  id<RAREiWidget> widget = nil;
  RARESPOTComboBox *combo;
  NSString *s;
  RAREActionLink *link = nil;
  if (![CCPBVOrderFields isEditableWithRAREUTJSONObject:field]) {
    RARESPOTLabel *l = (RARESPOTLabel *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Label" withNSString:@"bv.oe.field_uneditable"], [RARESPOTLabel class]);
    [((SPOTPrintableString *) nil_chk(((RARESPOTLabel *) nil_chk(l))->value_)) setValueWithNSString:[((RAREUTJSONObject *) nil_chk(field)) optStringWithNSString:[CCPBVOrderFields DEFAULT_VALUE]]];
    cfg = l;
  }
  else {
    id min = [((RAREUTJSONObject *) nil_chk(field)) optWithNSString:[CCPBVOrderFields MIN_VALUE]];
    id max = [field optWithNSString:[CCPBVOrderFields MAX_VALUE]];
    {
      RARESPOTTextField *nf;
      RARESPOTTextField *tf;
      RARESPOTPasswordField *pf;
      RARESPOTTextArea *ta;
      RARESPOTForm *sform;
      RARESPOTListBox *lb;
      RARESPOTTextField *sf;
      RARESPOTForm *form;
      RARESPOTDateChooser *dc;
      RARESPOTTimeSpinner *ts;
      RARESPOTLabel *l;
      RARESPOTLine *ln;
      id<JavaUtilMap> values;
      switch ([type ordinal]) {
        case CCPBVOrderFields_FieldType_INTEGER:
        case CCPBVOrderFields_FieldType_DECIMAL:
        s = (type == [CCPBVOrderFields_FieldTypeEnum INTEGER]) ? @"bv.oe.integer_field" : @"bv.oe.decimal_field";
        nf = (RARESPOTTextField *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"TextField" withNSString:s], [RARESPOTTextField class]);
        s = [field optStringWithNSString:[CCPBVOrderFields INPUT_MASK] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(nf))->inputValidator_)) setValueWithNSString:s];
        }
        else {
          if (type == [CCPBVOrderFields_FieldTypeEnum DECIMAL]) {
            int dp = [field optIntWithNSString:[CCPBVOrderFields DECIMAL_PLACES] withInt:2] + CCPBVFormsManager_decimalFormatPosition_ + 1;
            if (dp >= [((NSString *) nil_chk(CCPBVFormsManager_decimalFormat_)) sequenceLength]) {
              [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(nf))->inputValidator_)) setValueWithNSString:CCPBVFormsManager_decimalFormat_];
            }
            else {
              [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(nf))->inputValidator_)) setValueWithNSString:[CCPBVFormsManager_decimalFormat_ substring:0 endIndex:dp]];
            }
          }
        }
        cfg = nf;
        if (min != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(nf))->inputValidator_)) spot_setAttributeWithNSString:@"minimum" withNSString:[min description]];
        }
        if (max != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(nf))->inputValidator_)) spot_setAttributeWithNSString:@"maximum" withNSString:[max description]];
        }
        cfg = nf;
        if (!standalone) {
          [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_ACTION_];
        }
        break;
        case CCPBVOrderFields_FieldType_TEXTFIELD:
        tf = (RARESPOTTextField *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"TextField" withNSString:@"bv.oe.text_field"], [RARESPOTTextField class]);
        [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(tf))->errorMessage_)) spot_setAttributeWithNSString:@"displayWidget" withNSString:@"messageBox"];
        cfg = tf;
        if (min != nil) {
          [((SPOTInteger *) nil_chk(tf->minCharacters_)) setValueWithLong:[((NSNumber *) check_class_cast(min, [NSNumber class])) intValue]];
        }
        if (max != nil) {
          [((SPOTInteger *) nil_chk(tf->maxCharacters_)) setValueWithLong:[((NSNumber *) check_class_cast(max, [NSNumber class])) intValue]];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields INPUT_MASK] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(tf->inputMask_)) setValueWithNSString:s];
        }
        if (!standalone) {
          [cfg spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_ACTION_];
        }
        break;
        case CCPBVOrderFields_FieldType_PASSWORD:
        pf = (RARESPOTPasswordField *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"PasswordField" withNSString:@"bv.oe.password_field"], [RARESPOTPasswordField class]);
        cfg = pf;
        if (min != nil) {
          [((SPOTInteger *) nil_chk(((RARESPOTPasswordField *) nil_chk(pf))->minCharacters_)) setValueWithLong:[((NSNumber *) check_class_cast(min, [NSNumber class])) intValue]];
        }
        if (max != nil) {
          [((SPOTInteger *) nil_chk(((RARESPOTPasswordField *) nil_chk(pf))->maxCharacters_)) setValueWithLong:[((NSNumber *) check_class_cast(max, [NSNumber class])) intValue]];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields INPUT_MASK] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTPasswordField *) nil_chk(pf))->inputMask_)) setValueWithNSString:s];
        }
        if (!standalone) {
          [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_ACTION_];
        }
        break;
        case CCPBVOrderFields_FieldType_TEXTAREA:
        ta = (RARESPOTTextArea *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"TextArea" withNSString:@"bv.oe.textarea_field"], [RARESPOTTextArea class]);
        cfg = ta;
        if (min != nil) {
          [((SPOTInteger *) nil_chk(((RARESPOTTextArea *) nil_chk(ta))->minCharacters_)) setValueWithLong:[((NSNumber *) check_class_cast(min, [NSNumber class])) intValue]];
        }
        if (max != nil) {
          [((SPOTInteger *) nil_chk(((RARESPOTTextArea *) nil_chk(ta))->maxCharacters_)) setValueWithLong:[((NSNumber *) check_class_cast(max, [NSNumber class])) intValue]];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields INPUT_MASK] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTTextArea *) nil_chk(ta))->inputMask_)) setValueWithNSString:s];
        }
        break;
        case CCPBVOrderFields_FieldType_BOOLEAN:
        if (combosForBoolean) {
          RARESPOTComboBox *cb = (RARESPOTComboBox *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"ComboBox" withNSString:@"bv.oe.boolean_field.combobox"], [RARESPOTComboBox class]);
          cfg = cb;
        }
        else {
          RARESPOTCheckBox *cb = (RARESPOTCheckBox *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"CheckBox" withNSString:@"bv.oe.boolean_field.checkbox"], [RARESPOTCheckBox class]);
          [((SPOTPrintableString *) nil_chk(((RARESPOTCheckBox *) nil_chk(cb))->value_)) setValueWithNSString:[field getStringWithNSString:[CCPBVOrderFields PROMPT]]];
          standalone = NO;
          cfg = cb;
          [cfg spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_CHANGED_];
        }
        if (standalone) {
          if ([field optJSONObjectWithNSString:@"toggle"] != nil) {
            [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VISIBILITY_TOGGLE_ACTION_];
          }
        }
        else {
          [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_CHANGED_];
        }
        break;
        case CCPBVOrderFields_FieldType_LIST:
        link = [CCPBVUtils createLinkWithRAREiWidget:parent withNSString:[field getStringWithNSString:[CCPBVOrderFields DATA_URL]] withBoolean:NO];
        if (combosForList) {
          RARESPOTComboBox *cb = (RARESPOTComboBox *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"ComboBox" withNSString:@"bv.oe.list_field.combobox"], [RARESPOTComboBox class]);
          cfg = cb;
        }
        else {
          RARESPOTListBox *lb = (RARESPOTListBox *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"ListBox" withNSString:@"bv.oe.list_field.listbox"], [RARESPOTListBox class]);
          if (standalone && ([((RARESPOTListBox *) nil_chk(lb)) getBorders] == nil)) {
            (void) [lb addBorderWithNSString:@"line"];
          }
          cfg = lb;
        }
        if (standalone) {
          if ([field optJSONObjectWithNSString:@"toggle"] != nil) {
            [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VISIBILITY_TOGGLE_ACTION_];
          }
        }
        else {
          [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_CHANGED_];
          [cfg spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_DOUBLECLICK] withNSString:CCPBVFormsManager_VALUE_ACTION_];
        }
        break;
        case CCPBVOrderFields_FieldType_SEARCHLIST:
        link = [CCPBVUtils createLinkWithRAREiWidget:parent withNSString:[field getStringWithNSString:[CCPBVOrderFields DATA_URL]] withBoolean:NO];
        sform = (RARESPOTForm *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"ListBox" withNSString:@"bv.search_list"], [RARESPOTForm class]);
        lb = (RARESPOTListBox *) check_class_cast([((RARESPOTForm *) nil_chk(sform)) findWidgetWithNSString:@"list"], [RARESPOTListBox class]);
        sf = (RARESPOTTextField *) check_class_cast([sform findWidgetWithNSString:@"search"], [RARESPOTTextField class]);
        s = [field optStringWithNSString:[CCPBVOrderFields SEARCHFIELD_NAME] withNSString:nil];
        if ((s != nil) && ([s sequenceLength] > 0)) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTTextField *) nil_chk(sf))->name_)) setValueWithNSString:s];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields SEARCHFIELD_EMPTYTEX] withNSString:nil];
        if ((s != nil) && ([s sequenceLength] > 0)) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTEmptyText *) nil_chk([((RARESPOTTextField *) nil_chk(sf)) getEmptyTextReference]))->value_)) setValueWithNSString:s];
        }
        if (standalone) {
          if ([sform getBorders] == nil) {
            (void) [sform addBorderWithNSString:@"line"];
          }
          [((RARESPOTListBox *) nil_chk(lb)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_ACTION] withNSString:CCPBVFormsManager_VALUE_CHANGED_];
          [lb spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_DOUBLECLICK] withNSString:CCPBVFormsManager_VALUE_ACTION_];
        }
        if (max != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTListBox *) nil_chk(lb))->customProperties_)) setValueWithNSString:[NSString stringWithFormat:@"pageSize=%@", [max description]]];
        }
        cfg = sform;
        break;
        case CCPBVOrderFields_FieldType_DATE:
        case CCPBVOrderFields_FieldType_DATE_TIME:
        s = (type == [CCPBVOrderFields_FieldTypeEnum DATE]) ? @"bv.oe.date_field" : @"bv.oe.date_time_field";
        form = (RARESPOTForm *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Form" withNSString:s], [RARESPOTForm class]);
        dc = (RARESPOTDateChooser *) check_class_cast([((RARESPOTForm *) nil_chk(form)) findWidgetWithNSString:@"dateChooser"], [RARESPOTDateChooser class]);
        if (type == [CCPBVOrderFields_FieldTypeEnum DATE]) {
          [((SPOTBoolean *) nil_chk(((RARESPOTDateChooser *) nil_chk(dc))->showTime_)) setValueWithBoolean:NO];
        }
        if (min != nil) {
          [((SPOTDateTime *) nil_chk(((RARESPOTDateChooser *) nil_chk(dc))->minValue_)) setValueWithNSString:[min description]];
        }
        if (max != nil) {
          [((SPOTDateTime *) nil_chk(((RARESPOTDateChooser *) nil_chk(dc))->maxValue_)) setValueWithNSString:[max description]];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields INPUT_MASK] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTDateChooser *) nil_chk(dc))->format_)) setValueWithNSString:s];
        }
        if (type == [CCPBVOrderFields_FieldTypeEnum TIME]) {
          [((SPOTBoolean *) nil_chk(((RARESPOTDateChooser *) nil_chk(dc))->showTime_)) setValueWithBoolean:YES];
        }
        cfg = form;
        break;
        case CCPBVOrderFields_FieldType_TIME:
        ts = (RARESPOTTimeSpinner *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"TimeSpinner" withNSString:@"bv.oe.time_field"], [RARESPOTTimeSpinner class]);
        if (min != nil) {
          [((SPOTTime *) nil_chk(((RARESPOTTimeSpinner *) nil_chk(ts))->minValue_)) setValueWithNSString:[min description]];
        }
        if (max != nil) {
          [((SPOTTime *) nil_chk(((RARESPOTTimeSpinner *) nil_chk(ts))->maxValue_)) setValueWithNSString:[max description]];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields INPUT_MASK] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTTimeSpinner *) nil_chk(ts))->format_)) setValueWithNSString:s];
        }
        if (combosForSpinners) {
          combo = (RARESPOTComboBox *) check_class_cast([w createConfigurationObjectWithNSString:@"ComboBox" withNSString:@"bv.oe.combo.widget"], [RARESPOTComboBox class]);
          [((RARESPOTComboBox_CComponentType *) nil_chk(((RARESPOTComboBox *) nil_chk(combo))->componentType_)) setValueWithInt:RARESPOTComboBox_CComponentType_widget];
          [((SPOTAny *) nil_chk(combo->popupWidget_)) setValueWithISPOTElement:ts];
          cfg = combo;
        }
        else {
          cfg = ts;
        }
        if (!standalone) {
          [((RARESPOTWidget *) nil_chk(cfg)) spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_CHANGE] withNSString:CCPBVFormsManager_VALUE_CHANGED_];
        }
        break;
        case CCPBVOrderFields_FieldType_LABEL:
        l = (RARESPOTLabel *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Label" withNSString:@"bv.oe.label_field"], [RARESPOTLabel class]);
        [((SPOTPrintableString *) nil_chk(((RARESPOTLabel *) nil_chk(l))->value_)) setValueWithNSString:[field optStringWithNSString:[CCPBVOrderFields DEFAULT_VALUE]]];
        cfg = l;
        case CCPBVOrderFields_FieldType_LINE:
        ln = (RARESPOTLine *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Line" withNSString:@"bv.oe.line_field"], [RARESPOTLine class]);
        if (fv->value_ != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTLine *) nil_chk(ln))->leftLabel_)) setValueWithNSString:[fv->value_ description]];
        }
        s = [field optStringWithNSString:[CCPBVOrderFields DESCRIPTION] withNSString:nil];
        if (s != nil) {
          [((SPOTPrintableString *) nil_chk(((RARESPOTLine *) nil_chk(ln))->rightLabel_)) setValueWithNSString:s];
        }
        cfg = ln;
        break;
        case CCPBVOrderFields_FieldType_GROUP:
        values = nil;
        if ([fv->value_ conformsToProtocol: @protocol(JavaUtilMap)]) {
          values = (id<JavaUtilMap>) check_protocol_cast(fv->value_, @protocol(JavaUtilMap));
        }
        s = [field optStringWithNSString:[CCPBVOrderFields ID] withNSString:nil];
        if (s == nil) {
          (void) [field putWithNSString:[CCPBVOrderFields ID] withId:[JavaLangInteger toHexStringWithInt:[JavaLangSystem identityHashCodeWithId:[JavaLangInteger valueOfWithInt:(int) [field hash]]]]];
        }
        widget = [CCPBVFormsManager createGroupWithRAREiContainer:parent withRAREUTJSONObject:field withRAREWindowViewer:w withRAREUTMutableInteger:yPosition withJavaUtilMap:values withJavaUtilArrayList:links];
        cfg = nil;
        break;
        default:
        break;
      }
    }
  }
  if (cfg != nil) {
    int y = [((RAREUTMutableInteger *) nil_chk(yPosition)) get];
    if (standalone && !([cfg isKindOfClass:[RARESPOTCheckBox class]])) {
      RARESPOTLabel *prompt = CCPBVFormsManager_promptLabel_;
      if (prompt == nil) {
        CCPBVFormsManager_promptLabel_ = prompt = (RARESPOTLabel *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Label" withNSString:@"bv.oe.field_label_prompt"], [RARESPOTLabel class]);
        [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(((RARESPOTLabel *) nil_chk(prompt))->bounds_))->x_)) setValueWithNSString:@"0"];
        CCPBVFormsManager_addColonToPrompt_ = [((RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:@"ordersInfo"], [RAREUTJSONObject class])) optBooleanWithNSString:@"addColonToPrompt" withBoolean:YES];
      }
      s = [((RAREUTJSONObject *) nil_chk(field)) optStringWithNSString:[CCPBVOrderFields PROMPT] withNSString:nil];
      if (s != nil) {
        if (CCPBVFormsManager_addColonToPrompt_) {
          s = [s trim];
          if (![((NSString *) nil_chk(s)) hasSuffix:@":"]) {
            s = [NSString stringWithFormat:@"%@:", s];
          }
        }
        [((SPOTPrintableString *) nil_chk(((RARESPOTLabel *) nil_chk(prompt))->value_)) setValueWithNSString:s];
        [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(prompt->bounds_))->y_)) setValueWithNSString:[RAREUTStringCache valueOfWithInt:y++]];
        (void) [((id<RAREiContainer>) nil_chk(parent)) addWidgetWithRARESPOTWidget:prompt];
      }
    }
    NSString *id_ = [((RAREUTJSONObject *) nil_chk(field)) optStringWithNSString:[CCPBVOrderFields ID] withNSString:nil];
    [((SPOTBoolean *) nil_chk(cfg->required_)) setValueWithBoolean:[CCPBVOrderFields isRequiredWithRAREUTJSONObject:field]];
    [((SPOTBoolean *) nil_chk(cfg->visible_)) setValueWithBoolean:![CCPBVOrderFields isHiddenWithRAREUTJSONObject:field]];
    [((SPOTBoolean *) nil_chk(cfg->enabled_)) setValueWithBoolean:[CCPBVOrderFields isEnabledWithRAREUTJSONObject:field]];
    [((SPOTPrintableString *) nil_chk(cfg->name_)) setValueWithNSString:id_];
    [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(cfg->bounds_))->x_)) setValueWithNSString:@"0"];
    [((SPOTPrintableString *) nil_chk(cfg->bounds_->y_)) setValueWithNSString:[RAREUTStringCache valueOfWithInt:y++]];
    [cfg spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_FOCUS] withNSString:CCPBVFormsManager_FOCUS_GAINED_EVENT_];
    [cfg spot_setAttributeWithNSString:[RAREiConstants ATTRIBUTE_ON_BLUR] withNSString:CCPBVFormsManager_FOCUS_LOST_EVENT_];
    widget = [((id<RAREiContainer>) nil_chk(parent)) addWidgetWithRARESPOTWidget:cfg];
    if ((type == [CCPBVOrderFields_FieldTypeEnum BOOLEAN]) && ([(id) widget isKindOfClass:[RAREComboBoxWidget class]])) {
      RAREComboBoxWidget *cb = (RAREComboBoxWidget *) check_class_cast(widget, [RAREComboBoxWidget class]);
      [((RAREComboBoxWidget *) nil_chk(cb)) addWithId:[[RARERenderableDataItem alloc] initWithId:[CCPBVOrders booleanFieldTrueDisplayValue] withInt:RARERenderableDataItem_TYPE_STRING withId:[CCPBVOrders booleanFieldTrueValue]]];
      [cb addWithId:[[RARERenderableDataItem alloc] initWithId:[CCPBVOrders booleanFieldFalseDisplayValue] withInt:RARERenderableDataItem_TYPE_STRING withId:[CCPBVOrders booleanFieldFalseValue]]];
    }
    if (fv->value_ != nil) {
      [CCPBVFormsManager updateWidgetFromValueWithRAREiWidget:widget withCCPBVFieldValue:fv];
    }
    if (id_ != nil) {
      [((id<RAREiWidget>) nil_chk(widget)) setLinkedDataWithId:fv];
    }
    [yPosition setWithInt:y];
    if (link != nil) {
      if (links != nil) {
        [links addWithId:[[CCPBVOrderManager_WidgetDataLink alloc] initWithRAREiWidget:widget withRAREActionLink:link]];
      }
      else {
        [((id<RAREiWidget>) nil_chk(widget)) setDataLinkWithRAREActionLink:link];
      }
    }
  }
  return widget;
}

+ (id<RAREiContainer>)createFormContainerWithRAREWindowViewer:(RAREWindowViewer *)w
                                   withRARERenderableDataItem:(RARERenderableDataItem *)row
                                         withRAREUTJSONObject:(RAREUTJSONObject *)info
                                              withJavaUtilMap:(id<JavaUtilMap>)values
                                        withJavaUtilArrayList:(JavaUtilArrayList *)links {
  RARESPOTForm *f = (RARESPOTForm *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Form" withNSString:@"bv.oe.form"], [RARESPOTForm class]);
  id<JavaUtilList> fields = [((RAREUTJSONArray *) nil_chk([((RAREUTJSONObject *) nil_chk(info)) getJSONArrayWithNSString:@"fields"])) getObjectList];
  int widgetCount = [CCPBVOrderFields getWidgetCountWithRAREUTJSONObject:info];
  if (row != nil) {
    RARESPOTLabel *l = (RARESPOTLabel *) check_class_cast([((RARESPOTForm *) nil_chk(f)) findWidgetWithNSString:@"order"], [RARESPOTLabel class]);
    NSString *s = [CCPBVOrders getOrderDirectionsWithRARERenderableDataItem:row];
    [((SPOTPrintableString *) nil_chk(((RARESPOTLabel *) nil_chk(l))->value_)) setValueWithNSString:[((RARERenderableDataItem *) nil_chk([row getWithInt:1])) description]];
    l = (RARESPOTLabel *) check_class_cast([f findWidgetWithNSString:@"directions"], [RARESPOTLabel class]);
    if ([((NSString *) nil_chk(s)) sequenceLength] > 40) {
      [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(((RARESPOTLabel *) nil_chk(l))->bounds_))->width_)) setValueWithNSString:@"40ch"];
    }
    [((RARESPOTLabel *) nil_chk(l))->value_ setValueWithNSString:s];
  }
  RARESPOTForm *ff = (RARESPOTForm *) check_class_cast([((RARESPOTForm *) nil_chk(f)) findWidgetWithNSString:@"formFields"], [RARESPOTForm class]);
  if (widgetCount > 1) {
    (void) [((RARESPOTForm *) nil_chk(ff)) getScrollPaneReference];
  }
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  int len = [((id<JavaUtilList>) nil_chk(fields)) size] * 2;
  for (int i = 0; i < len; i++) {
    (void) [sb appendWithNSString:@"d,"];
  }
  [sb setLengthWithInt:[sb sequenceLength] - 1];
  [((SPOTPrintableString *) nil_chk(((RARESPOTForm *) nil_chk(ff))->rows_)) setValueWithNSString:[sb description]];
  id<RAREiContainer> c = (id<RAREiContainer>) check_protocol_cast([w createWidgetWithRARESPOTWidget:f], @protocol(RAREiContainer));
  id<RAREiContainer> fc = (id<RAREiContainer>) check_protocol_cast([((id<RAREiContainer>) nil_chk(c)) getWidgetWithNSString:@"formFields"], @protocol(RAREiContainer));
  if (values == nil) {
    values = [[JavaUtilHashMap alloc] initWithInt:len];
  }
  [CCPBVFormsManager populateContainerWithRAREiContainer:fc withJavaUtilList:fields withInt:widgetCount withRAREWindowViewer:w withJavaUtilMap:values withJavaUtilArrayList:links];
  [((id<RAREiContainer>) nil_chk(fc)) setLinkedDataWithId:[[CCPBVFieldValue alloc] initWithRAREUTJSONObject:info withId:values]];
  return c;
}

+ (id<RAREiContainer>)createFormContainerWithRAREWindowViewer:(RAREWindowViewer *)w
                                               withCCPBVOrder:(CCPBVOrder *)order
                                        withJavaUtilArrayList:(JavaUtilArrayList *)links {
  RARESPOTForm *f = (RARESPOTForm *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Form" withNSString:@"bv.oe.form"], [RARESPOTForm class]);
  id<JavaUtilMap> values = ((CCPBVOrder *) nil_chk(order))->orderValues_;
  id<JavaUtilList> fields = [((CCPBVOrderFields *) nil_chk(order->orderFields_)) getFields];
  int widgetCount = [order->orderFields_ getWidgetCount];
  RARESPOTLabel *l = (RARESPOTLabel *) check_class_cast([((RARESPOTForm *) nil_chk(f)) findWidgetWithNSString:@"order"], [RARESPOTLabel class]);
  NSString *s = [((RARERenderableDataItem *) nil_chk(order->directionsItem_)) description];
  [((SPOTPrintableString *) nil_chk(((RARESPOTLabel *) nil_chk(l))->value_)) setValueWithNSString:[((RARERenderableDataItem *) nil_chk(order->orderedItem_)) description]];
  l = (RARESPOTLabel *) check_class_cast([f findWidgetWithNSString:@"directions"], [RARESPOTLabel class]);
  [((RARESPOTLabel *) nil_chk(l))->value_ setValueWithNSString:s];
  if ([((NSString *) nil_chk(s)) sequenceLength] > 40) {
    [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(l->bounds_))->width_)) setValueWithNSString:@"40ch"];
  }
  RARESPOTForm *ff = (RARESPOTForm *) check_class_cast([f findWidgetWithNSString:@"formFields"], [RARESPOTForm class]);
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  int len = [((id<JavaUtilList>) nil_chk(fields)) size] * 2;
  for (int i = 0; i < len; i++) {
    (void) [sb appendWithNSString:@"d,"];
  }
  [sb setLengthWithInt:[sb sequenceLength] - 1];
  [((SPOTPrintableString *) nil_chk(((RARESPOTForm *) nil_chk(ff))->rows_)) setValueWithNSString:[sb description]];
  id<RAREiContainer> c = (id<RAREiContainer>) check_protocol_cast([w createWidgetWithRARESPOTWidget:f], @protocol(RAREiContainer));
  id<RAREiContainer> fc = (id<RAREiContainer>) check_protocol_cast([((id<RAREiContainer>) nil_chk(c)) getWidgetWithNSString:@"formFields"], @protocol(RAREiContainer));
  RAREUTJSONObject *field = [[RAREUTJSONObject alloc] init];
  (void) [field putWithNSString:@"fields" withJavaUtilCollection:[[RAREUTJSONArray alloc] initWithJavaUtilList:fields]];
  [CCPBVFormsManager populateContainerWithRAREiContainer:fc withJavaUtilList:fields withInt:widgetCount withRAREWindowViewer:w withJavaUtilMap:values withJavaUtilArrayList:links];
  [((id<RAREiContainer>) nil_chk(fc)) setLinkedDataWithId:[[CCPBVFieldValue alloc] initWithRAREUTJSONObject:field withId:values]];
  return c;
}

+ (id<RAREiContainer>)createGroupWithRAREiContainer:(id<RAREiContainer>)parent
                               withRAREUTJSONObject:(RAREUTJSONObject *)field
                               withRAREWindowViewer:(RAREWindowViewer *)w
                           withRAREUTMutableInteger:(RAREUTMutableInteger *)yPosition
                                    withJavaUtilMap:(id<JavaUtilMap>)values
                              withJavaUtilArrayList:(JavaUtilArrayList *)links {
  id<JavaUtilList> fields = (id<JavaUtilList>) check_protocol_cast([((RAREUTJSONArray *) nil_chk([((RAREUTJSONObject *) nil_chk(field)) getJSONArrayWithNSString:[CCPBVOrderFields FIELDS]])) getObjectList], @protocol(JavaUtilList));
  RARESPOTForm *cfg = (RARESPOTForm *) check_class_cast([((RAREWindowViewer *) nil_chk(w)) createConfigurationObjectWithNSString:@"Form" withNSString:@"bv.oe.group_field"], [RARESPOTForm class]);
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  int len = [((id<JavaUtilList>) nil_chk(fields)) size] * 2;
  for (int i = 0; i < len; i++) {
    (void) [sb appendWithNSString:@"d,"];
  }
  [sb setLengthWithInt:[sb sequenceLength] - 1];
  [((SPOTPrintableString *) nil_chk(((RARESPOTForm *) nil_chk(cfg))->rows_)) setValueWithNSString:[sb description]];
  [((SPOTBoolean *) nil_chk(cfg->required_)) setValueWithBoolean:[CCPBVOrderFields isRequiredWithRAREUTJSONObject:field]];
  [((SPOTPrintableString *) nil_chk(cfg->name_)) setValueWithNSString:[field getStringWithNSString:[CCPBVOrderFields ID]]];
  [((SPOTBoolean *) nil_chk(cfg->visible_)) setValueWithBoolean:![CCPBVOrderFields isHiddenWithRAREUTJSONObject:field]];
  [((SPOTBoolean *) nil_chk(cfg->enabled_)) setValueWithBoolean:[CCPBVOrderFields isEnabledWithRAREUTJSONObject:field]];
  [((SPOTPrintableString *) nil_chk(((RARESPOTRectangle *) nil_chk(cfg->bounds_))->x_)) setValueWithNSString:@"0"];
  [((SPOTPrintableString *) nil_chk(cfg->bounds_->y_)) setValueWithNSString:[RAREUTStringCache valueOfWithInt:[((RAREUTMutableInteger *) nil_chk(yPosition)) getAndIncrement]]];
  id<RAREiContainer> c = (id<RAREiContainer>) check_protocol_cast(((parent == nil) ? [w createWidgetWithRARESPOTWidget:cfg] : [parent addWidgetWithRARESPOTWidget:cfg]), @protocol(RAREiContainer));
  int widgetCount = [CCPBVOrderFields getWidgetCountWithRAREUTJSONObject:field];
  if (values == nil) {
    values = [[JavaUtilHashMap alloc] initWithInt:len];
  }
  [CCPBVFormsManager populateContainerWithRAREiContainer:c withJavaUtilList:fields withInt:widgetCount withRAREWindowViewer:w withJavaUtilMap:values withJavaUtilArrayList:links];
  [c setLinkedDataWithId:[[CCPBVFieldValue alloc] initWithRAREUTJSONObject:field withId:values]];
  return c;
}

+ (void)populateContainerWithRAREiContainer:(id<RAREiContainer>)c
                           withJavaUtilList:(id<JavaUtilList>)fields
                                    withInt:(int)widgetCount
                       withRAREWindowViewer:(RAREWindowViewer *)w
                            withJavaUtilMap:(id<JavaUtilMap>)values
                      withJavaUtilArrayList:(JavaUtilArrayList *)links {
  RAREUTMutableInteger *pos = [[RAREUTMutableInteger alloc] initWithInt:0];
  BOOL useCombos = widgetCount > ([RAREUIScreen isLargeScreen] ? 2 : 1);
  for (RAREUTJSONObject * __strong field in nil_chk(fields)) {
    if ([CCPBVOrderFields isHiddenWithRAREUTJSONObject:field] && ![CCPBVOrderFields isEditableWithRAREUTJSONObject:field]) {
      continue;
    }
    CCPBVFieldValue *value = nil;
    NSString *id_ = [((RAREUTJSONObject *) nil_chk(field)) optStringWithNSString:[CCPBVOrderFields ID] withNSString:nil];
    if (id_ != nil) {
      value = [((id<JavaUtilMap>) nil_chk(values)) getWithId:id_];
    }
    if (value == nil) {
      value = [[CCPBVFieldValue alloc] initWithRAREUTJSONObject:field];
      if (id_ != nil) {
        (void) [((id<JavaUtilMap>) nil_chk(values)) putWithId:id_ withId:value];
      }
    }
    (void) [CCPBVFormsManager addWidgetWithRAREiContainer:c withCCPBVFieldValue:value withRAREWindowViewer:w withBoolean:YES withBoolean:NO withBoolean:useCombos withRAREUTMutableInteger:pos withBoolean:YES withJavaUtilArrayList:links];
  }
}

+ (void)populateListWithJavaUtilList:(id<JavaUtilList>)list
                    withJavaUtilList:(id<JavaUtilList>)fields
                      withRAREUIFont:(RAREUIFont *)bold
                withRAREWindowViewer:(RAREWindowViewer *)w
                         withBoolean:(BOOL)requiredOnly
                         withBoolean:(BOOL)optionalOnly {
  for (RAREUTJSONObject * __strong field in nil_chk(fields)) {
    if ([CCPBVOrderFields isHiddenWithRAREUTJSONObject:field]) {
      continue;
    }
    BOOL required = [CCPBVOrderFields isRequiredWithRAREUTJSONObject:field];
    if (requiredOnly && !required) {
      continue;
    }
    if (optionalOnly && required) {
      continue;
    }
    NSString *prompt = [((RAREUTJSONObject *) nil_chk(field)) getStringWithNSString:[CCPBVOrderFields PROMPT]];
    CCPBVFieldValue *value = [[CCPBVFieldValue alloc] initWithRAREUTJSONObject:field];
    RARERenderableDataItem *item = [[RARERenderableDataItem alloc] initWithId:prompt withInt:RARERenderableDataItem_TYPE_STRING withId:value];
    if (required) {
      [item setFontWithRAREUIFont:bold];
      [item setUserStateFlagWithByte:CCPBVOrders_REQUIRED_FLAG];
    }
    if (![CCPBVOrderFields isEditableWithRAREUTJSONObject:field]) {
      [item setSelectableWithBoolean:NO];
    }
  }
}

+ (void)updateValueFromWidgetWithRAREiWidget:(id<RAREiWidget>)widget {
  CCPBVFieldValue *fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(widget)) getLinkedData], [CCPBVFieldValue class]);
  if (fv == nil) {
    return;
  }
  RAREUTJSONObject *field = ((CCPBVFieldValue *) nil_chk(fv))->field_;
  CCPBVOrderFields_FieldTypeEnum *type = [CCPBVOrderFields getFieldTypeWithRAREUTJSONObject:field];
  if ([(id) widget isKindOfClass:[RAREaSpinnerWidget class]]) {
    [((RAREaSpinnerWidget *) check_class_cast(widget, [RAREaSpinnerWidget class])) commitEdit];
  }
  {
    id<RAREiContainer> g;
    id<JavaUtilMap> values;
    switch ([type ordinal]) {
      case CCPBVOrderFields_FieldType_INTEGER:
      case CCPBVOrderFields_FieldType_DECIMAL:
      fv->value_ = [widget getValue];
      if ([fv->value_ isKindOfClass:[NSString class]]) {
        fv->value_ = [[RAREUTSNumber alloc] initWithNSString:(NSString *) check_class_cast(fv->value_, [NSString class]) withBoolean:NO];
      }
      if (type == [CCPBVOrderFields_FieldTypeEnum INTEGER]) {
        fv->displayValue_ = [((JavaTextNumberFormat *) nil_chk([JavaTextNumberFormat getIntegerInstanceWithJavaUtilLocale:[JavaUtilLocale getDefault]])) formatWithId:fv->value_];
      }
      else {
        fv->displayValue_ = [((JavaTextNumberFormat *) nil_chk([JavaTextNumberFormat getNumberInstanceWithJavaUtilLocale:[JavaUtilLocale getDefault]])) formatWithId:fv->value_];
      }
      break;
      case CCPBVOrderFields_FieldType_TEXTFIELD:
      case CCPBVOrderFields_FieldType_PASSWORD:
      case CCPBVOrderFields_FieldType_TEXTAREA:
      case CCPBVOrderFields_FieldType_RICHTEXT:
      fv->value_ = [widget getValue];
      fv->displayValue_ = nil;
      break;
      case CCPBVOrderFields_FieldType_DATE:
      case CCPBVOrderFields_FieldType_DATE_TIME:
      case CCPBVOrderFields_FieldType_TIME:
      if ([(id) widget isKindOfClass:[RAREaSpinnerWidget class]]) {
        [((RAREaSpinnerWidget *) check_class_cast(widget, [RAREaSpinnerWidget class])) commitEdit];
      }
      fv->value_ = [widget getValue];
      fv->displayValue_ = [widget getValueAsString];
      break;
      case CCPBVOrderFields_FieldType_BOOLEAN:
      if ([(id) widget isKindOfClass:[RAREComboBoxWidget class]]) {
        fv->value_ = [widget getSelectionData];
        fv->displayValue_ = [widget getSelectionAsString];
      }
      else {
        if ([((RARECheckBoxWidget *) check_class_cast(widget, [RARECheckBoxWidget class])) isChecked]) {
          fv->value_ = [CCPBVOrders booleanFieldTrueValue];
          fv->displayValue_ = [CCPBVOrders booleanFieldTrueDisplayValue];
        }
        else {
          fv->value_ = [CCPBVOrders booleanFieldFalseValue];
          fv->displayValue_ = [CCPBVOrders booleanFieldFalseDisplayValue];
        }
      }
      break;
      case CCPBVOrderFields_FieldType_LIST:
      fv->value_ = [widget getSelectionData];
      fv->displayValue_ = [widget getSelectionAsString];
      break;
      case CCPBVOrderFields_FieldType_SEARCHLIST:
      {
        if ([(id) widget conformsToProtocol: @protocol(RAREiFormViewer)]) {
          widget = [((id<RAREiFormViewer>) check_protocol_cast(widget, @protocol(RAREiFormViewer))) getWidgetWithNSString:@"list"];
        }
        [((id<RAREiWidget>) nil_chk(widget)) setValueWithId:fv->value_];
        fv->value_ = [widget getSelectionData];
        fv->displayValue_ = [widget getSelectionAsString];
        break;
      }
      case CCPBVOrderFields_FieldType_GROUP:
      g = (id<RAREiContainer>) check_protocol_cast(widget, @protocol(RAREiContainer));
      values = [CCPBVFormsManager resolveValuesMapWithRAREiWidget:widget withCCPBVFieldValue:fv];
      for (id<RAREiWidget> __strong gw in nil_chk([((id<RAREiContainer>) nil_chk(g)) getWidgetList])) {
        [CCPBVFormsManager updateValueFromWidgetWithRAREiWidget:gw];
        fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(gw)) getLinkedData], [CCPBVFieldValue class]);
        if (fv != nil) {
          field = fv->field_;
          (void) [((id<JavaUtilMap>) nil_chk(values)) putWithId:[((RAREUTJSONObject *) nil_chk(field)) getStringWithNSString:[CCPBVOrderFields ID]] withId:fv];
        }
      }
      break;
      default:
      break;
    }
  }
}

+ (void)updateWidgetFromValueWithRAREiWidget:(id<RAREiWidget>)widget
                         withCCPBVFieldValue:(CCPBVFieldValue *)fv {
  if ((fv == nil) || (CCPBVFormsManager_updatingWidget_ == widget)) {
    return;
  }
  CCPBVFormsManager_updatingWidget_ = widget;
  @try {
    RAREUTJSONObject *field = ((CCPBVFieldValue *) nil_chk(fv))->field_;
    CCPBVOrderFields_FieldTypeEnum *type = [CCPBVOrderFields getFieldTypeWithRAREUTJSONObject:field];
    {
      JavaUtilDate *date;
      RAREDateChooserWidget *dc;
      id<RAREiContainer> g;
      id<JavaUtilMap> values;
      switch ([type ordinal]) {
        case CCPBVOrderFields_FieldType_INTEGER:
        case CCPBVOrderFields_FieldType_DECIMAL:
        case CCPBVOrderFields_FieldType_TEXTFIELD:
        case CCPBVOrderFields_FieldType_PASSWORD:
        case CCPBVOrderFields_FieldType_TEXTAREA:
        case CCPBVOrderFields_FieldType_RICHTEXT:
        case CCPBVOrderFields_FieldType_TIME:
        [((id<RAREiWidget>) nil_chk(widget)) setValueWithId:fv->value_];
        break;
        case CCPBVOrderFields_FieldType_DATE:
        case CCPBVOrderFields_FieldType_DATE_TIME:
        date = (JavaUtilDate *) check_class_cast(fv->value_, [JavaUtilDate class]);
        dc = (RAREDateChooserWidget *) check_class_cast([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getFormViewer])) getWidgetWithNSString:@"dateChooser"], [RAREDateChooserWidget class]);
        [((RAREDateChooserWidget *) nil_chk(dc)) setValueWithId:date];
        if (date != nil) {
          [((id<RAREiWidget>) nil_chk([((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:@"valueField"])) setValueWithId:fv->displayValue_];
        }
        break;
        case CCPBVOrderFields_FieldType_BOOLEAN:
        if ([(id) widget isKindOfClass:[RAREComboBoxWidget class]]) {
          [((id<RAREiWidget>) nil_chk(widget)) setValueWithId:(fv->value_ == nil) ? nil : [fv->value_ description]];
        }
        else {
          [((RARECheckBoxWidget *) check_class_cast(widget, [RARECheckBoxWidget class])) setCheckedWithBoolean:(fv->value_ != nil) && [fv->value_ isEqual:[CCPBVOrders booleanFieldTrueValue]]];
        }
        break;
        case CCPBVOrderFields_FieldType_LIST:
        {
          [((id<RAREiWidget>) nil_chk(widget)) setValueWithId:fv->value_];
          int row = [((id<RAREiListHandler>) check_protocol_cast(widget, @protocol(RAREiListHandler))) getSelectedIndex];
          if (row != -1) {
            [((id<RAREiListHandler>) check_protocol_cast(widget, @protocol(RAREiListHandler))) scrollRowToVisibleWithInt:row];
          }
          break;
        }
        case CCPBVOrderFields_FieldType_SEARCHLIST:
        {
          if ([(id) widget conformsToProtocol: @protocol(RAREiFormViewer)]) {
            widget = [((id<RAREiFormViewer>) check_protocol_cast(widget, @protocol(RAREiFormViewer))) getWidgetWithNSString:@"list"];
          }
          [((id<RAREiWidget>) nil_chk(widget)) setValueWithId:fv->value_];
          int row = [((id<RAREiListHandler>) check_protocol_cast(widget, @protocol(RAREiListHandler))) getSelectedIndex];
          if (row != -1) {
            [((id<RAREiListHandler>) check_protocol_cast(widget, @protocol(RAREiListHandler))) scrollRowToVisibleWithInt:row];
          }
          break;
        }
        case CCPBVOrderFields_FieldType_GROUP:
        g = (id<RAREiContainer>) check_protocol_cast(widget, @protocol(RAREiContainer));
        values = [CCPBVFormsManager resolveValuesMapWithRAREiWidget:widget withCCPBVFieldValue:fv];
        for (id<RAREiWidget> __strong gw in nil_chk([((id<RAREiContainer>) nil_chk(g)) getWidgetList])) {
          [CCPBVFormsManager updateValueFromWidgetWithRAREiWidget:gw];
          fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(gw)) getLinkedData], [CCPBVFieldValue class]);
          if (fv != nil) {
            field = fv->field_;
            (void) [((id<JavaUtilMap>) nil_chk(values)) putWithId:[((RAREUTJSONObject *) nil_chk(field)) getStringWithNSString:[CCPBVOrderFields ID]] withId:fv->value_];
          }
        }
        break;
        default:
        break;
      }
    }
  }
  @finally {
    CCPBVFormsManager_updatingWidget_ = nil;
  }
}

+ (id<JavaUtilMap>)getValuesMapWithRAREiWidget:(id<RAREiWidget>)widget {
  CCPBVFieldValue *fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(widget)) getLinkedData], [CCPBVFieldValue class]);
  return (id<JavaUtilMap>) check_protocol_cast(((CCPBVFieldValue *) nil_chk(fv))->value_, @protocol(JavaUtilMap));
}

+ (id<RAREiWidget>)getInvalidWidgetWithRAREiContainer:(id<RAREiContainer>)c {
  id<JavaUtilList> list = [((id<RAREiContainer>) nil_chk(c)) getWidgetList];
  for (id<RAREiWidget> __strong w in nil_chk(list)) {
    if (![((id<RAREiWidget>) nil_chk(w)) isEnabled] || ![w isShowing] || ![w isRequired]) {
      continue;
    }
    if ([(id) w isKindOfClass:[RAREFormViewer class]]) {
      id<RAREiWidget> ww = [CCPBVFormsManager getInvalidWidgetWithRAREiContainer:(id<RAREiContainer>) check_protocol_cast(w, @protocol(RAREiContainer))];
      if (ww != nil) {
        return ww;
      }
    }
    if (![w hasValue]) {
      return w;
    }
  }
  return nil;
}

+ (id<JavaUtilMap>)resolveValuesMapWithRAREiWidget:(id<RAREiWidget>)widget
                               withCCPBVFieldValue:(CCPBVFieldValue *)fv {
  if (fv == nil) {
    fv = (CCPBVFieldValue *) check_class_cast([((id<RAREiWidget>) nil_chk(widget)) getLinkedData], [CCPBVFieldValue class]);
  }
  id<JavaUtilMap> values = (fv == nil) ? nil : (id<JavaUtilMap>) check_protocol_cast(fv->value_, @protocol(JavaUtilMap));
  if ((values == nil) && (fv != nil)) {
    values = [[JavaUtilLinkedHashMap alloc] init];
    fv->value_ = values;
    RAREUTJSONObject *field = fv->field_;
    NSString *id_ = [((RAREUTJSONObject *) nil_chk(field)) optStringWithNSString:[CCPBVOrderFields ID] withNSString:nil];
    if (id_ != nil) {
      id<JavaUtilMap> pvalues = [CCPBVFormsManager resolveValuesMapWithRAREiWidget:[((id<RAREiWidget>) nil_chk(widget)) getFormViewer] withCCPBVFieldValue:nil];
      if (pvalues != nil) {
        (void) [pvalues putWithId:id_ withId:values];
      }
    }
  }
  return values;
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [CCPBVFormsManager class]) {
    CCPBVFormsManager_FOCUS_GAINED_EVENT_ = [NSString stringWithFormat:@"class:%@#onFocusGained", [[IOSClass classWithClass:[CCPBVOrderEntry class]] getName]];
    CCPBVFormsManager_FOCUS_LOST_EVENT_ = [NSString stringWithFormat:@"class:%@#onFocusLost", [[IOSClass classWithClass:[CCPBVOrderEntry class]] getName]];
    CCPBVFormsManager_VISIBILITY_TOGGLE_ACTION_ = [NSString stringWithFormat:@"class:%@#onTogglingItemSelected", [[IOSClass classWithClass:[CCPBVOrderEntry class]] getName]];
    CCPBVFormsManager_VALUE_CHANGED_ = [NSString stringWithFormat:@"class:%@#onFieldValueChanged", [[IOSClass classWithClass:[CCPBVOrderEntry class]] getName]];
    CCPBVFormsManager_VALUE_ACTION_ = [NSString stringWithFormat:@"class:%@#onFieldValueAction", [[IOSClass classWithClass:[CCPBVOrderEntry class]] getName]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleGroupWithRAREWindowViewer:withRAREUTJSONObject:withRAREiContainer:", NULL, "V", 0xa, NULL },
    { "addWidgetWithRAREiContainer:withCCPBVFieldValue:withRAREWindowViewer:withBoolean:withBoolean:withBoolean:withRAREUTMutableInteger:withBoolean:withJavaUtilArrayList:", NULL, "LRAREiWidget", 0x9, NULL },
    { "createFormContainerWithRAREWindowViewer:withRARERenderableDataItem:withRAREUTJSONObject:withJavaUtilMap:withJavaUtilArrayList:", NULL, "LRAREiContainer", 0x9, NULL },
    { "createFormContainerWithRAREWindowViewer:withCCPBVOrder:withJavaUtilArrayList:", NULL, "LRAREiContainer", 0x9, NULL },
    { "createGroupWithRAREiContainer:withRAREUTJSONObject:withRAREWindowViewer:withRAREUTMutableInteger:withJavaUtilMap:withJavaUtilArrayList:", NULL, "LRAREiContainer", 0x9, NULL },
    { "getValuesMapWithRAREiWidget:", NULL, "LJavaUtilMap", 0x9, NULL },
    { "getInvalidWidgetWithRAREiContainer:", NULL, "LRAREiWidget", 0x9, NULL },
    { "resolveValuesMapWithRAREiWidget:withCCPBVFieldValue:", NULL, "LJavaUtilMap", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "decimalFormat_", NULL, 0xa, "LNSString" },
    { "decimalFormatPosition_", NULL, 0xa, "I" },
    { "promptLabel_", NULL, 0xa, "LRARESPOTLabel" },
    { "FOCUS_GAINED_EVENT_", NULL, 0x1a, "LNSString" },
    { "FOCUS_LOST_EVENT_", NULL, 0x1a, "LNSString" },
    { "VISIBILITY_TOGGLE_ACTION_", NULL, 0x1a, "LNSString" },
    { "VALUE_CHANGED_", NULL, 0x1a, "LNSString" },
    { "VALUE_ACTION_", NULL, 0x1a, "LNSString" },
    { "popupPaddingBorder_", NULL, 0xa, "LRAREiPlatformBorder" },
    { "addColonToPrompt_", NULL, 0xa, "Z" },
    { "updatingWidget_", NULL, 0xa, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVFormsManager = { "FormsManager", "com.sparseware.bellavista.oe", NULL, 0x1, 8, methods, 11, fields, 0, NULL};
  return &_CCPBVFormsManager;
}

@end
@implementation CCPBVFormsManager_$1

- (void)run {
  for (CCPBVOrderManager_WidgetDataLink * __strong link in nil_chk(val$links_)) {
    [((CCPBVOrderManager_WidgetDataLink *) nil_chk(link)) handle];
  }
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVFormsManager_$1_$1 alloc] initWithCCPBVFormsManager_$1:self]];
}

- (id)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0
           withRAREWindowViewer:(RAREWindowViewer *)capture$1
           withRAREUTJSONObject:(RAREUTJSONObject *)capture$2
             withRAREiContainer:(id<RAREiContainer>)capture$3 {
  val$links_ = capture$0;
  val$w_ = capture$1;
  val$ggfield_ = capture$2;
  val$group_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$links_", NULL, 0x1012, "LJavaUtilArrayList" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$ggfield_", NULL, 0x1012, "LRAREUTJSONObject" },
    { "val$group_", NULL, 0x1012, "LRAREiContainer" },
  };
  static J2ObjcClassInfo _CCPBVFormsManager_$1 = { "$1", "com.sparseware.bellavista.oe", "FormsManager", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVFormsManager_$1;
}

@end
@implementation CCPBVFormsManager_$1_$1

- (void)run {
  [((RAREWindowViewer *) nil_chk(this$0_->val$w_)) hideWaitCursor];
  [CCPBVFormsManager handleGroupWithRAREWindowViewer:this$0_->val$w_ withRAREUTJSONObject:this$0_->val$ggfield_ withRAREiContainer:this$0_->val$group_];
}

- (id)initWithCCPBVFormsManager_$1:(CCPBVFormsManager_$1 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFormsManager_$1" },
  };
  static J2ObjcClassInfo _CCPBVFormsManager_$1_$1 = { "$1", "com.sparseware.bellavista.oe", "FormsManager$$1", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVFormsManager_$1_$1;
}

@end
@implementation CCPBVFormsManager_$2

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  if (!canceled && [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) isEqual:returnValue]) {
    @try {
      [CCPBVFormsManager updateValueFromWidgetWithRAREiWidget:val$group_];
    }
    @finally {
      [((id<RAREiContainer>) nil_chk(val$group_)) dispose];
    }
  }
}

- (id)initWithRAREiContainer:(id<RAREiContainer>)capture$0 {
  val$group_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "val$group_", NULL, 0x1012, "LRAREiContainer" },
  };
  static J2ObjcClassInfo _CCPBVFormsManager_$2 = { "$2", "com.sparseware.bellavista.oe", "FormsManager", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVFormsManager_$2;
}

@end
