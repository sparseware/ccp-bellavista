//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/oe/Ordering.java
//
//  Created by decoteaud on 12/2/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/ui/ActionBar.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIAction.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/UIImageIcon.h"
#include "com/appnativa/rare/ui/UIProperties.h"
#include "com/appnativa/rare/ui/ViewerCreator.h"
#include "com/appnativa/rare/ui/iPlatformIcon.h"
#include "com/appnativa/rare/ui/painter/iBackgroundPainter.h"
#include "com/appnativa/rare/ui/painter/iComponentPainter.h"
#include "com/appnativa/rare/ui/painter/iPlatformComponentPainter.h"
#include "com/appnativa/rare/viewer/ListBoxViewer.h"
#include "com/appnativa/rare/viewer/TableViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iTarget.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/OrderManager.h"
#include "com/sparseware/bellavista/Orders.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/oe/Ordering.h"
#include "java/io/FileNotFoundException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/net/MalformedURLException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/EventObject.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@implementation CCPBVOrdering

- (id)init {
  return [super init];
}

- (void)onItemsListActionWithNSString:(NSString *)eventName
                      withRAREiWidget:(id<RAREiWidget>)widget
              withJavaUtilEventObject:(JavaUtilEventObject *)event {
  long long int time = [JavaLangSystem currentTimeMillis];
  if (lastShowOrderFormTime_ + 500 < time) {
    lastShowOrderFormTime_ = time;
    RARERenderableDataItem *row = (RARERenderableDataItem *) check_class_cast([((id<RAREiWidget>) nil_chk(widget)) getSelectionData], [RARERenderableDataItem class]);
    NSString *type = [((RARERenderableDataItem *) nil_chk([((RARERenderableDataItem *) nil_chk(row)) getWithInt:1])) description];
    [CCPBVOrderManager showOrderFormWithNSString:type withNSString:nil withRARERenderableDataItem:[row getWithInt:0] withNSString:[((RARERenderableDataItem *) nil_chk([row getWithInt:2])) description]];
  }
}

- (void)onTableActionWithNSString:(NSString *)eventName
                  withRAREiWidget:(id<RAREiWidget>)widget
          withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RAREWindowViewer *w = [((id<RAREiWidget>) nil_chk(widget)) getWindow];
  id<RAREiTarget> target = [((RAREWindowViewer *) nil_chk(w)) getTargetWithNSString:@"orderingContentViewer"];
  if (target == nil) {
    [super onTableActionWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
    return;
  }
  id<RAREiContainer> fv = [widget getFormViewer];
  id<RAREiViewer> v = [((id<RAREiTarget>) nil_chk(target)) getViewer];
  if ((v == nil) || ![((NSString *) nil_chk([v getName])) isEqual:@"documentViewer"]) {
    id<RAREiFunctionCallback> cb = [[CCPBVOrdering_$1 alloc] initWithCCPBVOrdering:self withRAREWindowViewer:w withRAREiWidget:widget withRAREiTarget:target withNSString:eventName withJavaUtilEventObject:event];
    @try {
      (void) [RAREViewerCreator createViewerWithRAREiWidget:fv withRAREActionLink:[[RAREActionLink alloc] initWithNSString:@"/document_viewer.rml"] withRAREiFunctionCallback:cb];
      [w showWaitCursor];
    }
    @catch (JavaNetMalformedURLException *e) {
      [CCPBVUtils handleErrorWithJavaLangThrowable:e];
    }
  }
  else {
    [super onTableActionWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
  }
}

- (void)onFilterActionWithNSString:(NSString *)eventName
                   withRAREiWidget:(id<RAREiWidget>)widget
           withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [CCPBVOrderManager showFilterDialogWithRAREiWidget:widget withBoolean:YES];
}

- (void)onFilterTypeActionWithNSString:(NSString *)eventName
                       withRAREiWidget:(id<RAREiWidget>)widget
               withJavaUtilEventObject:(JavaUtilEventObject *)event {
  BOOL ok = [((NSString *) nil_chk([CCPBVOrders medicationOrderType])) isEqual:[((id<RAREiWidget>) nil_chk(widget)) getSelectionDataAsString]];
  RAREListBoxViewer *route = (RAREListBoxViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:@"route"], [RAREListBoxViewer class]);
  if (ok) {
    [route setAllWithJavaUtilCollection:(id<JavaUtilCollection>) check_protocol_cast([((RAREListBoxViewer *) nil_chk(route)) getLinkedData], @protocol(JavaUtilCollection))];
    [route setSelectedIndexWithInt:[route indexOfLinkedDataEqualsWithId:[CCPBVOrders defaultRoute]]];
  }
  else {
    [((RAREListBoxViewer *) nil_chk(route)) clear];
  }
}

- (void)onShownWithNSString:(NSString *)eventName
            withRAREiWidget:(id<RAREiWidget>)widget
    withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [CCPBVOrderManager showFilterDialogWithRAREiWidget:[((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getFormViewer])) getWidgetWithNSString:@"filter"] withBoolean:NO];
}

- (void)onSearchFieldActionWithNSString:(NSString *)eventName
                        withRAREiWidget:(id<RAREiWidget>)widget
                withJavaUtilEventObject:(JavaUtilEventObject *)event {
  NSString *text = [((NSString *) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getValueAsString])) lowercaseStringWithJRELocale:[JavaUtilLocale getDefault]];
  RAREListBoxViewer *lb = (RAREListBoxViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([widget getFormViewer])) getWidgetWithNSString:@"items"], [RAREListBoxViewer class]);
  if (noOrdersFound_ == nil) {
    noOrdersFound_ = [[RARERenderableDataItem alloc] initWithId:[RAREPlatform getResourceAsStringWithNSString:@"bv.oe.text.no_orders_found"]];
    [noOrdersFound_ setSelectableWithBoolean:NO];
    [noOrdersFound_ setForegroundWithRAREUIColor:[((RAREUIColor *) nil_chk([RAREUIColorHelper getForeground])) getDisabledColor]];
    [noOrdersFound_ setIconWithRAREiPlatformIcon:[RAREPlatform getResourceAsIconWithNSString:@"Rare.icon.empty"]];
  }
  int len = [((NSString *) nil_chk(text)) sequenceLength];
  if (len == 0) {
    return;
  }
  if ([CCPBVUtils isDemo]) {
    NSString *penicillin = @"penicillin";
    int i = 0;
    if (len < [penicillin sequenceLength]) {
      for (i = 0; i < len; i++) {
        if ([text charAtWithInt:i] != [penicillin charAtWithInt:i]) {
          break;
        }
      }
    }
    if (i != len) {
      [((RAREListBoxViewer *) nil_chk(lb)) setAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ noOrdersFound_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
      return;
    }
    text = penicillin;
  }
  [CCPBVOrderManager searchCatalogWithNSString:text withRAREiFunctionCallback:[[CCPBVOrdering_$2 alloc] initWithCCPBVOrdering:self withRAREListBoxViewer:lb]];
  [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) showWaitCursor];
}

- (void)onConfigureWithNSString:(NSString *)eventName
                withRAREiWidget:(id<RAREiWidget>)widget
        withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [super onConfigureWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREUIAction *) nil_chk([((RAREWindowViewer *) nil_chk(w)) getActionWithNSString:@"bv.action.new_orders"])) setEnabledWithBoolean:NO];
  [((RAREUIAction *) nil_chk([w getActionWithNSString:@"bv.action.change_patient"])) setEnabledWithBoolean:NO];
  id<RAREiComponentPainter> cp = [((RAREActionBar *) nil_chk([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getActionBar])) getComponentPainter];
  actionbarPainter_ = [((id<RAREiComponentPainter>) nil_chk(cp)) getBackgroundPainter];
  [cp setBackgroundPainterWithRAREiBackgroundPainter:[((RAREUIProperties *) nil_chk([RAREPlatform getUIDefaults])) getBackgroundPainterWithNSString:@"orderEntryColor"] withBoolean:NO];
}

- (void)onDisposeWithNSString:(NSString *)eventName
              withRAREiWidget:(id<RAREiWidget>)widget
      withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [super onDisposeWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREUIAction *) nil_chk([((RAREWindowViewer *) nil_chk(w)) getActionWithNSString:@"bv.action.new_orders"])) setEnabledWithBoolean:YES];
  [((RAREUIAction *) nil_chk([w getActionWithNSString:@"bv.action.change_patient"])) setEnabledWithBoolean:YES];
  [((id<RAREiPlatformComponentPainter>) nil_chk([((RAREActionBar *) nil_chk([w getActionBar])) getComponentPainter])) setBackgroundPainterWithRAREiBackgroundPainter:actionbarPainter_ withBoolean:NO];
  id<RAREiContainer> fv = [((id<RAREiWidget>) nil_chk(widget)) getFormViewer];
  id<RAREiViewer> v = (id<RAREiViewer>) check_protocol_cast([((id<RAREiContainer>) nil_chk(fv)) getAttributeWithNSString:@"orderEditor"], @protocol(RAREiViewer));
  if ((v != nil) && ([v getParent] == nil)) {
    [v dispose];
  }
}

- (void)onTableActionExWithNSString:(NSString *)eventName
                    withRAREiWidget:(id<RAREiWidget>)widget
            withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [super onTableActionWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
}

- (void)copyAllFieldsTo:(CCPBVOrdering *)other {
  [super copyAllFieldsTo:other];
  other->actionbarPainter_ = actionbarPainter_;
  other->lastShowOrderFormTime_ = lastShowOrderFormTime_;
  other->noOrdersFound_ = noOrdersFound_;
  other->orderingActionbarPainter_ = orderingActionbarPainter_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onTableActionExWithNSString:withRAREiWidget:withJavaUtilEventObject:", NULL, "V", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "noOrdersFound_", NULL, 0x0, "LRARERenderableDataItem" },
    { "actionbarPainter_", NULL, 0x0, "LRAREiBackgroundPainter" },
    { "orderingActionbarPainter_", NULL, 0x0, "LRAREiBackgroundPainter" },
    { "lastShowOrderFormTime_", NULL, 0x0, "J" },
  };
  static J2ObjcClassInfo _CCPBVOrdering = { "Ordering", "com.sparseware.bellavista.oe", NULL, 0x1, 1, methods, 4, fields, 0, NULL};
  return &_CCPBVOrdering;
}

@end
@implementation CCPBVOrdering_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if (![((id<RAREiWidget>) nil_chk(val$widget_)) isDisposed]) {
    if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
      [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
    }
    else {
      [CCPBVUtils pushViewerWithRAREiViewer:(id<RAREiViewer>) check_protocol_cast(returnValue, @protocol(RAREiViewer)) withRAREiTarget:val$target_ withBoolean:NO withJavaLangRunnable:[[CCPBVOrdering_$1_$1 alloc] initWithCCPBVOrdering_$1:self]];
      [this$0_ onTableActionExWithNSString:val$eventName_ withRAREiWidget:val$widget_ withJavaUtilEventObject:val$event_];
    }
  }
}

- (id)initWithCCPBVOrdering:(CCPBVOrdering *)outer$
       withRAREWindowViewer:(RAREWindowViewer *)capture$0
            withRAREiWidget:(id<RAREiWidget>)capture$1
            withRAREiTarget:(id<RAREiTarget>)capture$2
               withNSString:(NSString *)capture$3
    withJavaUtilEventObject:(JavaUtilEventObject *)capture$4 {
  this$0_ = outer$;
  val$w_ = capture$0;
  val$widget_ = capture$1;
  val$target_ = capture$2;
  val$eventName_ = capture$3;
  val$event_ = capture$4;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVOrdering" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
    { "val$target_", NULL, 0x1012, "LRAREiTarget" },
    { "val$eventName_", NULL, 0x1012, "LNSString" },
    { "val$event_", NULL, 0x1012, "LJavaUtilEventObject" },
  };
  static J2ObjcClassInfo _CCPBVOrdering_$1 = { "$1", "com.sparseware.bellavista.oe", "Ordering", 0x8000, 0, NULL, 6, fields, 0, NULL};
  return &_CCPBVOrdering_$1;
}

@end
@implementation CCPBVOrdering_$1_$1

- (void)run {
  if (![((id<RAREiWidget>) nil_chk(this$0_->val$widget_)) isDisposed]) {
    [((RARETableViewer *) check_class_cast(this$0_->val$widget_, [RARETableViewer class])) clearSelection];
  }
  [CCPBVUtils popViewerStackWithBoolean:YES];
}

- (id)initWithCCPBVOrdering_$1:(CCPBVOrdering_$1 *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVOrdering_$1" },
  };
  static J2ObjcClassInfo _CCPBVOrdering_$1_$1 = { "$1", "com.sparseware.bellavista.oe", "Ordering$$1", 0x8000, 0, NULL, 1, fields, 0, NULL};
  return &_CCPBVOrdering_$1_$1;
}

@end
@implementation CCPBVOrdering_$2

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREWindowViewer *) nil_chk(w)) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    if ([returnValue isKindOfClass:[JavaIoFileNotFoundException class]]) {
      [((RAREListBoxViewer *) nil_chk(val$lb_)) setAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ this$0_->noOrdersFound_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
      [val$lb_ setLinkedDataWithId:nil];
    }
    else {
      [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
    }
  }
  else {
    RAREUTObjectHolder *oh = (RAREUTObjectHolder *) check_class_cast(returnValue, [RAREUTObjectHolder class]);
    id<JavaUtilList> list = (oh == nil) ? nil : (id<JavaUtilList>) check_protocol_cast(oh->value_, @protocol(JavaUtilList));
    int len = (list == nil) ? 0 : [list size];
    id<JavaUtilMap> icons = [w getIcons];
    JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:@"bv.icon.order_type_"];
    int sblen = [sb sequenceLength];
    JavaUtilArrayList *rows = [[JavaUtilArrayList alloc] initWithInt:(len == 0) ? 1 : len];
    BOOL demo = [CCPBVUtils isDemo];
    NSString *route = demo ? [((RAREUTJSONObject *) nil_chk([CCPBVOrderManager getOrdersFilter])) optStringWithNSString:@"route"] : nil;
    for (int i = 0; i < len; i++) {
      RARERenderableDataItem *row = [list getWithInt:i];
      RARERenderableDataItem *item = [((RARERenderableDataItem *) nil_chk(row)) getWithInt:0];
      if (demo && ([route sequenceLength] > 0)) {
        RARERenderableDataItem *di = [row getItemExWithInt:3];
        if ((di != nil) && ![di valueEqualsWithId:route]) {
          continue;
        }
      }
      item = [((RARERenderableDataItem *) nil_chk(item)) copy__];
      [((RARERenderableDataItem *) nil_chk(item)) setLinkedDataWithId:row];
      [sb setLengthWithInt:sblen];
      (void) [sb appendWithNSString:(NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:1])) getValue], [NSString class])];
      id<RAREiPlatformIcon> icon = [((id<JavaUtilMap>) nil_chk(icons)) getWithId:[sb description]];
      if (icon != nil) {
        [item setIconWithRAREiPlatformIcon:icon];
      }
      [rows addWithId:item];
    }
    if ([rows isEmpty]) {
      [rows addWithId:this$0_->noOrdersFound_];
    }
    [((RAREListBoxViewer *) nil_chk(val$lb_)) setAllWithJavaUtilCollection:rows];
  }
}

- (id)initWithCCPBVOrdering:(CCPBVOrdering *)outer$
      withRAREListBoxViewer:(RAREListBoxViewer *)capture$0 {
  this$0_ = outer$;
  val$lb_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVOrdering" },
    { "val$lb_", NULL, 0x1012, "LRAREListBoxViewer" },
  };
  static J2ObjcClassInfo _CCPBVOrdering_$2 = { "$2", "com.sparseware.bellavista.oe", "Ordering", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVOrdering_$2;
}

@end
