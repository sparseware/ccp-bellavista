//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/oe/FieldValue.java
//
//  Created by decoteaud on 3/14/16.
//

#include "IOSClass.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/converters/DateContext.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/oe/FieldValue.h"
#include "com/sparseware/bellavista/oe/OrderFields.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"

@implementation CCPBVFieldValue

- (id)initWithRAREUTJSONObject:(RAREUTJSONObject *)field {
  if (self = [super init]) {
    self->field_ = field;
    self->value_ = [((RAREUTJSONObject *) nil_chk(field)) optStringWithNSString:[CCPBVOrderFields DEFAULT_VALUE] withNSString:nil];
    self->displayValue_ = [field optStringWithNSString:[CCPBVOrderFields DEFAULT_VALUE_DISPLAY] withNSString:nil];
  }
  return self;
}

- (id)initWithRAREUTJSONObject:(RAREUTJSONObject *)field
                        withId:(id)value {
  if (self = [super init]) {
    self->field_ = field;
    self->value_ = value;
  }
  return self;
}

- (id)initWithId:(id)value
    withNSString:(NSString *)displayValue {
  if (self = [super init]) {
    self->value_ = value;
    self->displayValue_ = displayValue;
  }
  return self;
}

- (void)clear {
  value_ = nil;
  displayValue_ = nil;
}

- (void)reset {
  self->value_ = [((RAREUTJSONObject *) nil_chk(field_)) optStringWithNSString:[CCPBVOrderFields DEFAULT_VALUE] withNSString:nil];
  self->displayValue_ = [field_ optStringWithNSString:[CCPBVOrderFields DEFAULT_VALUE_DISPLAY] withNSString:nil];
}

- (id)clone {
  return [super clone];
}

- (NSString *)valueToString {
  {
    JavaTextSimpleDateFormat *df;
    switch ([[CCPBVOrderFields getFieldTypeWithRAREUTJSONObject:field_] ordinal]) {
      case CCPBVOrderFields_FieldType_DATE_TIME:
      return [RAREFunctions convertDateTimeWithId:value_ withBoolean:NO];
      case CCPBVOrderFields_FieldType_DATE:
      return [RAREFunctions convertDateWithId:value_ withBoolean:NO];
      case CCPBVOrderFields_FieldType_TIME:
      df = (JavaTextSimpleDateFormat *) check_class_cast([((RAREDateContext *) nil_chk([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDefaultTimeContext])) getItemFormat], [JavaTextSimpleDateFormat class]);
      return [RAREFunctions convertDateWithId:value_ withNSString:[((JavaTextSimpleDateFormat *) nil_chk(df)) toPattern]];
      default:
      return (value_ == nil) ? nil : [value_ description];
    }
  }
}

- (NSString *)description {
  if (displayValue_ != nil) {
    return displayValue_;
  }
  return (value_ == nil) ? nil : [value_ description];
}

- (CCPBVFieldValue *)copy__ {
  @try {
    return (CCPBVFieldValue *) check_class_cast([self clone], [CCPBVFieldValue class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[RAREApplicationException alloc] initWithJavaLangThrowable:e];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllFieldsTo:(CCPBVFieldValue *)other {
  [super copyAllFieldsTo:other];
  other->displayValue_ = displayValue_;
  other->field_ = field_;
  other->groupField_ = groupField_;
  other->value_ = value_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "clone", NULL, "LNSObject", 0x1, "JavaLangCloneNotSupportedException" },
    { "valueToString", NULL, "LNSString", 0x1, NULL },
    { "copy__", NULL, "LCCPBVFieldValue", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x1, "LNSObject" },
    { "displayValue_", NULL, 0x1, "LNSString" },
    { "field_", NULL, 0x1, "LRAREUTJSONObject" },
    { "groupField_", NULL, 0x1, "LRAREUTJSONObject" },
  };
  static J2ObjcClassInfo _CCPBVFieldValue = { "FieldValue", "com.sparseware.bellavista.oe", NULL, 0x1, 3, methods, 4, fields, 0, NULL};
  return &_CCPBVFieldValue;
}

@end
