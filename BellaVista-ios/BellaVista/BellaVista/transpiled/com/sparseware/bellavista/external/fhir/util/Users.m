//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/util/Users.java
//
//  Created by decoteaud on 3/14/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/MessageException.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/FHIRUtils.h"
#include "com/sparseware/bellavista/external/fhir/Patient.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/external/fhir/util/Users.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/iHttpConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Writer.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "java/util/List.h"

@implementation CCPBVFHIRUsers

static IOSObjectArray * CCPBVFHIRUsers_info_fields_;

+ (IOSObjectArray *)info_fields {
  return CCPBVFHIRUsers_info_fields_;
}

+ (void)setInfo_fields:(IOSObjectArray *)info_fields {
  CCPBVFHIRUsers_info_fields_ = info_fields;
}

- (id)init {
  if (self = [super initWithNSString:@"Practitioner"]) {
    usersSupported_ = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceWithNSString:resourceName_] != nil;
  }
  return self;
}

- (void)infoWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  BOOL json;
  [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
  if ([CCPBVFHIRFHIRUtils isJSONFormatRequestedWithCCPBVActionPath:path]) {
    [headers mimeJson];
    json = YES;
  }
  else {
    [headers mimeRow];
    json = NO;
  }
  JavaIoWriter *w = [((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter];
  NSString *id_ = [self removeExtensionWithNSString:[((CCPBVActionPath *) nil_chk(path)) shift]];
  if (id_ == nil) {
    @throw [[CCPBVMessageException alloc] initWithNSString:@"missing id for user info"];
  }
  id<JavaUtilList> team = [CCPBVFHIRPatient getSelectedPatientCareteam];
  RAREUTJSONObject *user = nil;
  if (team != nil) {
    for (CCPBVFHIRPatient_Practitioner * __strong p in team) {
      if ([((NSString *) nil_chk([((CCPBVFHIRPatient_Practitioner *) nil_chk(p)) getID])) isEqual:id_]) {
        user = [p getUserObjectWithBoolean:YES withBoolean:usersSupported_];
        break;
      }
    }
  }
  if (user == nil) {
    CCPBVActionLinkEx *l = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) createResourceLinkWithNSString:[NSString stringWithFormat:@"Practitioner/%@", id_] withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
    @try {
      if (usersSupported_) {
        user = [[RAREUTJSONObject alloc] initWithNSString:[((CCPBVActionLinkEx *) nil_chk(l)) getContentAsString]];
      }
      else {
        user = [[RAREUTJSONObject alloc] init];
        (void) [user putWithNSString:@"id" withId:[server_ getResourceAsStringWithNSString:@"bv.text.user_info_not_supported"]];
      }
    }
    @finally {
      [((CCPBVActionLinkEx *) nil_chk(l)) close];
    }
  }
  if (json) {
    [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[((RAREUTJSONObject *) nil_chk(user)) description]];
  }
  else {
    if (CCPBVFHIRUsers_info_fields_ == nil) {
      CCPBVFHIRUsers_info_fields_ = [@"id^xmpp_id^name^dob^gender^speciality^is_provider^email^office_number^mobile_number^fax_number^street^city^state_or_province^zip_code^country^photo" split:@"\\^"];
    }
    {
      IOSObjectArray *a__ = CCPBVFHIRUsers_info_fields_;
      id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *s = (*b__++);
        [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:s]];
        [w writeWithInt:'^'];
      }
    }
    [((JavaIoWriter *) nil_chk(w)) writeWithInt:0x000a];
  }
}

+ (RAREUTJSONObject *)populateUserWithNSString:(NSString *)id_
                          withRAREUTJSONObject:(RAREUTJSONObject *)fhirPerson {
  RAREUTJSONObject *o = [[RAREUTJSONObject alloc] init];
  RAREUTJSONObject *name = [((RAREUTJSONObject *) nil_chk(fhirPerson)) getJSONObjectWithNSString:@"name"];
  NSString *s = [((RAREUTJSONObject *) nil_chk(name)) optStringWithNSString:@"text" withNSString:nil];
  if (s == nil) {
    JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
    RAREUTJSONArray *a = [name optJSONArrayWithNSString:@"family"];
    int len = (a == nil) ? 0 : [a length];
    for (int i = 0; i < len; i++) {
      if (i > 0) {
        (void) [sb appendWithNSString:@" "];
      }
      (void) [sb appendWithNSString:[((RAREUTJSONArray *) nil_chk(a)) getStringWithInt:i]];
    }
    if ([sb sequenceLength] > 0) {
      (void) [sb appendWithNSString:@","];
    }
    a = [name optJSONArrayWithNSString:@"given"];
    len = (a == nil) ? 0 : [a length];
    for (int i = 0; i < len; i++) {
      if (i > 0) {
        (void) [sb appendWithNSString:@" "];
      }
      (void) [sb appendWithNSString:[((RAREUTJSONArray *) nil_chk(a)) getStringWithInt:i]];
    }
    s = [sb description];
  }
  (void) [o putWithNSString:@"name" withId:s];
  s = [fhirPerson optStringWithNSString:@"sub"];
  if (s != nil) {
    (void) [o putWithNSString:@"username" withId:s];
  }
  (void) [o putWithNSString:@"gender" withId:[fhirPerson optStringWithNSString:@"gender"]];
  (void) [o putWithNSString:@"dob" withId:[fhirPerson optStringWithNSString:@"birthDate"]];
  (void) [o putWithNSString:@"id" withId:id_];
  [CCPBVFHIRFHIRUtils populateTelcomWithRAREUTJSONArray:[fhirPerson optJSONArrayWithNSString:@"telecom"] withRAREUTJSONObject:o];
  RAREUTJSONArray *a = [fhirPerson optJSONArrayWithNSString:@"address"];
  if (a != nil) {
    [CCPBVFHIRFHIRUtils populateAddressWithRAREUTJSONObject:[a findJSONObjectWithNSString:@"use" withNSString:@"work"] withRAREUTJSONObject:o];
  }
  a = [fhirPerson optJSONArrayWithNSString:@"practitionerRole"];
  int len = (a == nil) ? 0 : [a length];
  for (int i = 0; i < len; i++) {
    NSString *role;
    @try {
      role = [CCPBVFHIRFHIRUtils getBestMedicalCodeWithRAREUTJSONObject:[((RAREUTJSONObject *) nil_chk([((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i])) optJSONObjectWithNSString:@"code"]];
      if ([@"doctor" equalsIgnoreCase:role]) {
        (void) [o putWithNSString:@"is_provider" withBoolean:YES];
        break;
      }
    }
    @catch (JavaLangException *e) {
      [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) ignoreExceptionWithJavaLangException:e];
    }
  }
  return o;
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
}

- (void)copyAllFieldsTo:(CCPBVFHIRUsers *)other {
  [super copyAllFieldsTo:other];
  other->usersSupported_ = usersSupported_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "infoWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "populateUserWithNSString:withRAREUTJSONObject:", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "info_fields_", NULL, 0xc, "LIOSObjectArray" },
    { "usersSupported_", NULL, 0x4, "Z" },
  };
  static J2ObjcClassInfo _CCPBVFHIRUsers = { "Users", "com.sparseware.bellavista.external.fhir.util", NULL, 0x1, 3, methods, 2, fields, 0, NULL};
  return &_CCPBVFHIRUsers;
}

@end
