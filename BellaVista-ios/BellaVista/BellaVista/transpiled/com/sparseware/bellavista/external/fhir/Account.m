//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/Account.java
//
//  Created by decoteaud on 3/14/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/external/fhir/Account.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/aRemoteService.h"
#include "com/sparseware/bellavista/service/iHttpConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Writer.h"
#include "java/net/URL.h"
#include "java/util/Map.h"

@implementation CCPBVFHIRAccount

- (id)init {
  return [super init];
}

- (void)loginWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                  withCCPBVActionPath:(CCPBVActionPath *)path
                withJavaIoInputStream:(JavaIoInputStream *)data
                 withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  id<JavaUtilMap> map = [self getQueryParamsWithJavaNetURL:[((id<CCPBViHttpConnection>) nil_chk(conn)) getURL] withJavaIoInputStream:data];
  if (map != nil) {
    NSString *username = (NSString *) check_class_cast([map getWithId:@"username"], [NSString class]);
    NSString *password = (NSString *) check_class_cast([map getWithId:@"password"], [NSString class]);
    if ((username != nil) && (password != nil)) {
      NSString *b64 = (NSString *) check_class_cast([map getWithId:@"base64"], [NSString class]);
      if ((password != nil) && [@"true" isEqual:b64]) {
        password = [RAREFunctions decodeBase64WithNSString:password];
      }
    }
  }
  RAREUTJSONObject *user = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getUser];
  if (user == nil) {
    [((CCPBVHttpHeaders *) nil_chk(headers)) setStatusWithNSString:@"HTTP/1.1 401 Ok"];
    [headers mimeText];
    [((CCPBVContentWriter *) nil_chk([conn getContentWriter])) writeWithNSString:@"Unauthorized"];
  }
  else {
    [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
    [headers mimeJson];
    [((CCPBVContentWriter *) nil_chk([conn getContentWriter])) writeWithNSString:[user description]];
  }
}

- (void)logoutWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                   withCCPBVActionPath:(CCPBVActionPath *)path
                 withJavaIoInputStream:(JavaIoInputStream *)data
                  withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [((CCPBVFHIRFHIRServer *) nil_chk(server_)) logout];
  [self noDataWithCCPBViHttpConnection:conn withCCPBVActionPath:path withBoolean:NO withCCPBVHttpHeaders:headers];
}

- (void)statusWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                   withCCPBVActionPath:(CCPBVActionPath *)path
                 withJavaIoInputStream:(JavaIoInputStream *)data
                  withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) getUser] == nil) {
    [self loginWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
  }
  else {
    [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
    [headers mimeJson];
    [((CCPBVContentWriter *) nil_chk([((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter])) writeWithNSString:@"{\"success\": true}"];
  }
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "loginWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "logoutWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "statusWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
  };
  static J2ObjcClassInfo _CCPBVFHIRAccount = { "Account", "com.sparseware.bellavista.external.fhir", NULL, 0x1, 4, methods, 0, NULL, 0, NULL};
  return &_CCPBVFHIRAccount;
}

@end
