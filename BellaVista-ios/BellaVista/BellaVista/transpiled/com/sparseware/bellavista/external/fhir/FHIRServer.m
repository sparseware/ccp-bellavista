//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/FHIRServer.java
//
//  Created by decoteaud on 2/17/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/aWorkerTask.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/iCancelableFuture.h"
#include "com/appnativa/rare/iConstants.h"
#include "com/appnativa/rare/iFunctionCallback.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/net/HTTPException.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/rare/spot/Browser.h"
#include "com/appnativa/rare/spot/Viewer.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIColorHelper.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/viewer/WebBrowser.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/util/Base64.h"
#include "com/appnativa/util/FileResolver.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/ObjectHolder.h"
#include "com/appnativa/util/OrderedProperties.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/SimpleDateFormatEx.h"
#include "com/appnativa/util/Streams.h"
#include "com/appnativa/util/iURLResolver.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONTokener.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/MessageException.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/SmartDateContext.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/aProtocolHandler.h"
#include "com/sparseware/bellavista/external/fhir/FHIRHttpURLConnection.h"
#include "com/sparseware/bellavista/external/fhir/FHIRJSONWatcher.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/Labs.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/external/fhir/util/Patients.h"
#include "com/sparseware/bellavista/external/fhir/util/Users.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/aRemoteService.h"
#include "java/io/File.h"
#include "java/io/FileReader.h"
#include "java/io/FileWriter.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/net/URLStreamHandler.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation CCPBVFHIRFHIRServer

static CCPBVFHIRFHIRServer * CCPBVFHIRFHIRServer__instance_;
static RAREUTJSONObject * CCPBVFHIRFHIRServer_localConfig_;
static CCPBVSmartDateContext * CCPBVFHIRFHIRServer_dateContext_;
static CCPBVSmartDateContext * CCPBVFHIRFHIRServer_dateTimeContext_;

+ (CCPBVFHIRFHIRServer *)_instance {
  return CCPBVFHIRFHIRServer__instance_;
}

+ (void)set_instance:(CCPBVFHIRFHIRServer *)_instance {
  CCPBVFHIRFHIRServer__instance_ = _instance;
}

+ (RAREUTJSONObject *)localConfig {
  return CCPBVFHIRFHIRServer_localConfig_;
}

+ (void)setLocalConfig:(RAREUTJSONObject *)localConfig {
  CCPBVFHIRFHIRServer_localConfig_ = localConfig;
}

+ (CCPBVSmartDateContext *)dateContext {
  return CCPBVFHIRFHIRServer_dateContext_;
}

+ (void)setDateContext:(CCPBVSmartDateContext *)dateContext {
  CCPBVFHIRFHIRServer_dateContext_ = dateContext;
}

+ (CCPBVSmartDateContext *)dateTimeContext {
  return CCPBVFHIRFHIRServer_dateTimeContext_;
}

+ (void)setDateTimeContext:(CCPBVSmartDateContext *)dateTimeContext {
  CCPBVFHIRFHIRServer_dateTimeContext_ = dateTimeContext;
}

- (id)init {
  if (self = [super init]) {
    publisher_ = @"";
    demoMode_ = YES;
    CCPBVFHIRFHIRServer__instance_ = self;
  }
  return self;
}

- (id)initWithNSString:(NSString *)endPoint {
  if (self = [super init]) {
    publisher_ = @"";
    demoMode_ = YES;
    CCPBVFHIRFHIRServer__instance_ = self;
    if ([((NSString *) nil_chk(endPoint)) hasSuffix:@"/"]) {
      self->endPoint_ = endPoint;
      self->endPointNoSlash_ = [endPoint substring:0 endIndex:[endPoint sequenceLength] - 1];
    }
    else {
      self->endPoint_ = [NSString stringWithFormat:@"%@/", endPoint];
      self->endPointNoSlash_ = endPoint;
    }
  }
  return self;
}

- (CCPBVActionLinkEx *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                                  withJavaNetURL:(JavaNetURL *)url {
  CCPBVActionLinkEx *l = [super createLinkWithRAREiWidget:context withJavaNetURL:url];
  [self decorateLinkWithRAREActionLink:l];
  [((CCPBVActionLinkEx *) nil_chk(l)) setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  return l;
}

- (CCPBVActionLinkEx *)createLinkWithRAREiWidget:(id<RAREiWidget>)context
                                  withJavaNetURL:(JavaNetURL *)url
                                    withNSString:(NSString *)type {
  CCPBVActionLinkEx *l = [super createLinkWithRAREiWidget:context withJavaNetURL:url withNSString:type];
  [self decorateLinkWithRAREActionLink:l];
  [((CCPBVActionLinkEx *) nil_chk(l)) setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  return l;
}

- (CCPBVActionLinkEx *)createLinkWithNSString:(NSString *)url {
  if (![((NSString *) nil_chk(url)) hasPrefix:@"http"]) {
    if ([url hasPrefix:@"/"]) {
      url = [url substring:1];
    }
    url = [NSString stringWithFormat:@"%@%@", endPoint_, url];
  }
  CCPBVActionLinkEx *l = [[CCPBVActionLinkEx alloc] initWithNSString:url];
  [self decorateLinkWithRAREActionLink:l];
  [l setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  return l;
}

- (CCPBVActionLinkEx *)createLinkWithNSString:(NSString *)object
                              withJavaUtilMap:(id<JavaUtilMap>)params {
  CCPBVActionLinkEx *l = [[CCPBVActionLinkEx alloc] initWithNSString:[NSString stringWithFormat:@"%@%@", endPoint_, object]];
  [self decorateLinkWithRAREActionLink:l];
  [l setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  if (params != nil) {
    [l setAttributesWithJavaUtilMap:params];
  }
  return l;
}

- (CCPBVActionLinkEx *)createLinkWithJavaNetURL:(JavaNetURL *)url {
  CCPBVActionLinkEx *l = [super createLinkWithRAREiWidget:nil withJavaNetURL:url];
  [self decorateLinkWithRAREActionLink:l];
  [((CCPBVActionLinkEx *) nil_chk(l)) setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  return l;
}

- (CCPBVActionLinkEx *)createLinkWithJavaNetURL:(JavaNetURL *)url
                                   withNSString:(NSString *)type {
  CCPBVActionLinkEx *l = [super createLinkWithRAREiWidget:nil withJavaNetURL:url withNSString:type];
  [self decorateLinkWithRAREActionLink:l];
  [((CCPBVActionLinkEx *) nil_chk(l)) setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  return l;
}

- (CCPBVActionLinkEx *)createResourceLinkWithNSString:(NSString *)resource
                                    withNSStringArray:(IOSObjectArray *)params {
  CCPBVActionLinkEx *l = [[CCPBVActionLinkEx alloc] initWithNSString:[self fixLinkWithNSString:resource]];
  [self decorateLinkWithRAREActionLink:l];
  [l setRequestHeaderWithNSString:@"Accept" withNSString:@"application/json+fhir"];
  if ((params != nil) && ((int) [params count] > 0)) {
    int len = (int) [params count];
    JavaUtilHashMap *map = [[JavaUtilHashMap alloc] initWithInt:len / 2];
    int i = 0;
    while (i < len) {
      (void) [map putWithId:IOSObjectArray_Get(params, i++) withId:IOSObjectArray_Get(params, i++)];
    }
    [l setAttributesWithJavaUtilMap:map];
  }
  return l;
}

- (JavaNetURLStreamHandler *)createURLStreamHandlerWithNSString:(NSString *)protocol {
  if (streamHandler_ == nil) {
    streamHandler_ = [[CCPBVFHIRFHIRServer_StreamHandler alloc] init];
  }
  return streamHandler_;
}

- (void)customLoginWithCCPBVSettings_Server:(CCPBVSettings_Server *)server
                  withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  [self customLoginExWithCCPBVSettings_Server:server withRAREiFunctionCallback:cb withBoolean:NO];
}

- (JavaIoStringWriter *)dataNotAvailableWithBoolean:(BOOL)row
                               withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
                                  withNSStringArray:(IOSObjectArray *)columnNames
                                            withInt:(int)column {
  [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
  NSString *ext = @"";
  JavaIoStringWriter *w = [[JavaIoStringWriter alloc] init];
  if ([@"json" isEqual:ext]) {
    [headers mimeJson];
    JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] init];
    RAREUTJSONWriter *jw = [[RAREUTJSONWriter alloc] initWithJavaIoWriter:sw];
    (void) [((RAREUTJSONWriter *) nil_chk([jw object])) keyWithNSString:IOSObjectArray_Get(nil_chk(columnNames), column)];
    (void) [jw object];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"enabled"])) valueWithBoolean:NO];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"value"])) valueWithId:[self getResourceAsStringWithNSString:@"bv.text.data_not_available"]];
    (void) [jw endObject];
    (void) [jw endObject];
    [w writeWithNSString:[sw description]];
  }
  else if ([@"html" isEqual:ext]) {
    [headers mimeHtml];
    [w writeWithNSString:[CCPBVaRemoteService textToHTMLWithNSString:[self getResourceAsStringWithNSString:@"bv.text.data_not_available"]]];
    [w writeWithNSString:@"\n"];
  }
  else if ([@"txt" isEqual:ext]) {
    [headers mimeText];
    [w writeWithNSString:[self getResourceAsStringWithNSString:@"bv.text.data_not_available"]];
    [w writeWithNSString:@"\n"];
  }
  else {
    if (row) {
      [headers mimeRow];
      JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:@"{enabled: false}~"];
      int len = (int) [((IOSObjectArray *) nil_chk(columnNames)) count];
      for (int i = 0; i < len; i++) {
        if (i == column) {
          (void) [sb appendWithNSString:@"{enabled: false}"];
          (void) [sb appendWithNSString:[self getResourceAsStringWithNSString:@"bv.text.data_not_available"]];
        }
        (void) [sb appendWithChar:'^'];
      }
      [w writeWithNSString:[sb description]];
      [w writeWithNSString:@"\n"];
    }
    else {
      [headers mimeList];
      JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:@"{enabled: false}"];
      (void) [sb appendWithNSString:[self getResourceAsStringWithNSString:@"bv.text.data_not_available"]];
      [w writeWithNSString:[sb description]];
      [w writeWithNSString:@"\n"];
    }
  }
  return w;
}

- (void)debugLogWithNSString:(NSString *)msg {
  [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:msg];
}

- (NSString *)fixLinkWithNSString:(NSString *)href {
  NSString *ep = endPointNoSlash_;
  int n = [((NSString *) nil_chk(href)) indexOf:':'];
  if (n != -1) {
    int p = [href indexOf:'/'];
    if (p != -1) {
      if (n < p) {
        if (![href hasPrefix:ep]) {
          @throw [[RAREApplicationException alloc] initWithNSString:[self getStringWithNSString:@"bv.text.bad_fhir_link" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ep, href } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
        }
        else {
          return href;
        }
      }
    }
  }
  if ([href charAtWithInt:0] == '/') {
    href = [NSString stringWithFormat:@"%@%@", ep, href];
  }
  else {
    href = [NSString stringWithFormat:@"%@%@", endPoint_, href];
  }
  return href;
}

- (RAREUIColor *)getColorWithNSString:(NSString *)color {
  if (commandLine_) {
    return [RAREUIColor BLACK];
  }
  return [RAREUIColorHelper getColorWithNSString:color];
}

- (RAREUTJSONObject *)getConfigurationDataWithNSString:(NSString *)name {
  if (commandLine_) {
    return [CCPBVFHIRFHIRServer getLocalConfigurationDataWithNSString:name];
  }
  return (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) getDataWithId:name], [RAREUTJSONObject class]);
}

- (RAREUTJSONObject *)getDataWithNSString:(NSString *)object
                          withJavaUtilMap:(id<JavaUtilMap>)params {
  RAREActionLink *l = nil;
  @try {
    return [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:[[RAREUTJSONTokener alloc] initWithJavaIoReader:[(l = [self createLinkWithNSString:object withJavaUtilMap:params]) getReader]]];
  }
  @finally {
    if (l != nil) {
      [l close];
    }
  }
}

- (RAREUTJSONObject *)getDataWithNSString:(NSString *)object
                        withNSStringArray:(IOSObjectArray *)params {
  RAREActionLink *l = nil;
  @try {
    return [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:[[RAREUTJSONTokener alloc] initWithJavaIoReader:[(l = [self createResourceLinkWithNSString:object withNSStringArray:params]) getReader]]];
  }
  @finally {
    if (l != nil) {
      [l close];
    }
  }
}

- (id<RAREUTiURLResolver>)getDefaultResolver {
  return (defaultResolver_ == nil) ? ((id) [RAREPlatform getDefaultURLResolver]) : defaultResolver_;
}

- (BOOL)getFHIRConfigBooleanWithNSString:(NSString *)key
                             withBoolean:(BOOL)defaultValue {
  RAREUTJSONObject *o = [((CCPBVSettings_Server *) nil_chk(serverConfig_)) optJSONObjectWithNSString:@"fhir"];
  return (o == nil) ? defaultValue : [o optBooleanWithNSString:key withBoolean:defaultValue];
}

- (NSString *)getFHIRConfigStringWithNSString:(NSString *)key {
  RAREUTJSONObject *o = [((CCPBVSettings_Server *) nil_chk(serverConfig_)) optJSONObjectWithNSString:@"fhir"];
  return (o == nil) ? nil : [o optStringWithNSString:key withNSString:nil];
}

- (NSString *)getIDWithNSString:(NSString *)id_
                    withBoolean:(BOOL)includePath {
  if ([((NSString *) nil_chk(id_)) hasPrefix:endPoint_] && includePath) {
    return [id_ substring:[((NSString *) nil_chk(endPoint_)) sequenceLength]];
  }
  if (!includePath) {
    int n = [id_ lastIndexOf:'/'];
    if (n != -1) {
      id_ = [id_ substring:n + 1];
    }
  }
  return id_;
}

- (JavaUtilHashMap *)getLabCategories {
  return labCategories_;
}

- (NSString *)getPatientEncounterID {
  return patientEncounterID_;
}

- (NSString *)getPatientID {
  if (patientID_ == nil) {
    @throw [[JavaIoIOException alloc] initWithNSString:@"NO PATIENT SELECTED"];
  }
  return patientID_;
}

- (NSString *)getPatientIDEx {
  return patientID_;
}

- (JavaUtilHashMap *)getProcedureCategories {
  return procedureCategories_;
}

- (CCPBVFHIRFHIRServer_FHIRResource *)getResourceWithNSString:(NSString *)name {
  return (resources_ == nil) ? nil : [resources_ getWithId:name];
}

- (NSString *)getResourceAsStringWithNSString:(NSString *)name {
  if (strings_ == nil) {
    return [RAREPlatform getResourceAsStringWithNSString:name];
  }
  return [((JavaUtilHashMap *) nil_chk(strings_)) getWithId:name];
}

- (CCPBVSettings_Server *)getServerConfig {
  return serverConfig_;
}

- (NSString *)getStringWithNSString:(NSString *)name
                  withNSObjectArray:(IOSObjectArray *)args {
  if (strings_ == nil) {
    return [((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getStringWithNSString:name withNSObjectArray:args];
  }
  NSString *s = [((JavaUtilHashMap *) nil_chk(strings_)) getWithId:name];
  return [NSString formatWithNSString:s withNSObjectArray:args];
}

- (void)ignoreExceptionWithJavaLangException:(JavaLangException *)e {
  [self ignoreExceptionWithNSString:nil withJavaLangException:e];
}

- (void)ignoreExceptionWithNSString:(NSString *)msg
              withJavaLangException:(JavaLangException *)e {
  if (commandLine_) {
    if (msg != nil) {
      [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:msg];
    }
    if (e != nil) {
      [e printStackTrace];
    }
  }
  else {
    [RAREPlatform ignoreExceptionWithNSString:msg withJavaLangThrowable:e];
  }
}

- (void)initialize__WithCCPBVSettings_Server:(CCPBVSettings_Server *)server {
  [super initialize__WithCCPBVSettings_Server:server];
  self->demoMode_ = [((CCPBVSettings_Server *) nil_chk(server)) isDemoServer];
  self->serverConfig_ = server;
  RAREUTJSONObject *fhir = [server optJSONObjectWithNSString:@"fhir"];
  if (fhir != nil) {
    debug_ = [fhir optBooleanWithNSString:@"debug"];
  }
  NSString *serverURL = [server getURL];
  NSString *ep = [NSString stringWithFormat:@"http%@", [((NSString *) nil_chk(serverURL)) substring:4]];
  if ((endPoint_ == nil) || ![endPoint_ isEqual:ep]) {
    if (![ep hasSuffix:@"/"]) {
      endPointNoSlash_ = ep;
      ep = [NSString stringWithFormat:@"%@/", ep];
    }
    else {
      endPointNoSlash_ = [ep substring:0 endIndex:[ep sequenceLength] - 1];
    }
    if (![ep isEqual:endPoint_]) {
      self->endPoint_ = ep;
      resources_ = nil;
      authHandler_ = [[CCPBVFHIRFHIRServer_AuthHandler alloc] initWithCCPBVSettings_Server:server withNSString:endPoint_];
      [self loadMetadata];
      if (labCategories_ == nil) {
        [self loadFHIRDataWithRAREUTiURLResolver:[RAREPlatform getDefaultURLResolver]];
      }
      RAREUTJSONObject *o = [self getConfigurationDataWithNSString:@"patientSelectInfo"];
      (void) [((RAREUTJSONObject *) nil_chk(o)) putWithNSString:@"hasPatientAlerts" withBoolean:[((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) getResourceWithNSString:@"Appointment"] != nil];
      (void) [o putWithNSString:@"hasPatientFlags" withBoolean:[self getResourceWithNSString:@"Flag"] != nil];
      if (![self hasPatientLocatorSupport]) {
        (void) [o putWithNSString:@"patientLocatorClass" withId:@""];
      }
      if (![self hasBarCodeSupport]) {
        (void) [o putWithNSString:@"barcodeReaderClass" withId:@""];
      }
      (void) [o putWithNSString:@"alwaysShowSearchFirst" withBoolean:YES];
      RAREUTJSONArray *a = [o getJSONArrayWithNSString:@"listCategories"];
      int len = [((RAREUTJSONArray *) nil_chk(a)) length];
      for (int i = len - 1; i >= 0; i--) {
        o = [a getJSONObjectWithInt:i];
        if ([nil_chk([((RAREUTJSONObject *) nil_chk(o)) optWithNSString:@"type"]) isEqual:@"category"]) {
          NSString *s = [o getStringWithNSString:@"listPath"];
          if ([((NSString *) nil_chk(s)) isEqual:@"teams"] || [s isEqual:@"specialities"]) {
            (void) [a removeWithInt:i];
          }
          else {
            (void) [o putWithNSString:@"enabled" withBoolean:NO];
          }
        }
      }
      RAREUTJSONObject *li = [self getConfigurationDataWithNSString:@"labsInfo"];
      (void) [((RAREUTJSONObject *) nil_chk(li)) putWithNSString:@"bun_id" withId:@"bun"];
      (void) [li putWithNSString:@"creatinine_id" withId:@"creat"];
      (void) [li putWithNSString:@"showUnits" withBoolean:YES];
      li = [self getConfigurationDataWithNSString:@"vitalsInfo"];
      (void) [((RAREUTJSONObject *) nil_chk(li)) putWithNSString:@"showUnits" withBoolean:YES];
      li = [self getConfigurationDataWithNSString:@"notesInfo"];
      (void) [((RAREUTJSONObject *) nil_chk(li)) putWithNSString:@"documentURLColumn" withInt:7];
      li = [self getConfigurationDataWithNSString:@"ordersInfo"];
      (void) [((RAREUTJSONObject *) nil_chk(li)) putWithNSString:@"hasClinicalCategories" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderDiscontinueSupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderEntrySupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderDictationSupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderRewriteSupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderFlagSupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderHoldSupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderSignSupport" withBoolean:NO];
      (void) [li putWithNSString:@"hasOrderSentenceSupport" withBoolean:NO];
      li = [self getConfigurationDataWithNSString:@"tabsInfo"];
      (void) [((RAREUTJSONObject *) nil_chk(li)) putWithNSString:@"hasProcedures" withBoolean:[self getResourceWithNSString:@"Procedure"] != nil];
      (void) [li putWithNSString:@"hasNotes" withBoolean:[self getResourceWithNSString:@"DocumentReference"] != nil];
      a = [((RAREUTJSONObject *) nil_chk([self getConfigurationDataWithNSString:@"collectionsInfo"])) optJSONArrayWithNSString:@"collections"];
      len = (a == nil) ? 0 : [a length];
      for (int i = 0; i < len; i++) {
        o = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
        (void) [((RAREUTJSONObject *) nil_chk(o)) putWithNSString:@"autoUpdate" withBoolean:NO];
      }
    }
  }
}

- (BOOL)isDebugMode {
  return debug_ || commandLine_;
}

- (BOOL)isDemoMode {
  return demoMode_;
}

- (BOOL)isSessionValid {
  if (authHandler_ != nil) {
    [authHandler_ isTokenValid];
  }
  return YES;
}

- (RAREUTOrderedProperties *)load__WithNSString:(NSString *)file {
  return [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:[self getDefaultResolver] withNSString:file];
}

- (void)logout {
  if (authHandler_ != nil) {
    [authHandler_ logout];
  }
}

- (RAREUTJSONObject *)getUser {
  if ([self isSessionValid]) {
    return [((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(authHandler_)) getLoggedInUser];
  }
  return nil;
}

- (id)putConfigurationDataWithNSString:(NSString *)name
                                withId:(id)value {
  if (commandLine_) {
    return [CCPBVFHIRFHIRServer putLocalConfigurationDataWithNSString:name withId:value];
  }
  return [((id<RAREiPlatformAppContext>) nil_chk([RAREPlatform getAppContext])) putDataWithId:name withId:value];
}

- (void)reloginWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb {
  if (authHandler_ != nil) {
    [RAREPlatform clearSessionCookies];
    [self customLoginExWithCCPBVSettings_Server:self->serverConfig_ withRAREiFunctionCallback:cb withBoolean:YES];
  }
}

- (void)serverConfigurationUpdatedWithCCPBVSettings_Server:(CCPBVSettings_Server *)s {
  if (![((CCPBVSettings_Server *) nil_chk(s)) isFrozen]) {
    NSString *url = [s getURL];
    if (url != nil) {
      RAREUTJSONObject *fhir = [s optJSONObjectWithNSString:@"fhir"];
      if (fhir == nil) {
        fhir = [[RAREUTJSONObject alloc] init];
        (void) [s putWithNSString:@"fhir" withJavaUtilMap:fhir];
        (void) [fhir putWithNSString:@"get_encounter" withBoolean:YES];
        RAREUTJSONObject *orders = [[RAREUTJSONObject alloc] init];
        (void) [fhir putWithNSString:@"orders" withJavaUtilMap:orders];
        (void) [orders putWithNSString:@"generateNutritionReport" withBoolean:YES];
        (void) [orders putWithNSString:@"generateDisgnosticReport" withBoolean:YES];
        (void) [orders putWithNSString:@"generateMedicationReport" withBoolean:YES];
        (void) [orders putWithNSString:@"generateMedicationDirections" withBoolean:YES];
      }
      if ([url contains:@"fhir-open"]) {
        (void) [s putWithNSString:@"restricted" withBoolean:NO];
        (void) [s putWithNSString:@"custom_login" withBoolean:NO];
        (void) [((RAREUTJSONObject *) nil_chk(fhir)) putWithNSString:@"debug" withBoolean:YES];
      }
      else {
        (void) [s putWithNSString:@"restricted" withBoolean:YES];
        (void) [s putWithNSString:@"custom_login" withBoolean:NO];
        (void) [((RAREUTJSONObject *) nil_chk(fhir)) putWithNSString:@"debug" withBoolean:NO];
      }
    }
  }
}

- (void)setPatientInfoWithNSString:(NSString *)id_
                      withNSString:(NSString *)encounter {
  self->patientID_ = id_;
  self->patientEncounterID_ = encounter;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"%@ (DSTU%f)", publisher_, version__];
}

- (void)customLoginExWithCCPBVSettings_Server:(CCPBVSettings_Server *)server
                    withRAREiFunctionCallback:(id<RAREiFunctionCallback>)cb
                                  withBoolean:(BOOL)relogin {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  RAREaWorkerTask *task = [[CCPBVFHIRFHIRServer_$1 alloc] initWithCCPBVFHIRFHIRServer:self withBoolean:relogin withCCPBVSettings_Server:server withRAREiFunctionCallback:cb withRAREWindowViewer:w];
  (void) [((RAREWindowViewer *) nil_chk(w)) spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  [w showWaitCursor];
}

- (void)loadFHIRDataWithRAREUTiURLResolver:(id<RAREUTiURLResolver>)resolver {
  RAREUTOrderedProperties *p = [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:resolver withNSString:@"/data/fhir/diagnostic_categories.properties"];
  RAREUTOrderedProperties *lp = [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:resolver withNSString:@"/data/fhir/lab_categories.properties"];
  for (id __strong o in nil_chk([((RAREUTOrderedProperties *) nil_chk(lp)) keySet])) {
    NSString *s = (NSString *) check_class_cast(o, [NSString class]);
    (void) [((RAREUTOrderedProperties *) nil_chk(p)) removeWithId:s];
  }
  labCategories_ = lp;
  procedureCategories_ = p;
  timingWhen_ = [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:resolver withNSString:@"/data/fhir/timing_when.properties"];
  timingCode_ = [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:resolver withNSString:@"/data/fhir/timing_code.properties"];
  timeUnits_ = [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:resolver withNSString:@"/data/fhir/time_units.properties"];
  if (![((CCPBVSettings_Server *) nil_chk(serverConfig_)) isRestricted] || ((authHandler_ == nil) || (authHandler_->authorizeUri_ == nil))) {
    JavaIoReader *r = [((id<RAREUTiURLResolver>) nil_chk(resolver)) getReaderWithNSString:@"/data/user.json"];
    ((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(authHandler_))->loggedInUser_ = [[RAREUTJSONObject alloc] initWithNSString:[RAREUTStreams readerToStringWithJavaIoReader:r]];
    [((JavaIoReader *) nil_chk(r)) close];
  }
  if ([(id) resolver isKindOfClass:[RAREUTFileResolver class]]) {
    strings_ = [CCPBVFHIRFHIRServer load__WithRAREUTiURLResolver:resolver withNSString:@"/resource_strings.properties"];
  }
}

- (JavaIoFile *)createCacheFileWithNSString:(NSString *)name {
  if (commandLine_) {
    return [[JavaIoFile alloc] initWithNSString:[NSString stringWithFormat:@"/Code/tmp/metadata_%@.json", name]];
  }
  return [RAREPlatform createCacheFileWithNSString:name];
}

- (void)loadMetadata {
  NSString *data = nil;
  RAREUTObjectHolder *oh = [[RAREUTObjectHolder alloc] initWithRAREUTObjectHolder:nil];
  @try {
    NSString *name = [RAREFunctions sha1WithNSString:endPoint_];
    int n = [((NSString *) nil_chk(name)) indexOf:'='];
    if (n != -1) {
      name = [name substring:0 endIndex:n];
    }
    name = [((NSString *) nil_chk(name)) replace:'+' withChar:'_'];
    name = [((NSString *) nil_chk(name)) replace:'/' withChar:'_'];
    JavaIoFile *f = [self createCacheFileWithNSString:name];
    if ((f != nil) && [f exists]) {
      long long int lm = [f lastModified];
      if ((lm + (1000 * 60 * 500)) > [JavaLangSystem currentTimeMillis]) {
        JavaIoFileReader *r = [[JavaIoFileReader alloc] initWithJavaIoFile:f];
        data = [RAREUTStreams readerToStringWithJavaIoReader:r];
        [r close];
      }
    }
    if (data == nil) {
      RAREActionLink *l = [self createResourceLinkWithNSString:@"metadata" withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
      data = [((RAREActionLink *) nil_chk(l)) getContentAsString];
      if (f != nil) {
        JavaIoFileWriter *w = [[JavaIoFileWriter alloc] initWithJavaIoFile:f];
        [w writeWithNSString:data];
        [w close];
      }
    }
  }
  @catch (JavaLangException *e) {
    [self ignoreExceptionWithNSString:nil withJavaLangException:e];
  }
  if (data == nil) {
    RAREActionLink *l = [self createResourceLinkWithNSString:@"metadata" withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
    data = [((RAREActionLink *) nil_chk(l)) getContentAsString];
  }
  resources_ = [[JavaUtilHashMap alloc] init];
  RAREUTJSONTokener *t = [[RAREUTJSONTokener alloc] initWithJavaIoReader:[[JavaIoStringReader alloc] initWithNSString:data]];
  [t setWatcherWithRAREUTJSONTokener_iWatcher:[[CCPBVFHIRFHIRJSONWatcher alloc] initWithCCPBVFHIRFHIRJSONWatcher_iCallback:[[CCPBVFHIRFHIRServer_$2 alloc] initWithCCPBVFHIRFHIRServer:self withRAREUTObjectHolder:oh withRAREUTJSONTokener:t] withNSString:@"rest/resource"]];
  RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:t];
  if (oh->value_ != nil) {
    @throw (JavaLangException *) check_class_cast(oh->value_, [JavaLangException class]);
  }
  [t dispose];
  RAREUTJSONArray *a = (RAREUTJSONArray *) check_class_cast([((CCPBVSettings_Server *) nil_chk(serverConfig_)) optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"fhir", @"resource_metadata" } count:2 type:[IOSClass classWithClass:[NSString class]]]], [RAREUTJSONArray class]);
  if (a != nil) {
    int len = [a length];
    for (int i = 0; i < len; i++) {
      o = [a getJSONObjectWithInt:i];
      NSString *type = [((RAREUTJSONObject *) nil_chk(o)) getStringWithNSString:@"type"];
      if ([resources_ getWithId:type] == nil) {
        (void) [resources_ putWithId:type withId:[[CCPBVFHIRFHIRServer_FHIRResource alloc] initWithCCPBVFHIRFHIRServer:self withNSString:type withRAREUTJSONObject:o]];
      }
    }
  }
}

- (void)decorateLinkWithRAREActionLink:(RAREActionLink *)link {
  if ((authHandler_ != nil) && (authHandler_->authHeader_ != nil)) {
    [((RAREActionLink *) nil_chk(link)) setRequestHeaderWithNSString:@"Authorization" withNSString:authHandler_->authHeader_];
  }
}

+ (NSString *)convertDateWithJavaUtilDate:(JavaUtilDate *)date {
  return [((CCPBVSmartDateContext *) nil_chk(CCPBVFHIRFHIRServer_dateContext_)) dateToStringWithJavaUtilDate:date];
}

+ (NSString *)convertDateWithNSString:(NSString *)date {
  @try {
    if (((CCPBVFHIRFHIRServer *) nil_chk(CCPBVFHIRFHIRServer__instance_))->commandLine_) {
      return [((CCPBVSmartDateContext *) nil_chk(CCPBVFHIRFHIRServer_dateContext_)) parseAndFormatWithNSString:date];
    }
    return [RAREFunctions convertDateWithId:date];
  }
  @catch (JavaLangException *e) {
    return date;
  }
}

+ (NSString *)convertDateTimeWithJavaUtilDate:(JavaUtilDate *)date {
  return [((CCPBVSmartDateContext *) nil_chk(CCPBVFHIRFHIRServer_dateTimeContext_)) dateToStringWithJavaUtilDate:date];
}

+ (NSString *)convertDateTimeWithNSString:(NSString *)date {
  @try {
    if ([((NSString *) nil_chk(date)) indexOf:'T'] == -1) {
      return [CCPBVFHIRFHIRServer convertDateWithNSString:date];
    }
    if (((CCPBVFHIRFHIRServer *) nil_chk(CCPBVFHIRFHIRServer__instance_))->commandLine_) {
      return [((CCPBVSmartDateContext *) nil_chk(CCPBVFHIRFHIRServer_dateTimeContext_)) parseAndFormatWithNSString:date];
    }
    return [RAREFunctions convertDateTimeWithId:date];
  }
  @catch (JavaLangException *e) {
    return date;
  }
}

+ (JavaUtilDate *)toDateWithNSString:(NSString *)date {
  @try {
    return [((CCPBVSmartDateContext *) nil_chk(CCPBVFHIRFHIRServer_dateContext_)) dateFromStringWithNSString:date];
  }
  @catch (JavaLangException *e) {
    return nil;
  }
}

+ (NSString *)convertToServerDateWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                                          withBoolean:(BOOL)time {
  return [RAREUTHelper toStringWithJavaUtilCalendar:cal withBoolean:!time withBoolean:NO];
}

+ (CCPBVFHIRFHIRServer *)getInstance {
  return CCPBVFHIRFHIRServer__instance_;
}

+ (NSString *)getStyleSheet {
  if (((CCPBVFHIRFHIRServer *) nil_chk(CCPBVFHIRFHIRServer__instance_))->commandLine_) {
    @try {
      JavaIoFileReader *r = [[JavaIoFileReader alloc] initWithNSString:@"/Code/Dev/appNativa/applications/BellaVista/BellaVista-android/assets/data/stylesheet.css"];
      @try {
        return [RAREUTStreams readerToStringWithJavaIoReader:r];
      }
      @finally {
        [r close];
      }
    }
    @catch (JavaLangException *e) {
      return @"";
    }
  }
  else {
    return [CCPBVUtils getStyleSheet];
  }
}

+ (float)getVersion {
  return ((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance]))->version__;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  @try {
    [CCPBVFHIRFHIRServer createForCommandLineTesting];
    CCPBVFHIRaFHIRemoteService *p = [[CCPBVFHIRLabs alloc] init];
    JavaIoStringWriter *sw = [[JavaIoStringWriter alloc] initWithInt:2048];
    JavaIoFileReader *r = [[JavaIoFileReader alloc] initWithNSString:@"/Code/tmp/test.json"];
    [p searchWithJavaIoReader:r withId:sw withCCPBVHttpHeaders:[[CCPBVHttpHeaders alloc] init] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [[CCPBVHttpHeaders alloc] init] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
    NSString *s = [sw description];
    [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:s];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}

+ (void)createForCommandLineTesting {
  CCPBVFHIRFHIRServer *server = [[CCPBVFHIRFHIRServer alloc] initWithNSString:@"https://fhir-open.sandboxcernerpowerchart.com/dstu2/d075cf8b-3261-481d-97e5-ba6c48d3b41f/"];
  server->commandLine_ = YES;
  server->serverConfig_ = [[CCPBVSettings_Server alloc] initWithNSString:@"Demo" withNSString:@"local" withBoolean:NO];
  (void) [server->serverConfig_ putWithNSString:@"fhir" withJavaUtilMap:[((RAREUTJSONObject *) [[RAREUTJSONObject alloc] init]) putWithNSString:@"non_compliant" withBoolean:YES]];
  RAREUTFileResolver *fr = [[CCPBVFHIRFHIRServer_$3 alloc] initWithJavaIoFile:[[JavaIoFile alloc] initWithNSString:@"/Code/Dev/appNativa/applications/BellaVista/BellaVista-android/assets"]];
  server->authHandler_ = [[CCPBVFHIRFHIRServer_AuthHandler alloc] initWithCCPBVSettings_Server:server->serverConfig_ withNSString:server->endPoint_];
  server->defaultResolver_ = fr;
  [server loadFHIRDataWithRAREUTiURLResolver:fr];
  [server loadMetadata];
}

+ (RAREUTJSONObject *)getLocalConfigurationDataWithNSString:(NSString *)name {
  if (CCPBVFHIRFHIRServer_localConfig_ == nil) {
    CCPBVFHIRFHIRServer_localConfig_ = [[RAREUTJSONObject alloc] init];
  }
  RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(CCPBVFHIRFHIRServer_localConfig_)) optJSONObjectWithNSString:name];
  if (o == nil) {
    o = [[RAREUTJSONObject alloc] init];
    (void) [CCPBVFHIRFHIRServer_localConfig_ putWithNSString:name withJavaUtilMap:o];
  }
  return o;
}

+ (id)putLocalConfigurationDataWithNSString:(NSString *)name
                                     withId:(id)value {
  if (CCPBVFHIRFHIRServer_localConfig_ == nil) {
    CCPBVFHIRFHIRServer_localConfig_ = [[RAREUTJSONObject alloc] init];
  }
  return [((RAREUTJSONObject *) nil_chk(CCPBVFHIRFHIRServer_localConfig_)) putWithNSString:name withId:value];
}

+ (RAREUTOrderedProperties *)load__WithRAREUTiURLResolver:(id<RAREUTiURLResolver>)resolver
                                             withNSString:(NSString *)file {
  JavaIoReader *r = [((id<RAREUTiURLResolver>) nil_chk(resolver)) getReaderWithNSString:file];
  RAREUTOrderedProperties *p = [[RAREUTOrderedProperties alloc] init];
  [p load__WithJavaIoReader:r];
  [((JavaIoReader *) nil_chk(r)) close];
  return p;
}

- (id)basicAuthLoginWithNSString:(NSString *)username
                    withNSString:(NSString *)password {
  if (authHandler_ != nil) {
    return [authHandler_ loginWithNSString:username withNSString:password];
  }
  return nil;
}

+ (void)initialize {
  if (self == [CCPBVFHIRFHIRServer class]) {
    CCPBVFHIRFHIRServer_dateContext_ = [[CCPBVSmartDateContext alloc] initWithBoolean:YES withJavaTextDateFormat:[[RAREUTSimpleDateFormatEx alloc] initWithNSString:@"MMM dd, yyyy"]];
    CCPBVFHIRFHIRServer_dateTimeContext_ = [[CCPBVSmartDateContext alloc] initWithBoolean:YES withJavaTextDateFormat:[[RAREUTSimpleDateFormatEx alloc] initWithNSString:@"MMM dd, yyyy'@'HH:mm"]];
  }
}

- (void)copyAllFieldsTo:(CCPBVFHIRFHIRServer *)other {
  [super copyAllFieldsTo:other];
  other->authHandler_ = authHandler_;
  other->commandLine_ = commandLine_;
  other->debug_ = debug_;
  other->defaultResolver_ = defaultResolver_;
  other->demoMode_ = demoMode_;
  other->endPoint_ = endPoint_;
  other->endPointNoSlash_ = endPointNoSlash_;
  other->labCategories_ = labCategories_;
  other->lastLink_ = lastLink_;
  other->patientEncounterID_ = patientEncounterID_;
  other->patientID_ = patientID_;
  other->procedureCategories_ = procedureCategories_;
  other->publisher_ = publisher_;
  other->resources_ = resources_;
  other->serverConfig_ = serverConfig_;
  other->streamHandler_ = streamHandler_;
  other->strings_ = strings_;
  other->timeUnits_ = timeUnits_;
  other->timingCode_ = timingCode_;
  other->timingWhen_ = timingWhen_;
  other->version__ = version__;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", NULL, NULL, 0x0, NULL },
    { "createLinkWithRAREiWidget:withJavaNetURL:", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "createLinkWithRAREiWidget:withJavaNetURL:withNSString:", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "createLinkWithNSString:", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "createLinkWithNSString:withJavaUtilMap:", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "createLinkWithJavaNetURL:", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "createLinkWithJavaNetURL:withNSString:", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "createResourceLinkWithNSString:withNSStringArray:", NULL, "LCCPBVActionLinkEx", 0x81, NULL },
    { "createURLStreamHandlerWithNSString:", NULL, "LJavaNetURLStreamHandler", 0x1, NULL },
    { "dataNotAvailableWithBoolean:withCCPBVHttpHeaders:withNSStringArray:withInt:", NULL, "LJavaIoStringWriter", 0x1, "JavaIoIOException" },
    { "fixLinkWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getColorWithNSString:", NULL, "LRAREUIColor", 0x1, NULL },
    { "getConfigurationDataWithNSString:", NULL, "LRAREUTJSONObject", 0x1, NULL },
    { "getDataWithNSString:withJavaUtilMap:", NULL, "LRAREUTJSONObject", 0x1, "JavaLangException" },
    { "getDataWithNSString:withNSStringArray:", NULL, "LRAREUTJSONObject", 0x81, "JavaLangException" },
    { "getDefaultResolver", NULL, "LRAREUTiURLResolver", 0x1, NULL },
    { "getFHIRConfigBooleanWithNSString:withBoolean:", NULL, "Z", 0x1, NULL },
    { "getFHIRConfigStringWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getIDWithNSString:withBoolean:", NULL, "LNSString", 0x1, NULL },
    { "getLabCategories", NULL, "LJavaUtilHashMap", 0x1, NULL },
    { "getPatientEncounterID", NULL, "LNSString", 0x1, NULL },
    { "getPatientID", NULL, "LNSString", 0x1, "JavaIoIOException" },
    { "getPatientIDEx", NULL, "LNSString", 0x1, NULL },
    { "getProcedureCategories", NULL, "LJavaUtilHashMap", 0x1, NULL },
    { "getResourceWithNSString:", NULL, "LCCPBVFHIRFHIRServer_FHIRResource", 0x1, NULL },
    { "getResourceAsStringWithNSString:", NULL, "LNSString", 0x1, NULL },
    { "getServerConfig", NULL, "LCCPBVSettings_Server", 0x1, NULL },
    { "getStringWithNSString:withNSObjectArray:", NULL, "LNSString", 0x81, NULL },
    { "initialize__WithCCPBVSettings_Server:", NULL, "V", 0x1, "JavaLangException" },
    { "isDebugMode", NULL, "Z", 0x1, NULL },
    { "isDemoMode", NULL, "Z", 0x1, NULL },
    { "isSessionValid", NULL, "Z", 0x1, NULL },
    { "load__WithNSString:", NULL, "LRAREUTOrderedProperties", 0x1, "JavaIoIOException" },
    { "getUser", NULL, "LRAREUTJSONObject", 0x1, NULL },
    { "putConfigurationDataWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "customLoginExWithCCPBVSettings_Server:withRAREiFunctionCallback:withBoolean:", NULL, "V", 0x4, NULL },
    { "loadFHIRDataWithRAREUTiURLResolver:", NULL, "V", 0x4, "JavaIoIOException" },
    { "createCacheFileWithNSString:", NULL, "LJavaIoFile", 0x2, NULL },
    { "loadMetadata", NULL, "V", 0x2, "JavaLangException" },
    { "decorateLinkWithRAREActionLink:", NULL, "V", 0x4, NULL },
    { "convertDateWithJavaUtilDate:", NULL, "LNSString", 0x9, NULL },
    { "convertDateWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "convertDateTimeWithJavaUtilDate:", NULL, "LNSString", 0x9, NULL },
    { "convertDateTimeWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "toDateWithNSString:", NULL, "LJavaUtilDate", 0x9, NULL },
    { "convertToServerDateWithJavaUtilCalendar:withBoolean:", NULL, "LNSString", 0x9, NULL },
    { "getInstance", NULL, "LCCPBVFHIRFHIRServer", 0x9, NULL },
    { "getStyleSheet", NULL, "LNSString", 0x9, NULL },
    { "createForCommandLineTesting", NULL, "V", 0xa, "JavaLangException" },
    { "getLocalConfigurationDataWithNSString:", NULL, "LRAREUTJSONObject", 0xa, NULL },
    { "putLocalConfigurationDataWithNSString:withId:", NULL, "LNSObject", 0xa, NULL },
    { "load__WithRAREUTiURLResolver:withNSString:", NULL, "LRAREUTOrderedProperties", 0x8, "JavaIoIOException" },
    { "basicAuthLoginWithNSString:withNSString:", NULL, "LNSObject", 0x1, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "_instance_", NULL, 0xa, "LCCPBVFHIRFHIRServer" },
    { "localConfig_", NULL, 0xa, "LRAREUTJSONObject" },
    { "dateContext_", NULL, 0x8, "LCCPBVSmartDateContext" },
    { "dateTimeContext_", NULL, 0x8, "LCCPBVSmartDateContext" },
    { "version__", "version", 0x1, "F" },
    { "endPoint_", NULL, 0x1, "LNSString" },
    { "endPointNoSlash_", NULL, 0x1, "LNSString" },
    { "publisher_", NULL, 0x1, "LNSString" },
    { "serverConfig_", NULL, 0x4, "LCCPBVSettings_Server" },
    { "streamHandler_", NULL, 0x4, "LCCPBVFHIRFHIRServer_StreamHandler" },
    { "resources_", NULL, 0x4, "LJavaUtilHashMap" },
    { "demoMode_", NULL, 0x4, "Z" },
    { "labCategories_", NULL, 0x4, "LJavaUtilHashMap" },
    { "procedureCategories_", NULL, 0x4, "LJavaUtilHashMap" },
    { "strings_", NULL, 0x4, "LJavaUtilHashMap" },
    { "commandLine_", NULL, 0x4, "Z" },
    { "timingWhen_", NULL, 0x4, "LJavaUtilHashMap" },
    { "timingCode_", NULL, 0x4, "LJavaUtilHashMap" },
    { "timeUnits_", NULL, 0x4, "LJavaUtilHashMap" },
    { "defaultResolver_", NULL, 0x4, "LRAREUTFileResolver" },
    { "patientEncounterID_", NULL, 0x4, "LNSString" },
    { "patientID_", NULL, 0x4, "LNSString" },
    { "debug_", NULL, 0x1, "Z" },
    { "lastLink_", NULL, 0x4, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer = { "FHIRServer", "com.sparseware.bellavista.external.fhir", NULL, 0x1, 53, methods, 24, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer;
}

@end
@implementation CCPBVFHIRFHIRServer_FHIRResource

- (id)initWithCCPBVFHIRFHIRServer:(CCPBVFHIRFHIRServer *)server
                     withNSString:(NSString *)name
             withRAREUTJSONObject:(RAREUTJSONObject *)entry_ {
  if (self = [super init]) {
    self->name_ = name;
    searchParams_ = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONArrayWithNSString:@"searchParam"];
    int len = (searchParams_ == nil) ? 0 : [searchParams_ length];
    for (int i = 0; i < len; i++) {
      RAREUTJSONObject *o = [((RAREUTJSONArray *) nil_chk(searchParams_)) getJSONObjectWithInt:i];
      (void) [((RAREUTJSONObject *) nil_chk(o)) removeWithNSString:@"target"];
      (void) [o removeWithNSString:@"definition"];
      (void) [o removeWithNSString:@"documentation"];
    }
    interaction_ = [entry_ optJSONArrayWithNSString:@"interaction"];
    readSupported_ = (interaction_ == nil) ? YES : [interaction_ findJSONObjectIndexWithNSString:@"code" withNSString:@"read" withInt:0] != -1;
    if ([((NSString *) nil_chk(name)) isEqual:@"Patient"]) {
      [CCPBVFHIRPatients initializeSupportedOptionsWithCCPBVFHIRFHIRServer_FHIRResource:self withRAREUTJSONObject:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getConfigurationDataWithNSString:@"patientSelectInfo"]];
    }
    summarySupported_ = [self hasSearchParamWithNSString:@"_summary"];
    countSupported_ = [self hasSearchParamWithNSString:@"_count"];
  }
  return self;
}

- (BOOL)canDoWithNSString:(NSString *)text {
  if (interaction_ == nil) {
    return NO;
  }
  return [((RAREUTJSONArray *) nil_chk(interaction_)) findJSONObjectIndexWithNSString:@"code" withNSString:text withInt:0] != -1;
}

- (BOOL)canRead {
  if (read_ == nil) {
    search_ = [JavaLangBoolean valueOfWithBoolean:[self canDoWithNSString:@"read-type"]];
  }
  return [((JavaLangBoolean *) nil_chk(read_)) booleanValue];
}

- (BOOL)canSearch {
  if (search_ == nil) {
    search_ = [JavaLangBoolean valueOfWithBoolean:[self canDoWithNSString:@"search-type"]];
  }
  return [((JavaLangBoolean *) nil_chk(search_)) booleanValue];
}

- (NSString *)getName {
  return name_;
}

- (BOOL)hasSearchParamWithNSString:(NSString *)name {
  return (searchParams_ == nil) ? NO : [searchParams_ findJSONObjectWithNSString:@"name" withNSString:name] != nil;
}

- (void)copyAllFieldsTo:(CCPBVFHIRFHIRServer_FHIRResource *)other {
  [super copyAllFieldsTo:other];
  other->countSupported_ = countSupported_;
  other->interaction_ = interaction_;
  other->name_ = name_;
  other->read_ = read_;
  other->readSupported_ = readSupported_;
  other->search_ = search_;
  other->searchParams_ = searchParams_;
  other->summarySupported_ = summarySupported_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithCCPBVFHIRFHIRServer:withNSString:withRAREUTJSONObject:", NULL, NULL, 0x0, NULL },
    { "canDoWithNSString:", NULL, "Z", 0x1, NULL },
    { "canRead", NULL, "Z", 0x1, NULL },
    { "canSearch", NULL, "Z", 0x1, NULL },
    { "getName", NULL, "LNSString", 0x1, NULL },
    { "hasSearchParamWithNSString:", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "search_", NULL, 0x0, "LJavaLangBoolean" },
    { "read_", NULL, 0x0, "LJavaLangBoolean" },
    { "searchParams_", NULL, 0x1, "LRAREUTJSONArray" },
    { "interaction_", NULL, 0x1, "LRAREUTJSONArray" },
    { "summarySupported_", NULL, 0x1, "Z" },
    { "readSupported_", NULL, 0x1, "Z" },
    { "countSupported_", NULL, 0x1, "Z" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_FHIRResource = { "FHIRResource", "com.sparseware.bellavista.external.fhir", "FHIRServer", 0x9, 6, methods, 7, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_FHIRResource;
}

@end
@implementation CCPBVFHIRFHIRServer_AuthHandler

- (id)initWithCCPBVSettings_Server:(CCPBVSettings_Server *)server
                      withNSString:(NSString *)endPoint {
  if (self = [super init]) {
    self->server_ = server;
    self->fhir_ = [((CCPBVSettings_Server *) nil_chk(server)) optJSONObjectWithNSString:@"fhir"];
    if (fhir_ == nil) {
      fhir_ = [[RAREUTJSONObject alloc] init];
    }
    if ([((NSString *) nil_chk(endPoint)) hasSuffix:@"/"]) {
      endPoint = [endPoint substring:0 endIndex:[endPoint sequenceLength] - 1];
    }
    self->endPoint_ = endPoint;
  }
  return self;
}

- (RAREUTJSONObject *)loginWithNSString:(NSString *)username
                           withNSString:(NSString *)password {
  NSString *url = [((RAREUTJSONObject *) nil_chk(fhir_)) optStringWithNSString:@"basic_auth_uri" withNSString:authorizeUri_];
  if (url == nil) {
    return nil;
  }
  CCPBVActionLinkEx *l = [[CCPBVActionLinkEx alloc] initWithNSString:url];
  NSString *basicAuth = [NSString stringWithFormat:@"Basic %@", [RAREFunctions base64NOLFWithNSString:[NSString stringWithFormat:@"%@:%@", username, password]]];
  [l setRequestHeaderWithNSString:@"Authorization" withNSString:basicAuth];
  RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithNSString:[l getContentAsString]];
  authHeader_ = basicAuth;
  RAREUTJSONObject *user = [self getUserInfoWithRAREUTJSONObject:o];
  loggedInUser_ = [CCPBVFHIRUsers populateUserWithNSString:[((RAREUTJSONObject *) nil_chk(user)) getStringWithNSString:@"id"] withRAREUTJSONObject:user];
  return loggedInUser_;
}

- (RAREUTJSONObject *)getLoggedInUser {
  return loggedInUser_;
}

- (NSString *)createAuthorizeUrl {
  JavaUtilHashMap *data = [[JavaUtilHashMap alloc] init];
  long long int l1 = [RAREFunctions randomLong];
  long long int l2 = [JavaLangSystem currentTimeMillis];
  if (l1 == l2) {
    l1 /= 3;
  }
  l1 ^= l2;
  state_ = [JavaLangLong toHexStringWithLong:l1];
  (void) [data putWithId:@"response_type" withId:@"code"];
  (void) [data putWithId:@"client_id" withId:[((RAREUTJSONObject *) nil_chk(fhir_)) getStringWithNSString:@"oauth_client_id"]];
  (void) [data putWithId:@"redirect_uri" withId:[fhir_ getStringWithNSString:@"oauth_redirect_uri"]];
  (void) [data putWithId:@"scope" withId:[fhir_ getStringWithNSString:@"oauth_scope"]];
  (void) [data putWithId:@"state" withId:state_];
  (void) [data putWithId:@"aud" withId:[fhir_ getStringWithNSString:@"aud"]];
  RAREActionLink *link = [[RAREActionLink alloc] initWithNSString:authorizeUri_];
  [link setAttributesWithJavaUtilMap:data];
  return [link description];
}

- (BOOL)isTokenValid {
  if (!basicAuth_) {
    long long int time = [JavaLangSystem currentTimeMillis];
    long long int ctimeout = [((RAREUTJSONObject *) nil_chk(fhir_)) optLongWithNSString:@"client_timeout"];
    if (ctimeout > 0) {
      ctimeout *= 1000;
      if (ctimeout + [CCPBVFHIRFHIRHttpURLConnection lastConnectTime] < time) {
        refreshToken_ = nil;
        [RAREPlatform clearSessionCookies];
      }
    }
    tokenTimeout_ = 0;
    if ((time > tokenTimeout_) && ![self renewToken]) {
      return NO;
    }
  }
  return authHeader_ != nil;
}

- (void)logout {
  authHeader_ = nil;
  callback_ = nil;
  refreshToken_ = nil;
  loggedInUser_ = nil;
  [RAREPlatform clearSessionCookies];
}

- (void)onEventWithNSString:(NSString *)eventName
            withRAREiWidget:(id<RAREiWidget>)widget
    withJavaUtilEventObject:(JavaUtilEventObject *)event {
  if (redirected_) {
    return;
  }
  RAREDataEvent *de = (RAREDataEvent *) check_class_cast(event, [RAREDataEvent class]);
  NSString *url = (NSString *) check_class_cast([((RAREDataEvent *) nil_chk(de)) getTarget], [NSString class]);
  if ((url == nil) || ![url hasPrefix:[((RAREUTJSONObject *) nil_chk(fhir_)) getStringWithNSString:@"oauth_redirect_uri"]]) {
    return;
  }
  redirected_ = YES;
  [((RAREWebBrowser *) check_class_cast(widget, [RAREWebBrowser class])) stopLoading];
  int n = [((NSString *) nil_chk(url)) indexOf:'?'];
  if (n == -1) {
    [self errorWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.text.oauth_failure"] withJavaLangThrowable:nil];
    return;
  }
  id<JavaUtilMap> map = [CCPBVaRemoteService getQueryParamsWithNSString:[url substring:n + 1]];
  if ([((id<JavaUtilMap>) nil_chk(map)) getWithId:@"error"] != nil) {
    NSString *s = [map getWithId:@"error_Description"];
    if (s == nil) {
      s = [map getWithId:@"error"];
    }
    [self errorWithNSString:[NSString stringWithFormat:@"%@\n\n%@", [RAREPlatform getResourceAsStringWithNSString:@"bv.text.oauth_failure"], s] withJavaLangThrowable:nil];
    return;
  }
  if (![((NSString *) nil_chk(self->state_)) isEqual:[map getWithId:@"state"]]) {
    [self errorWithNSString:[RAREPlatform getResourceAsStringWithNSString:@"bv.text.oauth_state_failure"] withJavaLangThrowable:nil];
    return;
  }
  [((RAREWebBrowser *) check_class_cast(widget, [RAREWebBrowser class])) setAutoDisposeWithBoolean:NO];
  [CCPBVUtils clearViewerStack];
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  [((RAREWindowViewer *) nil_chk(w)) hideWaitCursorWithBoolean:YES];
  [w showProgressPopupWithJavaLangCharSequence:[w getStringWithNSString:@"bv.text.authenticating"]];
  NSString *code = [map getWithId:@"code"];
  RAREaWorkerTask *task = [[CCPBVFHIRFHIRServer_AuthHandler_$1 alloc] initWithCCPBVFHIRFHIRServer_AuthHandler:self withNSString:code withRAREiWidget:widget];
  (void) [w spawnWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ task } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (BOOL)renewToken {
  @try {
    if (refreshToken_ != nil) {
      RAREWindowViewer *w = [RAREPlatform getWindowViewer];
      RAREActionLink *link = [[RAREActionLink alloc] initWithNSString:authorizeUri_];
      RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithNSString:[link sendFormDataWithRAREUTiURLResolver:w withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ @"grant_type", @"refresh_token", @"refresh_token", refreshToken_ } count:4 type:[IOSClass classWithClass:[NSObject class]]]]];
      if ([o containsKeyWithId:@"access_token"]) {
        authHeader_ = [NSString stringWithFormat:@"%@ %@", [o getStringWithNSString:@"token_type"], [o getStringWithNSString:@"access_token"]];
        tokenTimeout_ = [o getIntWithNSString:@"expires_in"];
        refreshToken_ = [o optStringWithNSString:@"refresh_token" withNSString:nil];
        if (refreshToken_ != nil) {
        }
        tokenTimeout_ = tokenTimeout_ * 1000 + [JavaLangSystem currentTimeMillis];
        return YES;
      }
    }
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithJavaLangThrowable:e];
  }
  refreshToken_ = nil;
  return NO;
}

- (void)setCallbackWithRAREiFunctionCallback:(id<RAREiFunctionCallback>)callback {
  self->callback_ = callback;
  self->redirected_ = NO;
}

- (RAREUTJSONObject *)getUserInfoWithRAREUTJSONObject:(RAREUTJSONObject *)o {
  NSString *type = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"resourceType"];
  RAREUTJSONObject *user = nil;
  NSString *id_ = nil;
  if ([((NSString *) nil_chk(type)) isEqual:@"Person"] || [type isEqual:@"Practitioner"]) {
    user = o;
  }
  else {
    id_ = [o optStringWithNSString:@"id_token" withNSString:nil];
    if (id_ != nil) {
      int n = [id_ indexOf:'.'];
      int p = [id_ indexOf:'.' fromIndex:n + 1];
      id_ = [id_ substring:n + 1 endIndex:p];
      id_ = [RAREUTBase64 decodeUTF8WithNSString:[NSString stringWithFormat:@"%@=", id_]];
      user = [[RAREUTJSONObject alloc] initWithNSString:id_];
    }
    @try {
      NSString *s = [((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:@"profile" withNSString:nil];
      if (s != nil) {
        CCPBVActionLinkEx *l = [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) createResourceLinkWithNSString:s withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
        RAREUTJSONObject *profile = [[RAREUTJSONObject alloc] initWithNSString:[((CCPBVActionLinkEx *) nil_chk(l)) getContentAsString]];
        (void) [profile putWithNSString:@"sub" withId:[user optWithNSString:@"sub"]];
        user = profile;
      }
    }
    @catch (JavaLangException *e) {
      [RAREPlatform ignoreExceptionWithJavaLangThrowable:e];
    }
  }
  if (user == nil) {
    user = [[RAREUTJSONObject alloc] init];
    RAREUTJSONObject *name = [[RAREUTJSONObject alloc] init];
    (void) [name putWithNSString:@"text" withId:@"Unknown User"];
    (void) [user putWithNSString:@"name" withJavaUtilMap:name];
    (void) [user putWithNSString:@"id" withId:@"unknown"];
  }
  id_ = [((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:@"id" withNSString:nil];
  if (id_ == nil) {
    id_ = [user optStringWithNSString:@"profile" withNSString:nil];
    if (id_ == nil) {
      id_ = @"unknown";
    }
    else {
      int n = [id_ indexOf:'/'];
      if (n != -1) {
        id_ = [id_ substring:n + 1];
      }
    }
  }
  return user;
}

- (void)errorWithNSString:(NSString *)msg
    withJavaLangThrowable:(JavaLangThrowable *)e {
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVFHIRFHIRServer_AuthHandler_$2 alloc] initWithCCPBVFHIRFHIRServer_AuthHandler:self withJavaLangThrowable:e withNSString:msg]];
}

- (void)successWithRAREUTJSONObject:(RAREUTJSONObject *)result {
  id o = [((RAREUTJSONObject *) nil_chk(result)) removeWithNSString:@"patient"];
  NSString *id_ = nil;
  if ([o isKindOfClass:[RAREUTJSONObject class]]) {
    id_ = [((RAREUTJSONObject *) check_class_cast(o, [RAREUTJSONObject class])) optStringWithNSString:@"id"];
  }
  else if (o != nil) {
    id_ = [o description];
  }
  loggedInUser_ = result;
  if (id_ != nil) {
    [CCPBVUtils setActionPathWithCCPBVActionPath:[[CCPBVActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ id_ } count:1 type:[IOSClass classWithClass:[NSString class]]]]];
  }
  [RAREPlatform invokeLaterWithJavaLangRunnable:[[CCPBVFHIRFHIRServer_AuthHandler_$3 alloc] initWithCCPBVFHIRFHIRServer_AuthHandler:self withRAREUTJSONObject:result]];
}

- (void)copyAllFieldsTo:(CCPBVFHIRFHIRServer_AuthHandler *)other {
  [super copyAllFieldsTo:other];
  other->authHeader_ = authHeader_;
  other->authorizeUri_ = authorizeUri_;
  other->basicAuth_ = basicAuth_;
  other->callback_ = callback_;
  other->endPoint_ = endPoint_;
  other->fhir_ = fhir_;
  other->loggedInUser_ = loggedInUser_;
  other->redirected_ = redirected_;
  other->refreshToken_ = refreshToken_;
  other->server_ = server_;
  other->state_ = state_;
  other->tokenTimeout_ = tokenTimeout_;
  other->tokenUri_ = tokenUri_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "loginWithNSString:withNSString:", NULL, "LRAREUTJSONObject", 0x1, "JavaIoIOException" },
    { "getLoggedInUser", NULL, "LRAREUTJSONObject", 0x1, NULL },
    { "createAuthorizeUrl", NULL, "LNSString", 0x1, NULL },
    { "isTokenValid", NULL, "Z", 0x1, NULL },
    { "renewToken", NULL, "Z", 0x1, NULL },
    { "getUserInfoWithRAREUTJSONObject:", NULL, "LRAREUTJSONObject", 0x4, NULL },
    { "errorWithNSString:withJavaLangThrowable:", NULL, "V", 0x0, NULL },
    { "successWithRAREUTJSONObject:", NULL, "V", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "loggedInUser_", NULL, 0x0, "LRAREUTJSONObject" },
    { "callback_", NULL, 0x0, "LRAREiFunctionCallback" },
    { "server_", NULL, 0x0, "LCCPBVSettings_Server" },
    { "state_", NULL, 0x0, "LNSString" },
    { "authHeader_", NULL, 0x0, "LNSString" },
    { "tokenTimeout_", NULL, 0x0, "J" },
    { "tokenUri_", NULL, 0x0, "LNSString" },
    { "authorizeUri_", NULL, 0x0, "LNSString" },
    { "endPoint_", NULL, 0x0, "LNSString" },
    { "refreshToken_", NULL, 0x0, "LNSString" },
    { "redirected_", NULL, 0x0, "Z" },
    { "basicAuth_", NULL, 0x0, "Z" },
    { "fhir_", NULL, 0x0, "LRAREUTJSONObject" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_AuthHandler = { "AuthHandler", "com.sparseware.bellavista.external.fhir", "FHIRServer", 0x8, 8, methods, 13, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_AuthHandler;
}

@end
@implementation CCPBVFHIRFHIRServer_AuthHandler_$1

- (id)compute {
  @try {
    JavaUtilHashMap *data = [[JavaUtilHashMap alloc] init];
    (void) [data putWithId:@"grant_type" withId:@"authorization_code"];
    (void) [data putWithId:@"code" withId:val$code_];
    (void) [data putWithId:@"redirect_uri" withId:[((RAREUTJSONObject *) nil_chk(this$0_->fhir_)) getStringWithNSString:@"oauth_redirect_uri"]];
    (void) [data putWithId:@"client_id" withId:[this$0_->fhir_ getStringWithNSString:@"oauth_client_id"]];
    RAREActionLink *link = [[RAREActionLink alloc] initWithNSString:this$0_->tokenUri_];
    NSString *s = [link sendFormDataWithRAREUTiURLResolver:nil withJavaUtilMap:data];
    RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithNSString:s];
    this$0_->authHeader_ = [NSString stringWithFormat:@"%@ %@", [o getStringWithNSString:@"token_type"], [o getStringWithNSString:@"access_token"]];
    this$0_->tokenTimeout_ = [o getIntWithNSString:@"expires_in"] * 1000 + [JavaLangSystem currentTimeMillis];
    this$0_->refreshToken_ = [o optStringWithNSString:@"refresh_token" withNSString:nil];
    NSString *id_ = [o optStringWithNSString:@"id_token" withNSString:nil];
    RAREUTJSONObject *user;
    NSString *patient = [o optStringWithNSString:@"patient" withNSString:nil];
    if (patient != nil) {
      int n = [patient lastIndexOf:'/'];
      if (n != -1) {
        patient = [patient substring:n + 1];
      }
    }
    if (id_ == nil) {
      user = [[RAREUTJSONObject alloc] init];
      (void) [user putWithNSString:@"sub" withId:@"unknown"];
      (void) [user putWithNSString:@"profile" withId:@"Practitioner/1234"];
    }
    else {
      int n = [id_ indexOf:'.'];
      int p = [id_ indexOf:'.' fromIndex:n + 1];
      id_ = [id_ substring:n + 1 endIndex:p];
      id_ = [RAREUTBase64 decodeUTF8WithNSString:[NSString stringWithFormat:@"%@=", id_]];
      user = [[RAREUTJSONObject alloc] initWithNSString:id_];
    }
    @try {
      link = [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) createResourceLinkWithNSString:[((RAREUTJSONObject *) nil_chk(user)) getStringWithNSString:@"profile"] withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
      RAREUTJSONObject *profile = [[RAREUTJSONObject alloc] initWithNSString:[((RAREActionLink *) nil_chk(link)) getContentAsString]];
      (void) [profile putWithNSString:@"sub" withId:[user optWithNSString:@"sub"]];
      user = profile;
    }
    @catch (JavaLangException *e) {
      if ([e isKindOfClass:[RAREHTTPException class]]) {
        return e;
      }
      [RAREPlatform ignoreExceptionWithJavaLangThrowable:e];
      RAREUTJSONObject *name = [[RAREUTJSONObject alloc] init];
      (void) [name putWithNSString:@"text" withId:@"unknown"];
      (void) [((RAREUTJSONObject *) nil_chk(user)) putWithNSString:@"name" withJavaUtilMap:name];
    }
    id_ = [((RAREUTJSONObject *) nil_chk(user)) optStringWithNSString:@"id" withNSString:nil];
    if (id_ == nil) {
      id_ = [user optStringWithNSString:@"profile" withNSString:nil];
      if (id_ == nil) {
        id_ = @"unknown";
      }
      else {
        int n = [id_ indexOf:'/'];
        if (n != -1) {
          id_ = [id_ substring:n + 1];
        }
      }
    }
    user = [CCPBVFHIRUsers populateUserWithNSString:id_ withRAREUTJSONObject:user];
    (void) [((RAREUTJSONObject *) nil_chk(user)) putWithNSString:@"patient" withId:patient];
    return user;
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWebBrowser *) check_class_cast(val$widget_, [RAREWebBrowser class])) dispose];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [this$0_ errorWithNSString:nil withJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
  }
  else {
    [this$0_ successWithRAREUTJSONObject:(RAREUTJSONObject *) check_class_cast(result, [RAREUTJSONObject class])];
  }
}

- (id)initWithCCPBVFHIRFHIRServer_AuthHandler:(CCPBVFHIRFHIRServer_AuthHandler *)outer$
                                 withNSString:(NSString *)capture$0
                              withRAREiWidget:(id<RAREiWidget>)capture$1 {
  this$0_ = outer$;
  val$code_ = capture$0;
  val$widget_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFHIRFHIRServer_AuthHandler" },
    { "val$code_", NULL, 0x1012, "LNSString" },
    { "val$widget_", NULL, 0x1012, "LRAREiWidget" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_AuthHandler_$1 = { "$1", "com.sparseware.bellavista.external.fhir", "FHIRServer$AuthHandler", 0x8000, 1, methods, 3, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_AuthHandler_$1;
}

@end
@implementation CCPBVFHIRFHIRServer_AuthHandler_$2

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(this$0_->callback_)) finishedWithBoolean:YES withId:(val$e_ == nil) ? [[CCPBVMessageException alloc] initWithNSString:val$msg_] : [[CCPBVMessageException alloc] initWithJavaLangThrowable:val$e_]];
}

- (id)initWithCCPBVFHIRFHIRServer_AuthHandler:(CCPBVFHIRFHIRServer_AuthHandler *)outer$
                        withJavaLangThrowable:(JavaLangThrowable *)capture$0
                                 withNSString:(NSString *)capture$1 {
  this$0_ = outer$;
  val$e_ = capture$0;
  val$msg_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFHIRFHIRServer_AuthHandler" },
    { "val$e_", NULL, 0x1012, "LJavaLangThrowable" },
    { "val$msg_", NULL, 0x1012, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_AuthHandler_$2 = { "$2", "com.sparseware.bellavista.external.fhir", "FHIRServer$AuthHandler", 0x8000, 0, NULL, 3, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_AuthHandler_$2;
}

@end
@implementation CCPBVFHIRFHIRServer_AuthHandler_$3

- (void)run {
  [((id<RAREiFunctionCallback>) nil_chk(this$0_->callback_)) finishedWithBoolean:NO withId:val$result_];
}

- (id)initWithCCPBVFHIRFHIRServer_AuthHandler:(CCPBVFHIRFHIRServer_AuthHandler *)outer$
                         withRAREUTJSONObject:(RAREUTJSONObject *)capture$0 {
  this$0_ = outer$;
  val$result_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFHIRFHIRServer_AuthHandler" },
    { "val$result_", NULL, 0x1012, "LRAREUTJSONObject" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_AuthHandler_$3 = { "$3", "com.sparseware.bellavista.external.fhir", "FHIRServer$AuthHandler", 0x8000, 0, NULL, 2, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_AuthHandler_$3;
}

@end
@implementation CCPBVFHIRFHIRServer_StreamHandler

- (JavaNetURLConnection *)openConnectionWithJavaNetURL:(JavaNetURL *)u {
  return [[CCPBVFHIRFHIRHttpURLConnection alloc] initWithJavaNetURL:u];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "openConnectionWithJavaNetURL:", NULL, "LJavaNetURLConnection", 0x4, "JavaIoIOException" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_StreamHandler = { "StreamHandler", "com.sparseware.bellavista.external.fhir", "FHIRServer", 0x8, 1, methods, 0, NULL, 0, NULL};
  return &_CCPBVFHIRFHIRServer_StreamHandler;
}

@end
@implementation CCPBVFHIRFHIRServer_$1

- (id)compute {
  @try {
    if (!val$relogin_) {
      [this$0_ initialize__WithCCPBVSettings_Server:val$server_];
      [((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(this$0_->authHandler_)) setCallbackWithRAREiFunctionCallback:val$cb_];
    }
    else {
      [((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(this$0_->authHandler_)) setCallbackWithRAREiFunctionCallback:val$cb_];
      if ([this$0_->authHandler_ renewToken]) {
        return nil;
      }
    }
    RARESPOTBrowser *b = [[RARESPOTBrowser alloc] init];
    return b;
  }
  @catch (JavaLangException *e) {
    return e;
  }
}

- (void)finishWithId:(id)result {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursorWithBoolean:YES];
  if ([result isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(result, [JavaLangThrowable class])];
    return;
  }
  if (result == nil) {
    [((id<RAREiFunctionCallback>) nil_chk(val$cb_)) finishedWithBoolean:NO withId:nil];
    return;
  }
  RAREWebBrowser *v = (RAREWebBrowser *) check_class_cast([val$w_ createViewerWithRAREiWidget:val$w_ withRARESPOTWidget:(RARESPOTViewer *) check_class_cast(result, [RARESPOTViewer class])], [RAREWebBrowser class]);
  [((RAREWebBrowser *) nil_chk(v)) setHandleWaitCursorWithBoolean:YES];
  [v setEventHandlerWithNSString:[RAREiConstants EVENT_CHANGE] withId:this$0_->authHandler_ withBoolean:NO];
  [v setDataURLWithNSString:[((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(this$0_->authHandler_)) createAuthorizeUrl]];
  [CCPBVUtils pushWorkspaceViewerWithRAREiViewer:v];
}

- (id)initWithCCPBVFHIRFHIRServer:(CCPBVFHIRFHIRServer *)outer$
                      withBoolean:(BOOL)capture$0
         withCCPBVSettings_Server:(CCPBVSettings_Server *)capture$1
        withRAREiFunctionCallback:(id<RAREiFunctionCallback>)capture$2
             withRAREWindowViewer:(RAREWindowViewer *)capture$3 {
  this$0_ = outer$;
  val$relogin_ = capture$0;
  val$server_ = capture$1;
  val$cb_ = capture$2;
  val$w_ = capture$3;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compute", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFHIRFHIRServer" },
    { "val$relogin_", NULL, 0x1012, "Z" },
    { "val$server_", NULL, 0x1012, "LCCPBVSettings_Server" },
    { "val$cb_", NULL, 0x1012, "LRAREiFunctionCallback" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_$1 = { "$1", "com.sparseware.bellavista.external.fhir", "FHIRServer", 0x8000, 1, methods, 5, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_$1;
}

@end
@implementation CCPBVFHIRFHIRServer_$2

- (id)entryEncounteredWithRAREUTJSONObject:(RAREUTJSONObject *)entry_ {
  NSString *type = [((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"type" withNSString:nil];
  if (type != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(this$0_->resources_)) putWithId:type withId:[[CCPBVFHIRFHIRServer_FHIRResource alloc] initWithCCPBVFHIRFHIRServer:this$0_ withNSString:type withRAREUTJSONObject:entry_]];
  }
  return nil;
}

- (id)otherArrayElementEncounteredWithNSString:(NSString *)arrayName
                                        withId:(id)value {
  if ([@"rest/security/extension/extension" isEqual:arrayName]) {
    RAREUTJSONObject *o = (RAREUTJSONObject *) check_class_cast(value, [RAREUTJSONObject class]);
    NSString *s = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"url"];
    if ([((NSString *) nil_chk(s)) isEqual:@"register"]) {
    }
    else if ([s isEqual:@"authorize"]) {
      ((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(this$0_->authHandler_))->authorizeUri_ = [o optStringWithNSString:@"valueUri" withNSString:nil];
    }
    else if ([s isEqual:@"token"]) {
      ((CCPBVFHIRFHIRServer_AuthHandler *) nil_chk(this$0_->authHandler_))->tokenUri_ = [o optStringWithNSString:@"valueUri" withNSString:nil];
    }
  }
  return value;
}

- (BOOL)parseArrayWithNSString:(NSString *)arrayName {
  if ([@"rest/security/extension/extension" isEqual:arrayName]) {
    return YES;
  }
  if ([((NSString *) nil_chk(arrayName)) isEqual:@"format"]) {
    return YES;
  }
  return NO;
}

- (id)valueEncounteredWithRAREUTJSONObject:(RAREUTJSONObject *)parent
                              withNSString:(NSString *)key
                                    withId:(id)value {
  NSString *name = [((RAREUTJSONObject *) nil_chk(parent)) getName];
  if (name == nil) {
    NSString *s;
    if ([((NSString *) nil_chk(key)) isEqual:@"fhirVersion"]) {
      s = (NSString *) check_class_cast(value, [NSString class]);
      float v = [RAREUTSNumber floatValueWithNSString:s];
      if ((v > 0.4) && (v < 2)) {
        this$0_->version__ = v;
      }
      else {
        ((RAREUTObjectHolder *) nil_chk(val$oh_))->value_ = [[JavaIoIOException alloc] initWithNSString:[NSString stringWithFormat:@"Unsupported FHIR version: %@", s]];
        [((RAREUTJSONTokener *) nil_chk(val$t_)) setTerminateParsingWithBoolean:YES];
      }
    }
    else if ([key isEqual:@"publisher"]) {
      this$0_->publisher_ = (NSString *) check_class_cast(value, [NSString class]);
    }
    else if ([key isEqual:@"format"]) {
      RAREUTJSONArray *a = (RAREUTJSONArray *) check_class_cast(value, [RAREUTJSONArray class]);
      int len = [((RAREUTJSONArray *) nil_chk(a)) length];
      int i;
      BOOL json = NO;
      for (i = 0; i < len; i++) {
        if ([((NSString *) nil_chk([a getStringWithInt:i])) contains:@"json"]) {
          json = YES;
          break;
        }
      }
      if (!json) {
        ((RAREUTObjectHolder *) nil_chk(val$oh_))->value_ = [[JavaIoIOException alloc] initWithNSString:@"Server does not support JSON"];
        [((RAREUTJSONTokener *) nil_chk(val$t_)) setTerminateParsingWithBoolean:YES];
      }
    }
  }
  else if ([name hasPrefix:@"rest/security/extension/extension"]) {
    return value;
  }
  return nil;
}

- (id)initWithCCPBVFHIRFHIRServer:(CCPBVFHIRFHIRServer *)outer$
           withRAREUTObjectHolder:(RAREUTObjectHolder *)capture$0
            withRAREUTJSONTokener:(RAREUTJSONTokener *)capture$1 {
  this$0_ = outer$;
  val$oh_ = capture$0;
  val$t_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "entryEncounteredWithRAREUTJSONObject:", NULL, "LNSObject", 0x1, NULL },
    { "otherArrayElementEncounteredWithNSString:withId:", NULL, "LNSObject", 0x1, NULL },
    { "parseArrayWithNSString:", NULL, "Z", 0x1, NULL },
    { "valueEncounteredWithRAREUTJSONObject:withNSString:withId:", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFHIRFHIRServer" },
    { "val$oh_", NULL, 0x1012, "LRAREUTObjectHolder" },
    { "val$t_", NULL, 0x1012, "LRAREUTJSONTokener" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_$2 = { "$2", "com.sparseware.bellavista.external.fhir", "FHIRServer", 0x8000, 4, methods, 3, fields, 0, NULL};
  return &_CCPBVFHIRFHIRServer_$2;
}

@end
@implementation CCPBVFHIRFHIRServer_$3

- (JavaIoReader *)getReaderWithNSString:(NSString *)file {
  return [[JavaIoFileReader alloc] initWithNSString:[NSString stringWithFormat:@"%@%@", [((JavaIoFile *) nil_chk(baseFile_)) description], file]];
}

- (id)initWithJavaIoFile:(JavaIoFile *)arg$0 {
  return [super initWithJavaIoFile:arg$0];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getReaderWithNSString:", NULL, "LJavaIoReader", 0x1, "JavaIoIOException" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRServer_$3 = { "$3", "com.sparseware.bellavista.external.fhir", "FHIRServer", 0x8000, 1, methods, 0, NULL, 0, NULL};
  return &_CCPBVFHIRFHIRServer_$3;
}

@end
