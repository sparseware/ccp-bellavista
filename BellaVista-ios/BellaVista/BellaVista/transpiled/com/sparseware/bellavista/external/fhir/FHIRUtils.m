//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/FHIRUtils.java
//
//  Created by decoteaud on 3/14/16.
//

#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/util/Base64.h"
#include "com/appnativa/util/ByteArray.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/appnativa/util/Helper.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/fhir/Composition.h"
#include "com/sparseware/bellavista/external/fhir/DiagnosticReport.h"
#include "com/sparseware/bellavista/external/fhir/Documents.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/FHIRUtils.h"
#include "com/sparseware/bellavista/external/fhir/Procedures.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/aRemoteService.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Set.h"

@implementation CCPBVFHIRFHIRUtils

static JavaUtilHashMap * CCPBVFHIRFHIRUtils_interpretationColors_;

+ (JavaUtilHashMap *)interpretationColors {
  return CCPBVFHIRFHIRUtils_interpretationColors_;
}

- (id)init {
  return [super init];
}

+ (NSString *)cleanAndEncodeStringWithNSString:(NSString *)value {
  if (value != nil) {
    value = [value trim];
    if ([((NSString *) nil_chk(value)) sequenceLength] == 0) {
      value = nil;
    }
    else {
      value = [RAREFunctions base64NOLFWithNSString:value];
    }
  }
  return value;
}

+ (RAREUTCharArray *)concatBestMedicalTextWithRAREUTJSONArray:(RAREUTJSONArray *)a
                                                 withNSString:(NSString *)key
                                          withRAREUTCharArray:(RAREUTCharArray *)ca {
  int len = (a == nil) ? 0 : [a length];
  if (len == 0) {
    return ca;
  }
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *o = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    if (key != nil) {
      o = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:key];
    }
    if (o != nil) {
      (void) [((RAREUTCharArray *) nil_chk(ca)) appendWithNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:o]];
      (void) [ca appendWithNSString:@"; "];
    }
  }
  len = [((RAREUTCharArray *) nil_chk(ca)) sequenceLength];
  if ((len > 2) && ([ca charAtWithInt:len - 2] == ';') && ([ca charAtWithInt:len - 1] == ' ')) {
    (void) [ca setLengthWithInt:len - 2];
  }
  return ca;
}

+ (RAREUTCharArray *)concatStringWithRAREUTJSONArray:(RAREUTJSONArray *)a
                                        withNSString:(NSString *)key
                                 withRAREUTCharArray:(RAREUTCharArray *)sb {
  return [CCPBVFHIRFHIRUtils concatStringWithRAREUTJSONArray:a withNSString:key withRAREUTCharArray:sb withNSString:@"; "];
}

+ (RAREUTCharArray *)concatStringWithRAREUTJSONArray:(RAREUTJSONArray *)a
                                        withNSString:(NSString *)key
                                 withRAREUTCharArray:(RAREUTCharArray *)sb
                                        withNSString:(NSString *)sep {
  int len = (a == nil) ? 0 : [a length];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *o = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    NSString *s = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:key withNSString:nil];
    if (s != nil) {
      (void) [((RAREUTCharArray *) nil_chk(sb)) appendWithNSString:s];
      (void) [sb appendWithNSString:sep];
    }
  }
  len = [((RAREUTCharArray *) nil_chk(sb)) sequenceLength];
  int slen = [((NSString *) nil_chk(sep)) sequenceLength];
  if ([sb indexOfWithNSString:sep withInt:slen] == slen) {
    (void) [sb setLengthWithInt:slen];
  }
  return sb;
}

+ (NSString *)convertIfFractionWithNSString:(NSString *)stringValue
                                  withFloat:(float)value {
  if (value < 0) {
    value = [RAREUTSNumber floatValueWithNSString:stringValue];
  }
  if ([RAREUTSNumber isEqualWithDouble:0.5 withDouble:value]) {
    stringValue = @"1/2";
  }
  if ([RAREUTSNumber isEqualWithDouble:0.25 withDouble:value]) {
    stringValue = @"1/4";
  }
  if ([RAREUTSNumber isEqualWithDouble:0.33 withDouble:value]) {
    stringValue = @"1/3";
  }
  return stringValue;
}

+ (id)createWriterWithCCPBVActionPath:(CCPBVActionPath *)path
               withCCPBVContentWriter:(CCPBVContentWriter *)w
                 withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
                          withBoolean:(BOOL)row {
  id writer;
  RAREUTJSONWriter *jw = nil;
  if ([CCPBVFHIRFHIRUtils isJSONFormatRequestedWithCCPBVActionPath:path]) {
    jw = [[RAREUTJSONWriter alloc] initWithJavaIoWriter:w];
    writer = jw;
  }
  else {
    writer = w;
  }
  [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
  if (jw != nil) {
    [headers mimeJson];
  }
  else {
    if (row) {
      [headers mimeRow];
    }
    else {
      [headers mimeList];
    }
  }
  return writer;
}

+ (void)escapeContolSequencesIfNecessaryWithJavaIoWriter:(JavaIoWriter *)w
                                            withNSString:(NSString *)value {
}

+ (NSString *)getActorWithRAREUTJSONObject:(RAREUTJSONObject *)o
                       withRAREUTCharArray:(RAREUTCharArray *)ca {
  NSString *s = nil;
  RAREUTJSONObject *oo = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:@"actor"];
  if (oo != nil) {
    s = [CCPBVFHIRFHIRUtils getReferenceTextWithRAREUTJSONObject:oo];
    oo = [o optJSONObjectWithNSString:@"role"];
  }
  if (oo == nil) {
    return s;
  }
  (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk(ca)) setWithNSString:s])) appendWithNSString:@" ("];
  (void) [ca appendWithNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
  (void) [ca appendWithChar:')'];
  return [ca description];
}

+ (NSString *)getBestMedicalCodeWithRAREUTJSONArray:(RAREUTJSONArray *)a {
  int len = (a == nil) ? 0 : [a length];
  NSString *loinc = nil;
  NSString *other = nil;
  NSString *snomed = nil;
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *coding = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    NSString *system = [((RAREUTJSONObject *) nil_chk(coding)) optStringWithNSString:@"system" withNSString:nil];
    if (system != nil) {
      if ([system hasPrefix:@"http://hl7.org/fhir/"]) {
        return [coding getStringWithNSString:@"code"];
      }
      else if ([system hasPrefix:@"http://loinc.org"]) {
        loinc = [coding getStringWithNSString:@"code"];
      }
      else if ([system hasPrefix:@"http://snomed.info"]) {
        snomed = [coding getStringWithNSString:@"code"];
      }
      else {
        other = [coding getStringWithNSString:@"code"];
      }
    }
    else {
      other = [coding getStringWithNSString:@"code"];
    }
  }
  return (loinc != nil) ? loinc : ((snomed != nil) ? snomed : other);
}

+ (NSString *)getBestMedicalCodeWithRAREUTJSONObject:(RAREUTJSONObject *)o {
  RAREUTJSONArray *a = (o == nil) ? nil : [o optJSONArrayWithNSString:@"coding"];
  NSString *code = (a == nil) ? nil : [CCPBVFHIRFHIRUtils getBestMedicalCodeWithRAREUTJSONArray:a];
  if ((o != nil) && (code == nil)) {
    code = [o optStringWithNSString:@"code" withNSString:nil];
    if (code == nil) {
      code = [o optStringWithNSString:@"text" withNSString:nil];
    }
  }
  return code;
}

+ (NSString *)getBestMedicalTextWithRAREUTJSONArray:(RAREUTJSONArray *)a {
  int len = (a == nil) ? 0 : [a length];
  NSString *loinc = nil;
  NSString *other = nil;
  NSString *snomed = nil;
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *coding = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    NSString *system = [((RAREUTJSONObject *) nil_chk(coding)) optStringWithNSString:@"system" withNSString:nil];
    if (system != nil) {
      if ([system hasPrefix:@"http://hl7.org/fhir/"]) {
        NSString *s = [coding optStringWithNSString:@"display" withNSString:nil];
        if (s != nil) {
          return s;
        }
        other = [coding optStringWithNSString:@"code" withNSString:nil];
      }
      else if ([system hasPrefix:@"http://loinc.org"]) {
        loinc = [coding optStringWithNSString:@"display" withNSString:nil];
        if (loinc == nil) {
          loinc = [coding optStringWithNSString:@"code" withNSString:nil];
        }
      }
      else if ([system hasPrefix:@"http://snomed.info"]) {
        snomed = [coding optStringWithNSString:@"display" withNSString:nil];
        if (snomed == nil) {
          snomed = [coding optStringWithNSString:@"code" withNSString:nil];
        }
      }
      else {
        other = [coding optStringWithNSString:@"display" withNSString:nil];
        if (other == nil) {
          other = [coding optStringWithNSString:@"code" withNSString:nil];
        }
      }
    }
    else {
      other = [coding optStringWithNSString:@"display" withNSString:nil];
    }
  }
  return (loinc != nil) ? loinc : ((snomed != nil) ? snomed : other);
}

+ (NSString *)getBestMedicalTextWithRAREUTJSONObject:(RAREUTJSONObject *)o {
  if (o != nil) {
    NSString *code = [o optStringWithNSString:@"text" withNSString:nil];
    if (code == nil) {
      RAREUTJSONArray *a = (o == nil) ? nil : [o optJSONArrayWithNSString:@"coding"];
      code = (a == nil) ? nil : [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONArray:a];
    }
    return code;
  }
  return nil;
}

+ (NSString *)getCodableConceptWithRAREUTJSONArray:(RAREUTJSONArray *)a
                                      withNSString:(NSString *)field
                               withJavaUtilHashMap:(JavaUtilHashMap *)map {
  int len = [((RAREUTJSONArray *) nil_chk(a)) length];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *idf = [a getJSONObjectWithInt:i];
    RAREUTJSONObject *type = [((RAREUTJSONObject *) nil_chk(idf)) optJSONObjectWithNSString:@"type"];
    RAREUTJSONArray *aa = (type == nil) ? nil : [type optJSONArrayWithNSString:@"coding"];
    int alen = (aa == nil) ? 0 : [aa length];
    for (int ai = 0; ai < alen; ai++) {
      RAREUTJSONObject *coding = [aa getJSONObjectWithInt:ai];
      NSString *code = [((RAREUTJSONObject *) nil_chk(coding)) getStringWithNSString:@"code"];
      code = [((JavaUtilHashMap *) nil_chk(map)) getWithId:code];
      if ((code != nil) && [code isEqual:field]) {
        return [idf getStringWithNSString:@"value"];
      }
    }
    NSString *code = [idf optStringWithNSString:@"system" withNSString:nil];
    if (code != nil) {
      code = [((JavaUtilHashMap *) nil_chk(map)) getWithId:code];
      if ((code != nil) && [code isEqual:field]) {
        return [idf getStringWithNSString:@"value"];
      }
    }
  }
  return nil;
}

+ (NSString *)getCodeableConceptOrReferenceTextWithRAREUTJSONObject:(RAREUTJSONObject *)o
                                                       withNSString:(NSString *)prefix
                                                withRAREUTCharArray:(RAREUTCharArray *)ca {
  (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk(ca)) setWithNSString:prefix])) appendWithNSString:@"CodeableConcept"];
  RAREUTJSONObject *oo = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:[ca description]];
  if (oo != nil) {
    return [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
  }
  (void) [ca setLengthWithInt:[((NSString *) nil_chk(prefix)) sequenceLength]];
  (void) [ca appendWithNSString:@"Reference"];
  oo = [o optJSONObjectWithNSString:[ca description]];
  return (oo == nil) ? nil : [oo optStringWithNSString:@"display" withNSString:nil];
}

+ (int)getDaysBetweenInSameYearWithJavaUtilDate:(JavaUtilDate *)date1
                               withJavaUtilDate:(JavaUtilDate *)date2 {
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  int y1;
  int y2;
  int d1;
  int days = 0;
  [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:date1];
  y1 = [cal getWithInt:JavaUtilCalendar_YEAR];
  d1 = [cal getWithInt:JavaUtilCalendar_DAY_OF_YEAR];
  y2 = [cal getWithInt:JavaUtilCalendar_YEAR];
  if (y1 == y2) {
    [cal setTimeWithJavaUtilDate:date2];
    days = [cal getWithInt:JavaUtilCalendar_DAY_OF_YEAR] - d1;
    if (days == 0) {
      days = 1;
    }
  }
  return (days < 0) ? -days : days;
}

+ (NSString *)getHL7FHIRCodeWithRAREUTJSONArray:(RAREUTJSONArray *)a {
  int len = (a == nil) ? 0 : [a length];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *coding = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    NSString *system = [((RAREUTJSONObject *) nil_chk(coding)) getStringWithNSString:@"system"];
    if ([((NSString *) nil_chk(system)) hasPrefix:@"http://hl7.org/fhir/"]) {
      return [coding optStringWithNSString:@"code" withNSString:nil];
    }
  }
  return nil;
}

+ (NSString *)getInterpretationColorWithNSString:(NSString *)code {
  if (code == nil) {
    return nil;
  }
  NSString *color = [((JavaUtilHashMap *) nil_chk(CCPBVFHIRFHIRUtils_interpretationColors_)) getWithId:code];
  if (color == nil) {
    return @"unknown";
  }
  return ([((NSString *) nil_chk(color)) sequenceLength] == 0) ? nil : color;
}

+ (CCPBVFHIRFHIRUtils_MedicalCode *)getMedicalCodeWithRAREUTJSONArray:(RAREUTJSONArray *)a {
  int len = (a == nil) ? 0 : [a length];
  NSString *hl7 = nil;
  NSString *loinc = nil;
  NSString *other = nil;
  NSString *snomed = nil;
  NSString *hl7Text = nil;
  NSString *loincText = nil;
  NSString *otherText = nil;
  NSString *snomedText = nil;
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *coding = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    NSString *system = [((RAREUTJSONObject *) nil_chk(coding)) optStringWithNSString:@"system" withNSString:nil];
    if (system != nil) {
      if ([system hasPrefix:@"http://hl7.org/fhir/"]) {
        hl7 = [coding getStringWithNSString:@"code"];
        hl7Text = [coding optStringWithNSString:@"display" withNSString:nil];
      }
      else if ([system hasPrefix:@"http://loinc.org"]) {
        loinc = [coding getStringWithNSString:@"code"];
        loincText = [coding optStringWithNSString:@"display" withNSString:nil];
      }
      else if ([system hasPrefix:@"http://snomed.info"]) {
        snomed = [coding getStringWithNSString:@"code"];
        snomedText = [coding optStringWithNSString:@"display" withNSString:nil];
      }
      else {
        other = [coding getStringWithNSString:@"code"];
        otherText = [coding optStringWithNSString:@"display" withNSString:nil];
      }
    }
    else {
      other = [coding getStringWithNSString:@"code"];
      otherText = [coding optStringWithNSString:@"display" withNSString:nil];
    }
  }
  if ((snomed == nil) && (other != nil)) {
    snomed = other;
    snomedText = otherText;
  }
  if ((hl7 == nil) && (loinc == nil) && (snomed == nil)) {
    return nil;
  }
  return [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:hl7 withNSString:snomed withNSString:loinc withNSString:hl7Text withNSString:loincText withNSString:snomedText];
}

+ (CCPBVFHIRFHIRUtils_MedicalCode *)getMedicalCodeWithRAREUTJSONObject:(RAREUTJSONObject *)o {
  if (o == nil) {
    return nil;
  }
  RAREUTJSONArray *a = [((RAREUTJSONObject *) nil_chk(o)) optJSONArrayWithNSString:@"coding"];
  CCPBVFHIRFHIRUtils_MedicalCode *mc = (a == nil) ? nil : [CCPBVFHIRFHIRUtils getMedicalCodeWithRAREUTJSONArray:a];
  if (mc == nil) {
    NSString *code = [o optStringWithNSString:@"code" withNSString:nil];
    NSString *display = [o optStringWithNSString:@"display" withNSString:nil];
    if (code != nil) {
      mc = [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:code withNSString:nil withNSString:display withNSString:nil];
    }
  }
  if (mc == nil) {
    mc = [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:nil withNSString:nil];
  }
  if (mc != nil) {
    mc->text_ = [o optStringWithNSString:@"text" withNSString:nil];
  }
  return mc;
}

+ (NSString *)getQuantityWithRAREUTJSONObject:(RAREUTJSONObject *)qty
                          withRAREUTCharArray:(RAREUTCharArray *)ca {
  if (qty == nil) {
    return nil;
  }
  NSString *unit = [((RAREUTJSONObject *) nil_chk(qty)) optStringWithNSString:@"unit" withNSString:nil];
  NSString *value = [qty optStringWithNSString:@"value"];
  NSString *comparator = [qty optStringWithNSString:@"comparator" withNSString:@"="];
  ((RAREUTCharArray *) nil_chk(ca))->_length_ = 0;
  if (![((NSString *) nil_chk(comparator)) isEqual:@"="]) {
    (void) [ca appendWithNSString:comparator];
  }
  (void) [ca appendWithNSString:value];
  if (unit != nil) {
    (void) [((RAREUTCharArray *) nil_chk([ca appendWithChar:' '])) appendWithNSString:unit];
  }
  return [ca description];
}

+ (NSString *)getRangeWithRAREUTJSONArray:(RAREUTJSONArray *)ranges
                              withBoolean:(BOOL)includeUnits
                      withRAREUTCharArray:(RAREUTCharArray *)ca {
  int len = (ranges == nil) ? 0 : [ranges length];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *o = [((RAREUTJSONArray *) nil_chk(ranges)) getJSONObjectWithInt:i];
    NSString *range = [CCPBVFHIRFHIRUtils getRangeWithRAREUTJSONObject:o withBoolean:includeUnits withRAREUTCharArray:ca];
    RAREUTJSONArray *a = [((RAREUTJSONObject *) nil_chk(o)) optJSONArrayWithNSString:@"meaning"];
    NSString *meaning = (a == nil) ? nil : [CCPBVFHIRFHIRUtils getHL7FHIRCodeWithRAREUTJSONArray:a];
    if ((range != nil) && ((meaning == nil) || [meaning isEqual:@"N"])) {
      return range;
    }
  }
  return nil;
}

+ (NSString *)getRangeWithRAREUTJSONObject:(RAREUTJSONObject *)range
                               withBoolean:(BOOL)includeUnits
                       withRAREUTCharArray:(RAREUTCharArray *)ca {
  if (range == nil) {
    return nil;
  }
  NSString *s = [CCPBVFHIRFHIRUtils getRangeOrRatioWithRAREUTJSONObject:range withNSString:@"low" withNSString:@"high" withNSString:@" - " withBoolean:YES withRAREUTCharArray:ca];
  return (s == nil) ? [((RAREUTJSONObject *) nil_chk(range)) optStringWithNSString:@"text" withNSString:nil] : s;
}

+ (NSString *)getRangeOrRatioWithRAREUTJSONObject:(RAREUTJSONObject *)rate
                                     withNSString:(NSString *)firstKey
                                     withNSString:(NSString *)secondKey
                                     withNSString:(NSString *)sep
                                      withBoolean:(BOOL)includeUnits
                              withRAREUTCharArray:(RAREUTCharArray *)ca {
  if (rate == nil) {
    return nil;
  }
  NSString *firstUnit = nil;
  NSString *secondUnit = nil;
  NSString *firstValue = nil;
  NSString *secondValue = nil;
  RAREUTJSONObject *first = [((RAREUTJSONObject *) nil_chk(rate)) optJSONObjectWithNSString:firstKey];
  RAREUTJSONObject *second = [rate optJSONObjectWithNSString:secondKey];
  if (first != nil) {
    firstValue = [first optStringWithNSString:@"value" withNSString:nil];
    firstUnit = includeUnits ? [first optStringWithNSString:@"unit" withNSString:nil] : nil;
  }
  if (second != nil) {
    secondValue = [second optStringWithNSString:@"value" withNSString:nil];
    secondUnit = includeUnits ? [second optStringWithNSString:@"unit" withNSString:nil] : nil;
  }
  if ((firstValue == nil) && (secondValue == nil)) {
    return nil;
  }
  ((RAREUTCharArray *) nil_chk(ca))->_length_ = 0;
  if (firstValue != nil) {
    (void) [ca appendWithNSString:firstValue];
    if (firstUnit != nil) {
      (void) [((RAREUTCharArray *) nil_chk([ca appendWithChar:' '])) appendWithNSString:firstUnit];
    }
  }
  if (secondValue != nil) {
    (void) [((RAREUTCharArray *) nil_chk([ca appendWithNSString:sep])) appendWithNSString:secondValue];
    if (secondUnit != nil) {
      (void) [((RAREUTCharArray *) nil_chk([ca appendWithChar:' '])) appendWithNSString:secondUnit];
    }
  }
  return [ca description];
}

+ (NSString *)getRatioWithRAREUTJSONObject:(RAREUTJSONObject *)rate
                       withRAREUTCharArray:(RAREUTCharArray *)ca {
  if (rate == nil) {
    return nil;
  }
  NSString *s = [CCPBVFHIRFHIRUtils getRangeOrRatioWithRAREUTJSONObject:rate withNSString:@"numerator" withNSString:@"denominator" withNSString:@"/" withBoolean:YES withRAREUTCharArray:ca];
  return (s == nil) ? [((RAREUTJSONObject *) nil_chk(rate)) optStringWithNSString:@"text" withNSString:nil] : s;
}

+ (NSString *)getPeriodWithRAREUTJSONObject:(RAREUTJSONObject *)period
                        withRAREUTCharArray:(RAREUTCharArray *)ca {
  if (period == nil) {
    return nil;
  }
  NSString *start = [((RAREUTJSONObject *) nil_chk(period)) optStringWithNSString:@"start" withNSString:nil];
  NSString *end = [period optStringWithNSString:@"end" withNSString:nil];
  if (start != nil) {
    (void) [((RAREUTCharArray *) nil_chk(ca)) appendWithNSString:[CCPBVFHIRFHIRServer convertDateTimeWithNSString:start]];
  }
  if (end != nil) {
    if (start != nil) {
      (void) [((RAREUTCharArray *) nil_chk(ca)) appendWithNSString:@" - "];
    }
    (void) [((RAREUTCharArray *) nil_chk(ca)) appendWithNSString:[CCPBVFHIRFHIRServer convertDateTimeWithNSString:end]];
  }
  return [((RAREUTCharArray *) nil_chk(ca)) description];
}

+ (NSString *)getReferenceTextWithRAREUTJSONObject:(RAREUTJSONObject *)o {
  return (o == nil) ? nil : [o optStringWithNSString:@"display"];
}

+ (NSString *)getTimingWithRAREUTJSONObject:(RAREUTJSONObject *)o
                        withRAREUTCharArray:(RAREUTCharArray *)sb {
  return (o == nil) ? nil : [CCPBVFHIRFHIRUtils getTimingWithRAREUTJSONObject:o withNSString:nil withNSString:nil withBoolean:YES withRAREUTCharArray:sb];
}

+ (NSString *)getTimingWithRAREUTJSONObject:(RAREUTJSONObject *)o
                               withNSString:(NSString *)dose
                               withNSString:(NSString *)route
                                withBoolean:(BOOL)appendBounds
                        withRAREUTCharArray:(RAREUTCharArray *)sb {
  NSString *duration = nil;
  NSString *durationMax = nil;
  NSString *durationUnits = nil;
  NSString *period = nil;
  NSString *periodMax = nil;
  NSString *periodUnits = nil;
  NSString *frequency = nil;
  NSString *frequencyMax = nil;
  NSString *bounds = nil;
  NSString *count = nil;
  NSString *code = nil;
  NSString *s = nil;
  NSString *when = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"when" withNSString:nil];
  float p = 0;
  float f = 0;
  float d = 0;
  CCPBVFHIRFHIRServer *server = [CCPBVFHIRFHIRServer getInstance];
  RAREUTJSONObject *oo = [o optJSONObjectWithNSString:@"code"];
  if (oo != nil) {
    CCPBVFHIRFHIRUtils_MedicalCode *mc = [CCPBVFHIRFHIRUtils getMedicalCodeWithRAREUTJSONObject:oo];
    s = nil;
    if (mc != nil) {
      s = [mc getBestCode];
      if (s != nil) {
        JavaUtilHashMap *map = ((CCPBVFHIRFHIRServer *) nil_chk(server))->timingCode_;
        s = [((JavaUtilHashMap *) nil_chk(map)) getWithId:[s uppercaseStringWithJRELocale:[JavaUtilLocale US]]];
      }
      if (s == nil) {
        s = [mc getBestText];
        (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk(sb)) trim])) appendWithNSString:@"; "])) appendWithNSString:s];
      }
    }
    else {
      s = [oo optStringWithNSString:@"text" withNSString:nil];
    }
    code = s;
  }
  (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
  RAREUTJSONObject *repeat = [o optJSONObjectWithNSString:@"repeat"];
  if (repeat != nil) {
    RAREUTJSONObject *so = [repeat optJSONObjectWithNSString:@"boundsPeriod"];
    if (so == nil) {
      so = [repeat optJSONObjectWithNSString:@"bounds"];
    }
    if (so != nil) {
      NSString *start = [so optStringWithNSString:@"start" withNSString:nil];
      NSString *end = [so optStringWithNSString:@"end" withNSString:nil];
      if (start != nil) {
        (void) [o putWithNSString:@"_start" withId:start];
        if (end != nil) {
          (void) [o putWithNSString:@"_end" withId:end];
          start = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:start];
          end = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:end];
          bounds = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_start_stop"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ start, end } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
        }
        else {
          start = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:start];
          bounds = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_start"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ start } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
        }
      }
      else if (end != nil) {
        start = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:start];
        (void) [o putWithNSString:@"_end" withId:end];
        end = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:end];
        bounds = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_stop"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ start } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      }
      if (start != nil) {
        (void) [o putWithNSString:@"_startDate" withId:start];
      }
      if (end != nil) {
        (void) [o putWithNSString:@"_stopDate" withId:end];
      }
    }
    else {
      so = [repeat optJSONObjectWithNSString:@"boundsQuantity"];
      if (so != nil) {
        bounds = [CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:so withRAREUTCharArray:sb];
        if ((bounds != nil) && ([bounds sequenceLength] > 0)) {
          bounds = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_duration"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ bounds } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
        }
      }
      else {
        so = [repeat optJSONObjectWithNSString:@"boundsRange"];
        if (so != nil) {
          bounds = [CCPBVFHIRFHIRUtils getRangeWithRAREUTJSONObject:so withBoolean:YES withRAREUTCharArray:sb];
          if ((bounds != nil) && ([bounds sequenceLength] > 0)) {
            bounds = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_range"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ bounds } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
          }
        }
      }
    }
    duration = [repeat optStringWithNSString:@"duration" withNSString:nil];
    durationMax = [repeat optStringWithNSString:@"durationMax" withNSString:nil];
    durationUnits = [repeat optStringWithNSString:@"durationUnits" withNSString:nil];
    count = [repeat optStringWithNSString:@"count" withNSString:nil];
    frequency = [repeat optStringWithNSString:@"frequency" withNSString:nil];
    frequencyMax = [repeat optStringWithNSString:@"frequencyMax" withNSString:nil];
    period = [repeat optStringWithNSString:@"period" withNSString:nil];
    periodMax = [repeat optStringWithNSString:@"periodMax" withNSString:nil];
    periodUnits = [repeat optStringWithNSString:@"periodUnits" withNSString:nil];
    when = [repeat optStringWithNSString:@"when" withNSString:nil];
    d = (duration == nil) ? 0 : [RAREUTSNumber floatValueWithNSString:duration];
    f = (frequency == nil) ? 0 : [RAREUTSNumber floatValueWithNSString:frequency];
    p = (period == nil) ? 0 : [RAREUTSNumber floatValueWithNSString:period];
    if (durationUnits != nil) {
      s = durationUnits;
      if (d > 1) {
        (void) [((RAREUTCharArray *) nil_chk([sb setWithNSString:s])) appendWithNSString:@"_p"];
        s = [sb description];
      }
      s = [((JavaUtilHashMap *) nil_chk(((CCPBVFHIRFHIRServer *) nil_chk(server))->timeUnits_)) getWithId:s];
      if (s != nil) {
        durationUnits = s;
      }
    }
    if (periodUnits != nil) {
      s = periodUnits;
      if (p > 1) {
        (void) [((RAREUTCharArray *) nil_chk([sb setWithNSString:s])) appendWithNSString:@"_p"];
        s = [sb description];
      }
      s = [((JavaUtilHashMap *) nil_chk(((CCPBVFHIRFHIRServer *) nil_chk(server))->timeUnits_)) getWithId:s];
      if (s != nil) {
        periodUnits = s;
      }
    }
    if (when != nil) {
      when = [when uppercaseStringWithJRELocale:[JavaUtilLocale US]];
      s = [((JavaUtilHashMap *) nil_chk(((CCPBVFHIRFHIRServer *) nil_chk(server))->timingWhen_)) getWithId:when];
      if (s != nil) {
        when = s;
      }
    }
    if ((frequencyMax != nil) && [frequencyMax isEqual:frequency]) {
      frequencyMax = nil;
    }
    if ((periodMax != nil) && [periodMax isEqual:period]) {
      periodMax = nil;
    }
    if ((durationMax != nil) && [durationMax isEqual:duration]) {
      durationMax = nil;
    }
  }
  RAREUTJSONArray *a = [o optJSONArrayWithNSString:@"event"];
  (void) [sb setLengthWithInt:0];
  int len = (a == nil) ? 0 : [a length];
  if (len > 0) {
    (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.text.event"]])) appendWithNSString:@" "];
    for (int i = 0; i < len; i++) {
      if (i > 0) {
        (void) [sb appendWithNSString:@", "];
      }
      (void) [sb appendWithNSString:[CCPBVFHIRFHIRServer convertDateTimeWithNSString:[((RAREUTJSONArray *) nil_chk(a)) getStringWithInt:i]]];
    }
    if (len > 1) {
      (void) [sb setLengthWithInt:[sb sequenceLength] - 1];
    }
    (void) [sb appendWithNSString:@"; "];
  }
  if (bounds != nil) {
    if ([sb sequenceLength] > 0) {
      bounds = [bounds lowercaseStringWithJRELocale:[JavaUtilLocale getDefault]];
    }
    if (appendBounds) {
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:bounds])) appendWithNSString:@", "];
    }
    else {
      (void) [o putWithNSString:@"_bounds" withId:bounds];
    }
  }
  s = [((CCPBVFHIRFHIRServer *) nil_chk(server)) getResourceAsStringWithNSString:@"bv.timing.text.do_give"];
  if ([sb sequenceLength] > 0) {
    s = [((NSString *) nil_chk(s)) lowercaseStringWithJRELocale:[JavaUtilLocale getDefault]];
  }
  (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:s])) appendWithChar:' '];
  if (dose != nil) {
    (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:dose])) appendWithNSString:@" "];
  }
  if (repeat != nil) {
    if (frequency != nil) {
      BOOL doTimes = YES;
      if (frequencyMax != nil) {
        (void) [sb appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:frequency withFloat:f]];
        (void) [((RAREUTCharArray *) nil_chk([sb appendWithChar:'-'])) appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:frequencyMax withFloat:-1]];
        (void) [sb appendWithChar:' '];
      }
      else {
        if ([frequency isEqual:@"1"]) {
          (void) [sb appendWithNSString:[server getResourceAsStringWithNSString:@"bv.timing.text.once"]];
          doTimes = NO;
        }
        else if ([frequency isEqual:@"2"]) {
          (void) [sb appendWithNSString:[server getResourceAsStringWithNSString:@"bv.timing.text.twice"]];
          (void) [sb appendWithChar:' '];
          doTimes = NO;
        }
        else {
          (void) [sb appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:frequency withFloat:f]];
          (void) [sb appendWithChar:' '];
        }
      }
      if (doTimes) {
        (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:[server getResourceAsStringWithNSString:@"bv.timing.text.times"]])) appendWithChar:' '];
      }
    }
    if (route != nil) {
      (void) [sb trim];
      (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([sb appendWithNSString:@", "])) appendWithNSString:route])) appendWithNSString:@" "];
    }
    if (period != nil) {
      BOOL p1 = [RAREUTSNumber isEqualWithFloat:p withFloat:1];
      (void) [((RAREUTCharArray *) nil_chk([sb trim])) appendWithNSString:@", "];
      if (frequency != nil) {
        (void) [sb appendWithNSString:[server getResourceAsStringWithNSString:@"bv.timing.text.every"]];
        (void) [sb appendWithChar:' '];
      }
      if (periodMax != nil) {
        (void) [sb appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:period withFloat:p]];
        (void) [((RAREUTCharArray *) nil_chk([sb appendWithChar:'-'])) appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:periodMax withFloat:-1]];
        (void) [sb appendWithChar:' '];
      }
      else if (!p1) {
        (void) [sb appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:period withFloat:p]];
        (void) [sb appendWithChar:' '];
      }
      if (periodUnits != nil) {
        (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:periodUnits])) appendWithChar:' '];
      }
    }
    if (when != nil) {
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:when])) appendWithChar:' '];
    }
    if (duration != nil) {
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:[server getResourceAsStringWithNSString:@"bv.timing.text.for"]])) appendWithChar:' '];
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:duration withFloat:d]])) appendWithChar:' '];
      if (durationMax != nil) {
        (void) [((RAREUTCharArray *) nil_chk([sb appendWithChar:'-'])) appendWithNSString:[CCPBVFHIRFHIRUtils convertIfFractionWithNSString:durationMax withFloat:-1]];
      }
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:durationUnits])) appendWithChar:' '];
    }
    if (count != nil) {
      (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([sb appendWithNSString:@"; "])) appendWithNSString:[server getResourceAsStringWithNSString:@"bv.timing.text.repeat"]])) appendWithChar:' '];
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:count])) appendWithChar:' '];
      (void) [((RAREUTCharArray *) nil_chk([sb appendWithNSString:[server getResourceAsStringWithNSString:@"bv.text.times"]])) appendWithChar:' '];
    }
  }
  if (code != nil) {
    (void) [sb trim];
    if ([sb indexOfWithChar:','] != -1) {
      (void) [sb appendWithNSString:@", "];
    }
    else if ([sb sequenceLength] > 0) {
      (void) [sb appendWithNSString:@" "];
    }
    (void) [sb appendWithNSString:code];
  }
  return [((RAREUTCharArray *) nil_chk([sb trim])) description];
}

+ (NSString *)getDataAsStringWithNSString:(NSString *)url
                             withNSString:(NSString *)type {
  if (url == nil) {
    return @"";
  }
  return [((CCPBVActionLinkEx *) nil_chk([((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) createLinkWithNSString:url])) getContentAsString];
}

+ (NSString *)getDataAsBase64StringWithNSString:(NSString *)url
                                   withNSString:(NSString *)type {
  if (url == nil) {
    return @"";
  }
  RAREUTByteArray *ba = [((CCPBVActionLinkEx *) nil_chk([((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) createLinkWithNSString:url])) getContentAsBytes];
  return [RAREUTBase64 encodeBytesWithByteArray:((RAREUTByteArray *) nil_chk(ba))->A_ withInt:0 withInt:ba->_length_];
}

+ (void)writeAttachmentWithRAREUTJSONObject:(RAREUTJSONObject *)attachment
                           withJavaIoWriter:(JavaIoWriter *)w
                                withBoolean:(BOOL)child {
  NSString *title = [((RAREUTJSONObject *) nil_chk(attachment)) optStringWithNSString:@"title"];
  NSString *type = [attachment optStringWithNSString:@"contentType" withNSString:@"text/plain"];
  NSString *b64Data = [attachment optStringWithNSString:@"data" withNSString:nil];
  if (child) {
    [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[CCPBVFHIRDocuments BOUNDARY_START]];
    [w writeWithNSString:@"Content-Type: text/html\x0d\n\x0d\n"];
  }
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:title];
  if ([((NSString *) nil_chk(type)) hasPrefix:@"text/html"]) {
    if (b64Data == nil) {
      [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[CCPBVFHIRFHIRUtils getDataAsStringWithNSString:[attachment optStringWithNSString:@"url" withNSString:nil] withNSString:@"text/html"]];
    }
    else {
      [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[RAREFunctions decodeBase64WithNSString:b64Data]];
    }
  }
  else if ([type hasPrefix:@"text/plain"]) {
    [((JavaIoWriter *) nil_chk(w)) writeWithNSString:@"<pre>\n"];
    if (b64Data == nil) {
      [w writeWithNSString:[CCPBVFHIRFHIRUtils getDataAsStringWithNSString:[attachment optStringWithNSString:@"url" withNSString:nil] withNSString:@"text/plain"]];
    }
    else {
      [w writeWithNSString:[RAREFunctions decodeBase64WithNSString:b64Data]];
    }
    [w writeWithNSString:@"</pre>\n"];
  }
  else if ([type hasPrefix:@"image/"]) {
    [((JavaIoWriter *) nil_chk(w)) writeWithNSString:@"<div class=\"image_doc\">\n"];
    [w writeWithNSString:[NSString stringWithFormat:@"<img alt=\"%@\"", title]];
    [w writeWithNSString:[NSString stringWithFormat:@" src=\"data:%@;base64,", type]];
    if (b64Data == nil) {
      b64Data = [CCPBVFHIRFHIRUtils getDataAsBase64StringWithNSString:[attachment optStringWithNSString:@"url" withNSString:nil] withNSString:type];
    }
    [w writeWithNSString:b64Data];
    [w writeWithNSString:@"\"/>\n"];
    [w writeWithNSString:@"</div>\n"];
  }
  else if ([type hasPrefix:@"application/json+fhir"]) {
    RAREUTJSONObject *entry_ = [[RAREUTJSONObject alloc] initWithNSString:[CCPBVFHIRFHIRUtils getDataAsStringWithNSString:[attachment optStringWithNSString:@"url" withNSString:nil] withNSString:type]];
    NSString *rtype = [entry_ optStringWithNSString:@"resourceType"];
    if ([((NSString *) nil_chk(rtype)) isEqual:@"DiagnosticReport"]) {
      CCPBVFHIRDiagnosticReport *r = [[CCPBVFHIRDiagnosticReport alloc] init];
      [r readEntryWithRAREUTJSONObject:entry_ withRAREUTJSONWriter:nil withJavaIoWriter:w withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    else if ([rtype isEqual:@"Composition"]) {
      CCPBVFHIRComposition *r = [[CCPBVFHIRComposition alloc] init];
      [r readEntryWithRAREUTJSONObject:entry_ withRAREUTJSONWriter:nil withJavaIoWriter:w withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    else if ([rtype isEqual:@"Procedure"]) {
      CCPBVFHIRProcedures *r = [[CCPBVFHIRProcedures alloc] init];
      [r readEntryWithRAREUTJSONObject:entry_ withRAREUTJSONWriter:nil withJavaIoWriter:w withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    else {
      [((JavaIoWriter *) nil_chk(w)) writeWithNSString:@"<pre>\n"];
      [w writeWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) getResourceAsStringWithNSString:@"bv.text.cant_load_document"]];
      [w writeWithNSString:@"</pre>\n"];
    }
  }
  else {
    [((JavaIoWriter *) nil_chk(w)) writeWithNSString:@"<h3>\n"];
    [w writeWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) getResourceAsStringWithNSString:@"bv.text.cant_load_document"]];
    [w writeWithNSString:@"</h3>\n"];
  }
  [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
}

+ (NSString *)getValueWithRAREUTJSONObject:(RAREUTJSONObject *)value
                               withBoolean:(BOOL)includeUnits
                       withRAREUTCharArray:(RAREUTCharArray *)ca {
  NSString *s;
  RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(value)) optJSONObjectWithNSString:@"valueQuantity"];
  if (o != nil) {
    s = [o getStringWithNSString:@"value"];
    NSString *comparator = [o optStringWithNSString:@"comparator"];
    NSString *unit = [o optStringWithNSString:@"unit" withNSString:nil];
    if ((comparator != nil) || ((unit != nil) && includeUnits)) {
      [((RAREUTCharArray *) nil_chk(ca)) clear];
      if (comparator != nil) {
        (void) [ca appendWithNSString:comparator];
      }
      (void) [ca appendWithNSString:s];
      if (includeUnits && (unit != nil)) {
        (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([ca appendWithNSString:@" ("])) appendWithNSString:unit])) appendWithNSString:@")"];
      }
      s = [ca description];
    }
    return s;
  }
  s = [value optStringWithNSString:@"valueString" withNSString:nil];
  if (s != nil) {
    return s;
  }
  o = [value optJSONObjectWithNSString:@"valueCodeableConcept"];
  if (o != nil) {
    return [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:o];
  }
  o = [value optJSONObjectWithNSString:@"valueRange"];
  if (o != nil) {
    return [CCPBVFHIRFHIRUtils getRangeWithRAREUTJSONObject:o withBoolean:includeUnits withRAREUTCharArray:ca];
  }
  o = [value optJSONObjectWithNSString:@"valueRatio"];
  if (o != nil) {
    return [CCPBVFHIRFHIRUtils getRatioWithRAREUTJSONObject:o withRAREUTCharArray:ca];
  }
  s = [value optStringWithNSString:@"valueTime" withNSString:nil];
  if (s != nil) {
    return s;
  }
  s = [value optStringWithNSString:@"valueDateTime" withNSString:nil];
  if (s != nil) {
    return [CCPBVFHIRFHIRServer convertDateTimeWithNSString:s];
  }
  s = [CCPBVFHIRFHIRUtils getPeriodWithRAREUTJSONObject:[value optJSONObjectWithNSString:@"valuePeriod"] withRAREUTCharArray:ca];
  if (s != nil) {
    return s;
  }
  o = [value optJSONObjectWithNSString:@"valueAttachment"];
  if (o != nil) {
    s = [o optStringWithNSString:@"title" withNSString:nil];
    if (s == nil) {
      s = [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) getResourceAsStringWithNSString:@"bv.text.see_report"];
    }
    return s;
  }
  o = [value optJSONObjectWithNSString:@"valueSampledData"];
  if (o != nil) {
    return [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) getResourceAsStringWithNSString:@"bv.text.see_report"];
  }
  return s;
}

+ (BOOL)isHTMLFormatRequestedWithCCPBVActionPath:(CCPBVActionPath *)path {
  return [@"html" isEqual:[CCPBVaRemoteService getExtensionWithCCPBVActionPath:path]];
}

+ (BOOL)isJSONFormatRequestedWithCCPBVActionPath:(CCPBVActionPath *)path {
  return [@"json" isEqual:[CCPBVaRemoteService getExtensionWithCCPBVActionPath:path]];
}

+ (void)populateAddressWithRAREUTJSONObject:(RAREUTJSONObject *)src
                       withRAREUTJSONObject:(RAREUTJSONObject *)dst {
  if (src == nil) {
    return;
  }
  RAREUTJSONArray *a = [((RAREUTJSONObject *) nil_chk(src)) optJSONArrayWithNSString:@"line"];
  if (a != nil) {
    (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"street" withId:[RAREUTHelper toStringWithJavaUtilList:a withNSString:@"\\n"]];
  }
  NSString *s = [src optStringWithNSString:@"city" withNSString:nil];
  if (s != nil) {
    (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"city" withId:s];
  }
  s = [src optStringWithNSString:@"state" withNSString:nil];
  if (s != nil) {
    (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"state_or_province" withId:s];
  }
  s = [src optStringWithNSString:@"postalCode" withNSString:nil];
  if (s != nil) {
    (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"zip_code" withId:s];
  }
  s = [src optStringWithNSString:@"country" withNSString:nil];
  if (s != nil) {
    (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"country" withId:s];
  }
}

+ (void)populateTelcomWithRAREUTJSONArray:(RAREUTJSONArray *)src
                     withRAREUTJSONObject:(RAREUTJSONObject *)dst {
  if (src == nil) {
    return;
  }
  int len = [((RAREUTJSONArray *) nil_chk(src)) length];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *o = [src getJSONObjectWithInt:i];
    NSString *sys = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"system"];
    NSString *value = [o optStringWithNSString:@"value"];
    NSString *use = [o optStringWithNSString:@"use"];
    if ([((NSString *) nil_chk(sys)) isEqual:@"phone"]) {
      if ([((NSString *) nil_chk(use)) isEqual:@"work"]) {
        (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"office_number" withId:value];
      }
      else if ([use isEqual:@"home"]) {
        (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"home_number" withId:value];
      }
      else if ([use isEqual:@"mobile"]) {
        (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"mobile_number" withId:value];
      }
    }
    else if ([sys isEqual:@"email"]) {
      if ([((NSString *) nil_chk(use)) isEqual:@"work"]) {
        (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"email" withId:value];
      }
      else if ([use isEqual:@"home"]) {
        (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"home_email" withId:value];
      }
      else if ([use isEqual:@"mobile"]) {
        (void) [((RAREUTJSONObject *) nil_chk(dst)) putWithNSString:@"mobile_email" withId:value];
      }
    }
  }
  if (![((RAREUTJSONObject *) nil_chk(dst)) containsKeyWithId:@"email"]) {
    NSString *s = [dst optStringWithNSString:@"mobile_email" withNSString:nil];
    if (s != nil) {
      (void) [dst putWithNSString:@"email" withId:s];
      (void) [dst removeWithNSString:@"mobile_email"];
    }
    else {
      s = [dst optStringWithNSString:@"home_email" withNSString:nil];
      if (s != nil) {
        (void) [dst putWithNSString:@"email" withId:s];
        (void) [dst removeWithNSString:@"home_email"];
      }
    }
  }
}

+ (void)writeActorListWithJavaIoWriter:(JavaIoWriter *)w
                   withRAREUTJSONArray:(RAREUTJSONArray *)list
                   withRAREUTCharArray:(RAREUTCharArray *)ca {
  [CCPBVFHIRFHIRUtils writeListStartWithJavaIoWriter:w];
  int len = [((RAREUTJSONArray *) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    [CCPBVFHIRFHIRUtils writeListValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getActorWithRAREUTJSONObject:[list getJSONObjectWithInt:i] withRAREUTCharArray:ca]];
  }
  [CCPBVFHIRFHIRUtils writeListFinishWithJavaIoWriter:w];
}

+ (void)writeCodableConceptWithRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                            withRAREUTJSONArray:(RAREUTJSONArray *)a
                            withJavaUtilHashMap:(JavaUtilHashMap *)map {
  int len = [((RAREUTJSONArray *) nil_chk(a)) length];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *idf = [a getJSONObjectWithInt:i];
    RAREUTJSONObject *type = [((RAREUTJSONObject *) nil_chk(idf)) optJSONObjectWithNSString:@"type"];
    RAREUTJSONArray *aa = (type == nil) ? nil : [type optJSONArrayWithNSString:@"coding"];
    int alen = (aa == nil) ? 0 : [aa length];
    for (int ai = 0; ai < alen; ai++) {
      RAREUTJSONObject *coding = [aa getJSONObjectWithInt:ai];
      NSString *code = [((RAREUTJSONObject *) nil_chk(coding)) getStringWithNSString:@"code"];
      code = [((JavaUtilHashMap *) nil_chk(map)) getWithId:code];
      if (code != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk(jw)) keyWithNSString:code])) valueWithId:[idf getStringWithNSString:@"value"]];
        break;
      }
    }
    NSString *code = [idf optStringWithNSString:@"system" withNSString:nil];
    if (code != nil) {
      code = [((JavaUtilHashMap *) nil_chk(map)) getWithId:code];
      if (code != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk(jw)) keyWithNSString:code])) valueWithId:[idf getStringWithNSString:@"value"]];
      }
    }
  }
}

+ (void)writeCodeableConceptListWithJavaIoWriter:(JavaIoWriter *)w
                             withRAREUTJSONArray:(RAREUTJSONArray *)list {
  [CCPBVFHIRFHIRUtils writeListStartWithJavaIoWriter:w];
  int len = [((RAREUTJSONArray *) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    [CCPBVFHIRFHIRUtils writeListValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[list getJSONObjectWithInt:i]]];
  }
  [CCPBVFHIRFHIRUtils writeListFinishWithJavaIoWriter:w];
}

+ (void)writeDocumentTitleWithJavaIoWriter:(JavaIoWriter *)w
                              withNSString:(NSString *)title {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<h1>"])) appendWithJavaLangCharSequence:title])) appendWithJavaLangCharSequence:@"</h1>\n"];
}

+ (void)writeEventWithJavaIoWriter:(JavaIoWriter *)w
              withRAREUTJSONObject:(RAREUTJSONObject *)event {
  NSString *status = [((RAREUTJSONObject *) nil_chk(event)) optStringWithNSString:@"status"];
  NSString *actor = nil;
  NSString *time = [event optStringWithNSString:@"dateTime" withNSString:nil];
  if (time != nil) {
    time = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:time];
  }
  RAREUTJSONObject *o = [event optJSONObjectWithNSString:@"actor"];
  if (o != nil) {
    actor = [o optStringWithNSString:@"display"];
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<div class='event_div'>\n"];
  [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
  [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.status"] withNSString:status];
  if (time != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.date"] withNSString:time];
  }
  if (actor != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.actor"] withNSString:actor];
  }
  [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
  (void) [w appendWithJavaLangCharSequence:@"</div>\n"];
}

+ (void)writeEventsWithJavaIoWriter:(JavaIoWriter *)w
                withRAREUTJSONArray:(RAREUTJSONArray *)events {
  int len = (events == nil) ? 0 : [events length];
  if (len > 0) {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<div class='events_div'>\n"];
    (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([w appendWithJavaLangCharSequence:@"<h3>"])) appendWithJavaLangCharSequence:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.events_annotations"]])) appendWithJavaLangCharSequence:@"</h3>\n"];
    for (int i = 0; i < len; i++) {
      [CCPBVFHIRFHIRUtils writeEventWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(events)) getJSONObjectWithInt:i]];
    }
    (void) [w appendWithJavaLangCharSequence:@"</div>\n"];
  }
}

+ (void)writeHTMLDocumentFinishWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"\n</body></html>"];
}

+ (void)writeHTMLDocumentStartWithJavaIoWriter:(JavaIoWriter *)w
                                  withNSString:(NSString *)title {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<html><head>\n"];
  if (title != nil) {
    (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([w appendWithJavaLangCharSequence:@"<title>"])) appendWithJavaLangCharSequence:title])) appendWithJavaLangCharSequence:@"</title>\n"];
  }
  NSString *ss = [CCPBVFHIRFHIRServer getStyleSheet];
  if (ss != nil) {
    [w writeWithNSString:@"<style type=\"text/css\">\n"];
    [w writeWithNSString:ss];
    [w writeWithNSString:@"\n</style>\n"];
  }
  (void) [w appendWithJavaLangCharSequence:@"</head><body>\n"];
}

+ (void)writeMultipartSubDocumentStartWithJavaIoWriter:(JavaIoWriter *)w
                                          withNSString:(NSString *)title {
  [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[CCPBVFHIRDocuments BOUNDARY_START]];
  [w writeWithNSString:@"Content-Type: text/html\x0d\n\x0d\n"];
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:title];
}

+ (void)writeMultipartDocumentFinishWithJavaIoWriter:(JavaIoWriter *)w {
  [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[CCPBVFHIRDocuments BOUNDARY_END]];
}

+ (void)writeMultipartSubDocumentFinishWithJavaIoWriter:(JavaIoWriter *)w {
  [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
}

+ (void)writeMultipartDocumentIndexWithNSString:(NSString *)type
                                   withNSString:(NSString *)date
                                   withNSString:(NSString *)title
                                   withNSString:(NSString *)url
                               withJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:type])) appendWithChar:'^'])) appendWithJavaLangCharSequence:title];
  (void) [w appendWithJavaLangCharSequence:@"^"];
  if (date != nil) {
    (void) [w appendWithJavaLangCharSequence:date];
  }
  (void) [((JavaIoWriter *) nil_chk([w appendWithJavaLangCharSequence:@"^"])) appendWithJavaLangCharSequence:(url == nil) ? @"true" : @"false"];
  (void) [w appendWithJavaLangCharSequence:@"^"];
  if (url != nil) {
    (void) [w appendWithJavaLangCharSequence:url];
  }
  (void) [w appendWithJavaLangCharSequence:@"\x0d\n"];
}

+ (void)writeHTMLTagWithJavaIoWriter:(JavaIoWriter *)w
                        withNSString:(NSString *)tag
                        withNSString:(NSString *)text
                         withBoolean:(BOOL)lf {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<"])) appendWithJavaLangCharSequence:tag])) appendWithJavaLangCharSequence:@">"];
  (void) [w appendWithJavaLangCharSequence:text];
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([w appendWithJavaLangCharSequence:@"</"])) appendWithJavaLangCharSequence:tag])) appendWithJavaLangCharSequence:@">"];
  if (lf) {
    (void) [w appendWithJavaLangCharSequence:@"\n"];
  }
}

+ (void)writeListFinishWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"</ul>\n"];
}

+ (void)writeListStartWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<ul class='value ul>\n"];
}

+ (void)writeListValueWithJavaIoWriter:(JavaIoWriter *)w
                          withNSString:(NSString *)value {
  value = [RAREFunctions escapeHTMLWithNSString:value withBoolean:YES withBoolean:NO];
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<li>"])) appendWithJavaLangCharSequence:value])) appendWithJavaLangCharSequence:@"<li>\n"];
}

+ (void)writeNameWithId:(id)writer
    withRAREUTJSONArray:(RAREUTJSONArray *)a {
  RAREUTJSONWriter *jw = nil;
  JavaIoWriter *w = nil;
  if ([writer isKindOfClass:[RAREUTJSONWriter class]]) {
    jw = (RAREUTJSONWriter *) check_class_cast(writer, [RAREUTJSONWriter class]);
  }
  else {
    w = (JavaIoWriter *) check_class_cast(writer, [JavaIoWriter class]);
  }
  RAREUTJSONObject *name = nil;
  int len = [((RAREUTJSONArray *) nil_chk(a)) length];
  if (len == 1) {
    name = [a getJSONObjectWithInt:0];
  }
  else {
    for (int i = 0; i < len; i++) {
      RAREUTJSONObject *o = [a getJSONObjectWithInt:i];
      if ([@"usual" isEqual:[((RAREUTJSONObject *) nil_chk(o)) optWithNSString:@"use"]]) {
        name = o;
        break;
      }
      if ([@"official" isEqual:[o optWithNSString:@"use"]]) {
        name = o;
      }
    }
  }
  if (name == nil) {
    name = [a getJSONObjectWithInt:0];
  }
  NSString *s;
  if (jw != nil) {
    (void) [jw keyWithNSString:@"name"];
  }
  s = [((RAREUTJSONObject *) nil_chk(name)) optStringWithNSString:@"text" withNSString:nil];
  if (s != nil) {
    if (jw != nil) {
      (void) [jw valueWithId:s];
    }
    else {
      [((JavaIoWriter *) nil_chk(w)) writeWithNSString:s];
    }
    return;
  }
  a = [name optJSONArrayWithNSString:@"family"];
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  if (a != nil) {
    (void) [RAREUTHelper toStringWithJavaLangStringBuilder:sb withJavaUtilList:[a getObjectList] withNSString:@" "];
    (void) [sb appendWithNSString:@", "];
  }
  a = [name optJSONArrayWithNSString:@"given"];
  if (a != nil) {
    (void) [RAREUTHelper toStringWithJavaLangStringBuilder:sb withJavaUtilList:[a getObjectList] withNSString:@" "];
  }
  if (jw != nil) {
    (void) [jw valueWithId:[sb description]];
  }
  else {
    [((JavaIoWriter *) nil_chk(w)) writeWithNSString:[sb description]];
  }
}

+ (void)writeNoteWithJavaIoWriter:(JavaIoWriter *)w
             withRAREUTJSONObject:(RAREUTJSONObject *)note {
  NSString *author = nil;
  NSString *time = [((RAREUTJSONObject *) nil_chk(note)) optStringWithNSString:@"time" withNSString:nil];
  if (time != nil) {
    time = [RAREFunctions convertDateTimeWithId:time];
  }
  RAREUTJSONObject *o = [note optJSONObjectWithNSString:@"authorReference"];
  if (o != nil) {
    author = [o optStringWithNSString:@"display"];
  }
  else {
    author = [note optStringWithNSString:@"authorString" withNSString:nil];
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<div class='note_div'>\n"];
  if ((author != nil) || (time != nil)) {
    [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
    if (author != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.author"] withNSString:author];
    }
    if (time != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.date"] withNSString:time];
    }
    [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
    [w writeWithNSString:@"<hr/>\n"];
  }
  [w writeWithNSString:[CCPBVFHIRFHIRUtils htmlWithNSString:[note optStringWithNSString:@"text"]]];
  (void) [w appendWithJavaLangCharSequence:@"</div>\n"];
}

+ (void)writeNotesWithJavaIoWriter:(JavaIoWriter *)w
               withRAREUTJSONArray:(RAREUTJSONArray *)notes {
  int len = (notes == nil) ? 0 : [notes length];
  if (len > 0) {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<div class='notes_div'>\n"];
    (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([w appendWithJavaLangCharSequence:@"<h3>"])) appendWithJavaLangCharSequence:[CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:@"bv.text.notes_annotations"]])) appendWithJavaLangCharSequence:@"</h3>\n"];
    for (int i = 0; i < len; i++) {
      [CCPBVFHIRFHIRUtils writeNoteWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(notes)) getJSONObjectWithInt:i]];
    }
    (void) [w appendWithJavaLangCharSequence:@"</div>\n"];
  }
}

+ (BOOL)writeTextWithJavaIoWriter:(JavaIoWriter *)w
             withRAREUTJSONObject:(RAREUTJSONObject *)text
                      withBoolean:(BOOL)writeHeader
                      withBoolean:(BOOL)writeGenerated {
  NSString *status = [((RAREUTJSONObject *) nil_chk(text)) optStringWithNSString:@"status"];
  if ([((NSString *) nil_chk(status)) isEqual:@"empty"]) {
    return NO;
  }
  NSString *div = [text optStringWithNSString:@"div" withNSString:@""];
  BOOL generated = [status isEqual:@"generated"];
  do {
    if (!writeGenerated && generated) {
      return NO;
    }
    if ([((NSString *) nil_chk(div)) sequenceLength] == 0) {
      return NO;
    }
    if (writeHeader) {
      status = [CCPBVFHIRFHIRUtils getResourceAsStringWithNSString:generated ? @"bv.text.generated_text" : @"bv.text.additional_text"];
      (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<h3>"])) appendWithJavaLangCharSequence:status])) appendWithJavaLangCharSequence:@"</h3>\n"];
    }
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<div class='text_div'>\n"];
    (void) [w appendWithJavaLangCharSequence:div];
    (void) [w appendWithJavaLangCharSequence:@"</div>\n"];
  }
  while (NO);
  return YES;
}

+ (void)writeQuotedStringIfNecessaryWithJavaIoWriter:(JavaIoWriter *)w
                                        withNSString:(NSString *)value
                                 withRAREUTCharArray:(RAREUTCharArray *)ca {
  IOSCharArray *a;
  int len = [((NSString *) nil_chk(value)) sequenceLength];
  if (ca == nil) {
    a = [value toCharArray];
  }
  else {
    (void) [ca setWithNSString:value];
    a = ca->A_;
  }
  BOOL quoted = NO;
  int lp = 0;
  int i = 0;
  if (len > 0 && [value charAtWithInt:0] == '{') {
    if ([value hasPrefix:@"{fgColor:"]) {
      int n = [RAREUTCharScanner indexOfWithCharArray:a withInt:0 withInt:len withChar:'}' withBoolean:YES withBoolean:YES];
      if (n != -1) {
        [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:0 withInt:n + 1];
        i = n + 1;
        lp = i;
      }
    }
  }
  while (i < len) {
    unichar c = IOSCharArray_Get(nil_chk(a), i++);
    switch (c) {
      case '|':
      case '^':
      if (!quoted) {
        quoted = YES;
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
      }
      break;
      case 0x0009:
      if (!quoted) {
        quoted = YES;
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:lp withInt:i - lp - 1];
      [w writeWithNSString:@"\\t"];
      i++;
      lp = i;
      break;
      case '[':
      case ']':
      if (!quoted) {
        quoted = YES;
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:lp withInt:i - lp - 1];
      [w writeWithInt:'\\'];
      [w writeWithInt:c];
      lp = i;
      break;
      case '"':
      if (!quoted) {
        quoted = YES;
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:lp withInt:i - lp - 1];
      [w writeWithNSString:@"\\\""];
      lp = i;
      break;
      case 0x000a:
      if (!quoted) {
        quoted = YES;
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:lp withInt:i - lp - 1];
      [w writeWithNSString:@"\\n"];
      lp = i;
      break;
      case 0x000d:
      if (!quoted) {
        quoted = YES;
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:lp withInt:i - lp - 1];
      lp = i;
      break;
    }
  }
  if (lp < len) {
    [((JavaIoWriter *) nil_chk(w)) writeWithCharArray:a withInt:lp withInt:len - lp];
  }
  if (quoted) {
    [((JavaIoWriter *) nil_chk(w)) writeWithInt:'"'];
  }
}

+ (void)writeReferenceListWithJavaIoWriter:(JavaIoWriter *)w
                       withRAREUTJSONArray:(RAREUTJSONArray *)list {
  [CCPBVFHIRFHIRUtils writeListStartWithJavaIoWriter:w];
  int len = [((RAREUTJSONArray *) nil_chk(list)) size];
  for (int i = 0; i < len; i++) {
    [CCPBVFHIRFHIRUtils writeListValueWithJavaIoWriter:w withNSString:[CCPBVFHIRFHIRUtils getReferenceTextWithRAREUTJSONObject:[list getJSONObjectWithInt:i]]];
  }
  [CCPBVFHIRFHIRUtils writeListFinishWithJavaIoWriter:w];
}

+ (void)writeSectionEndWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"</div>\n"];
}

+ (void)writeSectionStartWithJavaIoWriter:(JavaIoWriter *)w
                             withNSString:(NSString *)title {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<h2 class='sub'>"])) appendWithJavaLangCharSequence:title])) appendWithJavaLangCharSequence:@"</h2>\n"];
  (void) [w appendWithJavaLangCharSequence:@"<div class='sub2'>\n"];
}

+ (void)writeSubDivEndWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"</div>"];
}

+ (void)writeSubDivStartWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<div class='sub_div'>"];
}

+ (void)writeSubSectionStartWithJavaIoWriter:(JavaIoWriter *)w
                                withNSString:(NSString *)title {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<h3 class='sub'>"])) appendWithJavaLangCharSequence:title])) appendWithJavaLangCharSequence:@"</h3>\n"];
  (void) [w appendWithJavaLangCharSequence:@"<div class='sub3'>\n"];
}

+ (void)writeSubSubSectionStartWithJavaIoWriter:(JavaIoWriter *)w
                                   withNSString:(NSString *)title {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<h4 class='sub'>"])) appendWithJavaLangCharSequence:title])) appendWithJavaLangCharSequence:@"</h4>\n"];
  (void) [w appendWithJavaLangCharSequence:@"<div class='sub4'>\n"];
}

+ (void)writeTableFinishWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"</tbody>\n"];
  (void) [w appendWithJavaLangCharSequence:@"</table>\n"];
}

+ (void)writeTableSectionFinishWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"</td></tr>\n"];
}

+ (void)writeTableSectionStartWithJavaIoWriter:(JavaIoWriter *)w
                                  withNSString:(NSString *)title {
  [CCPBVFHIRFHIRUtils writeTableValueStartWithJavaIoWriter:w withNSString:title];
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<td class='section'>"];
}

+ (void)writeTableStartWithJavaIoWriter:(JavaIoWriter *)w {
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<table class='value_table'>\n"];
  (void) [w appendWithJavaLangCharSequence:@"<tbody>\n"];
}

+ (void)writeTableValueWithJavaIoWriter:(JavaIoWriter *)w
                           withNSString:(NSString *)name
                           withNSString:(NSString *)value {
  if (value != [CCPBVFHIRaFHIRemoteService MISSING_INVALID]) {
    value = [RAREFunctions escapeHTMLWithNSString:value withBoolean:YES withBoolean:NO];
  }
  if (name != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueStartWithJavaIoWriter:w withNSString:name];
  }
  else {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<tr><td></td>"];
  }
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<td>"])) appendWithJavaLangCharSequence:value])) appendWithJavaLangCharSequence:@"</td></tr>\n"];
}

+ (void)writeTableValueStartWithJavaIoWriter:(JavaIoWriter *)w
                                withNSString:(NSString *)name {
  (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<tr><td class=\"value_name\">"])) appendWithJavaLangCharSequence:name])) appendWithJavaLangCharSequence:@":</td>"];
}

+ (void)writeTableValueActorWithJavaIoWriter:(JavaIoWriter *)w
                                withNSString:(NSString *)name
                         withRAREUTJSONArray:(RAREUTJSONArray *)list
                         withRAREUTCharArray:(RAREUTCharArray *)ca {
  int len = (list == nil) ? 0 : [list length];
  if (len == -0) {
    return;
  }
  if (name != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueStartWithJavaIoWriter:w withNSString:name];
  }
  else {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<tr><td></td>"];
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<td>"];
  if (len == 1) {
    [w writeWithNSString:[CCPBVFHIRFHIRUtils htmlWithNSString:[CCPBVFHIRFHIRUtils getActorWithRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(list)) getJSONObjectWithInt:0] withRAREUTCharArray:ca]]];
  }
  else {
    [CCPBVFHIRFHIRUtils writeActorListWithJavaIoWriter:w withRAREUTJSONArray:list withRAREUTCharArray:ca];
  }
  (void) [w appendWithJavaLangCharSequence:@"</td></tr>\n"];
}

+ (NSString *)htmlWithNSString:(NSString *)value {
  return [RAREFunctions escapeHTMLWithNSString:value withBoolean:YES withBoolean:NO];
}

+ (void)writeTableValueCodeableConceptWithJavaIoWriter:(JavaIoWriter *)w
                                          withNSString:(NSString *)name
                                   withRAREUTJSONArray:(RAREUTJSONArray *)list {
  int len = (list == nil) ? 0 : [list length];
  if (len == -0) {
    return;
  }
  if (name != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueStartWithJavaIoWriter:w withNSString:name];
  }
  else {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<tr><td></td>"];
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<td>"];
  if (len == 1) {
    [w writeWithNSString:[CCPBVFHIRFHIRUtils htmlWithNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(list)) getJSONObjectWithInt:0]]]];
  }
  else {
    [CCPBVFHIRFHIRUtils writeCodeableConceptListWithJavaIoWriter:w withRAREUTJSONArray:list];
  }
  (void) [w appendWithJavaLangCharSequence:@"</td></tr>\n"];
}

+ (void)writeTableValueReferenceWithJavaIoWriter:(JavaIoWriter *)w
                                    withNSString:(NSString *)name
                             withRAREUTJSONArray:(RAREUTJSONArray *)list {
  int len = (list == nil) ? 0 : [list length];
  if (len == -0) {
    return;
  }
  if (name != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueStartWithJavaIoWriter:w withNSString:name];
  }
  else {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<tr><td></td>"];
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<td>"];
  if (len == 1) {
    [w writeWithNSString:[CCPBVFHIRFHIRUtils htmlWithNSString:[CCPBVFHIRFHIRUtils getReferenceTextWithRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(list)) getJSONObjectWithInt:0]]]];
  }
  else {
    [CCPBVFHIRFHIRUtils writeReferenceListWithJavaIoWriter:w withRAREUTJSONArray:list];
  }
  (void) [w appendWithJavaLangCharSequence:@"</td></tr>\n"];
}

+ (NSString *)getResourceAsStringWithNSString:(NSString *)name {
  return [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) getResourceAsStringWithNSString:name];
}

+ (void)initialize {
  if (self == [CCPBVFHIRFHIRUtils class]) {
    CCPBVFHIRFHIRUtils_interpretationColors_ = [[JavaUtilHashMap alloc] init];
    {
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@">" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"<" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"HH" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"HHI" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"H" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"L" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"LL" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"LLO" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"A" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"AA" withId:@"abnormal"];
      (void) [CCPBVFHIRFHIRUtils_interpretationColors_ putWithId:@"N" withId:@""];
    }
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL },
    { "cleanAndEncodeStringWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "concatBestMedicalTextWithRAREUTJSONArray:withNSString:withRAREUTCharArray:", NULL, "LRAREUTCharArray", 0x9, NULL },
    { "concatStringWithRAREUTJSONArray:withNSString:withRAREUTCharArray:", NULL, "LRAREUTCharArray", 0x9, NULL },
    { "concatStringWithRAREUTJSONArray:withNSString:withRAREUTCharArray:withNSString:", NULL, "LRAREUTCharArray", 0x9, NULL },
    { "convertIfFractionWithNSString:withFloat:", NULL, "LNSString", 0x9, NULL },
    { "createWriterWithCCPBVActionPath:withCCPBVContentWriter:withCCPBVHttpHeaders:withBoolean:", NULL, "LNSObject", 0x9, NULL },
    { "escapeContolSequencesIfNecessaryWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "getActorWithRAREUTJSONObject:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getBestMedicalCodeWithRAREUTJSONArray:", NULL, "LNSString", 0x9, NULL },
    { "getBestMedicalCodeWithRAREUTJSONObject:", NULL, "LNSString", 0x9, NULL },
    { "getBestMedicalTextWithRAREUTJSONArray:", NULL, "LNSString", 0x9, NULL },
    { "getBestMedicalTextWithRAREUTJSONObject:", NULL, "LNSString", 0x9, NULL },
    { "getCodableConceptWithRAREUTJSONArray:withNSString:withJavaUtilHashMap:", NULL, "LNSString", 0x9, NULL },
    { "getCodeableConceptOrReferenceTextWithRAREUTJSONObject:withNSString:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getHL7FHIRCodeWithRAREUTJSONArray:", NULL, "LNSString", 0x9, NULL },
    { "getInterpretationColorWithNSString:", NULL, "LNSString", 0x9, NULL },
    { "getMedicalCodeWithRAREUTJSONArray:", NULL, "LCCPBVFHIRFHIRUtils_MedicalCode", 0x9, NULL },
    { "getMedicalCodeWithRAREUTJSONObject:", NULL, "LCCPBVFHIRFHIRUtils_MedicalCode", 0x9, NULL },
    { "getQuantityWithRAREUTJSONObject:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getRangeWithRAREUTJSONArray:withBoolean:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getRangeWithRAREUTJSONObject:withBoolean:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getRangeOrRatioWithRAREUTJSONObject:withNSString:withNSString:withNSString:withBoolean:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getRatioWithRAREUTJSONObject:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getPeriodWithRAREUTJSONObject:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getReferenceTextWithRAREUTJSONObject:", NULL, "LNSString", 0x9, NULL },
    { "getTimingWithRAREUTJSONObject:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getTimingWithRAREUTJSONObject:withNSString:withNSString:withBoolean:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "getDataAsStringWithNSString:withNSString:", NULL, "LNSString", 0x9, "JavaIoIOException" },
    { "getDataAsBase64StringWithNSString:withNSString:", NULL, "LNSString", 0x9, "JavaIoIOException" },
    { "writeAttachmentWithRAREUTJSONObject:withJavaIoWriter:withBoolean:", NULL, "V", 0x9, "JavaIoIOException" },
    { "getValueWithRAREUTJSONObject:withBoolean:withRAREUTCharArray:", NULL, "LNSString", 0x9, NULL },
    { "isHTMLFormatRequestedWithCCPBVActionPath:", NULL, "Z", 0x9, NULL },
    { "isJSONFormatRequestedWithCCPBVActionPath:", NULL, "Z", 0x9, NULL },
    { "writeActorListWithJavaIoWriter:withRAREUTJSONArray:withRAREUTCharArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeCodableConceptWithRAREUTJSONWriter:withRAREUTJSONArray:withJavaUtilHashMap:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeCodeableConceptListWithJavaIoWriter:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeDocumentTitleWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeEventWithJavaIoWriter:withRAREUTJSONObject:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeEventsWithJavaIoWriter:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeHTMLDocumentFinishWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeHTMLDocumentStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeMultipartSubDocumentStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeMultipartDocumentFinishWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeMultipartSubDocumentFinishWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeMultipartDocumentIndexWithNSString:withNSString:withNSString:withNSString:withJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeHTMLTagWithJavaIoWriter:withNSString:withNSString:withBoolean:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeListFinishWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeListStartWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeListValueWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeNameWithId:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeNoteWithJavaIoWriter:withRAREUTJSONObject:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeNotesWithJavaIoWriter:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTextWithJavaIoWriter:withRAREUTJSONObject:withBoolean:withBoolean:", NULL, "Z", 0x9, "JavaIoIOException" },
    { "writeQuotedStringIfNecessaryWithJavaIoWriter:withNSString:withRAREUTCharArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeReferenceListWithJavaIoWriter:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeSectionEndWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeSectionStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeSubDivEndWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeSubDivStartWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeSubSectionStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeSubSubSectionStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableFinishWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableSectionFinishWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableSectionStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableStartWithJavaIoWriter:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableValueWithJavaIoWriter:withNSString:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableValueStartWithJavaIoWriter:withNSString:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableValueActorWithJavaIoWriter:withNSString:withRAREUTJSONArray:withRAREUTCharArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "htmlWithNSString:", NULL, "LNSString", 0xa, NULL },
    { "writeTableValueCodeableConceptWithJavaIoWriter:withNSString:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "writeTableValueReferenceWithJavaIoWriter:withNSString:withRAREUTJSONArray:", NULL, "V", 0x9, "JavaIoIOException" },
    { "getResourceAsStringWithNSString:", NULL, "LNSString", 0xa, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "interpretationColors_", NULL, 0x19, "LJavaUtilHashMap" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRUtils = { "FHIRUtils", "com.sparseware.bellavista.external.fhir", NULL, 0x1, 73, methods, 1, fields, 0, NULL};
  return &_CCPBVFHIRFHIRUtils;
}

@end
@implementation CCPBVFHIRFHIRUtils_MedicalCode

- (id)initWithNSString:(NSString *)loincCode
          withNSString:(NSString *)snomedCode {
  if (self = [super init]) {
    self->loincCode_ = loincCode;
    self->snomedCode_ = snomedCode;
  }
  return self;
}

- (id)initWithNSString:(NSString *)loincCode
          withNSString:(NSString *)snomedCode
          withNSString:(NSString *)loincDisplay
          withNSString:(NSString *)snomedDisplay {
  if (self = [super init]) {
    self->loincCode_ = loincCode;
    self->snomedCode_ = snomedCode;
    self->loincDisplay_ = loincDisplay;
    self->snomedDisplay_ = snomedDisplay;
  }
  return self;
}

- (id)initWithNSString:(NSString *)hl7Code
          withNSString:(NSString *)snomedCode
          withNSString:(NSString *)loincCode
          withNSString:(NSString *)hl7Display
          withNSString:(NSString *)loincDisplay
          withNSString:(NSString *)snomedDisplay {
  if (self = [super init]) {
    self->hl7Code_ = hl7Code;
    self->snomedCode_ = snomedCode;
    self->loincCode_ = loincCode;
    self->hl7Display_ = hl7Display;
    self->loincDisplay_ = loincDisplay;
    self->snomedDisplay_ = snomedDisplay;
  }
  return self;
}

- (NSString *)getBestCode {
  if (hl7Code_ != nil) {
    return hl7Code_;
  }
  if (loincCode_ != nil) {
    return loincCode_;
  }
  return snomedCode_;
}

- (NSString *)getBestText {
  if (text_ != nil) {
    return text_;
  }
  if (hl7Display_ != nil) {
    return hl7Display_;
  }
  if (loincDisplay_ != nil) {
    return loincDisplay_;
  }
  if (snomedDisplay_ == nil) {
    return [self getBestCode];
  }
  return snomedDisplay_;
}

- (BOOL)isOneOfWithJavaUtilSet:(id<JavaUtilSet>)codes {
  if ((loincCode_ != nil) && [((id<JavaUtilSet>) nil_chk(codes)) containsWithId:loincCode_]) {
    return YES;
  }
  if ((snomedCode_ != nil) && [((id<JavaUtilSet>) nil_chk(codes)) containsWithId:snomedCode_]) {
    return YES;
  }
  return NO;
}

- (BOOL)isSNOMEDOnlyCode {
  return (loincCode_ == nil) && (hl7Code_ == nil);
}

- (void)resolveHL7DisplayWithJavaUtilHashMap:(JavaUtilHashMap *)codeMap {
  if ((hl7Display_ == nil) && (hl7Code_ != nil)) {
    hl7Display_ = [((JavaUtilHashMap *) nil_chk(codeMap)) getWithId:hl7Code_];
  }
}

- (void)copyAllFieldsTo:(CCPBVFHIRFHIRUtils_MedicalCode *)other {
  [super copyAllFieldsTo:other];
  other->hl7Code_ = hl7Code_;
  other->hl7Display_ = hl7Display_;
  other->loincCode_ = loincCode_;
  other->loincDisplay_ = loincDisplay_;
  other->snomedCode_ = snomedCode_;
  other->snomedDisplay_ = snomedDisplay_;
  other->text_ = text_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getBestCode", NULL, "LNSString", 0x1, NULL },
    { "getBestText", NULL, "LNSString", 0x1, NULL },
    { "isOneOfWithJavaUtilSet:", NULL, "Z", 0x1, NULL },
    { "isSNOMEDOnlyCode", NULL, "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "hl7Code_", NULL, 0x1, "LNSString" },
    { "snomedCode_", NULL, 0x1, "LNSString" },
    { "loincCode_", NULL, 0x1, "LNSString" },
    { "hl7Display_", NULL, 0x1, "LNSString" },
    { "loincDisplay_", NULL, 0x1, "LNSString" },
    { "snomedDisplay_", NULL, 0x1, "LNSString" },
    { "text_", NULL, 0x1, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIRFHIRUtils_MedicalCode = { "MedicalCode", "com.sparseware.bellavista.external.fhir", "FHIRUtils", 0x9, 4, methods, 7, fields, 0, NULL};
  return &_CCPBVFHIRFHIRUtils_MedicalCode;
}

@end
