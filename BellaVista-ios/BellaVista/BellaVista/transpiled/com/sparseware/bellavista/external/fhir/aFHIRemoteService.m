//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/aFHIRemoteService.java
//
//  Created by decoteaud on 3/14/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONTokener.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/MessageException.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/fhir/FHIRJSONWatcher.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/FHIRUtils.h"
#include "com/sparseware/bellavista/external/fhir/LinkWaiter.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/NonFatalServiceException.h"
#include "com/sparseware/bellavista/service/iHttpConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/Exception.h"
#include "java/lang/Package.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"

@implementation CCPBVFHIRaFHIRemoteService

static JavaUtilHashSet * CCPBVFHIRaFHIRemoteService_validExtensions_;
static NSString * CCPBVFHIRaFHIRemoteService_MISSING_INVALID_ = @"{fgColor:badData}MISSING/INVALID FHIR DATA";
static NSString * CCPBVFHIRaFHIRemoteService_MISSING_INVALID_HTML_ = @"{fgColor:badData}MISSING/INVALID FHIR DATA";
static NSString * CCPBVFHIRaFHIRemoteService_BAD_ID_ = @"_BAD_ID_";
static CCPBVFHIRFHIRUtils_MedicalCode * CCPBVFHIRaFHIRemoteService_missingInvalid_;

+ (JavaUtilHashSet *)validExtensions {
  return CCPBVFHIRaFHIRemoteService_validExtensions_;
}

+ (void)setValidExtensions:(JavaUtilHashSet *)validExtensions {
  CCPBVFHIRaFHIRemoteService_validExtensions_ = validExtensions;
}

+ (NSString *)MISSING_INVALID {
  return CCPBVFHIRaFHIRemoteService_MISSING_INVALID_;
}

+ (void)setMISSING_INVALID:(NSString *)MISSING_INVALID {
  CCPBVFHIRaFHIRemoteService_MISSING_INVALID_ = MISSING_INVALID;
}

+ (NSString *)MISSING_INVALID_HTML {
  return CCPBVFHIRaFHIRemoteService_MISSING_INVALID_HTML_;
}

+ (void)setMISSING_INVALID_HTML:(NSString *)MISSING_INVALID_HTML {
  CCPBVFHIRaFHIRemoteService_MISSING_INVALID_HTML_ = MISSING_INVALID_HTML;
}

+ (NSString *)BAD_ID {
  return CCPBVFHIRaFHIRemoteService_BAD_ID_;
}

+ (void)setBAD_ID:(NSString *)BAD_ID {
  CCPBVFHIRaFHIRemoteService_BAD_ID_ = BAD_ID;
}

+ (CCPBVFHIRFHIRUtils_MedicalCode *)missingInvalid {
  return CCPBVFHIRaFHIRemoteService_missingInvalid_;
}

+ (void)setMissingInvalid:(CCPBVFHIRFHIRUtils_MedicalCode *)missingInvalid {
  CCPBVFHIRaFHIRemoteService_missingInvalid_ = missingInvalid;
}

- (id)init {
  if (self = [super init]) {
    server_ = [CCPBVFHIRFHIRServer getInstance];
    nonConformant_ = [((CCPBVSettings_Server *) nil_chk([((CCPBVFHIRFHIRServer *) nil_chk(server_)) getServerConfig])) optBooleanWithNSString:@"non_compliant"];
    prefixSearchSupported_ = [((CCPBVSettings_Server *) nil_chk([server_ getServerConfig])) optBooleanWithNSString:@"supports_prefix_search" withBoolean:YES];
  }
  return self;
}

- (id)initWithNSString:(NSString *)resourceName {
  if (self = [super init]) {
    server_ = [CCPBVFHIRFHIRServer getInstance];
    RAREUTJSONObject *o = [((CCPBVSettings_Server *) nil_chk([((CCPBVFHIRFHIRServer *) nil_chk(server_)) getServerConfig])) optJSONObjectWithNSString:@"fhir"];
    nonConformant_ = (o == nil) ? NO : [o optBooleanWithNSString:@"non_conformant"];
    self->resourceName_ = resourceName;
    CCPBVFHIRFHIRServer_FHIRResource *r = [server_ getResourceWithNSString:resourceName];
    summarySupported_ = (r == nil) ? NO : r->summarySupported_;
    readSupported_ = (r == nil) ? NO : r->readSupported_;
    countSupported_ = (r == nil) ? NO : r->countSupported_;
  }
  return self;
}

- (NSString *)getPagingPath {
  if (pagingPath_ == nil) {
    NSString *pkg = [((JavaLangPackage *) nil_chk([[IOSClass classWithClass:[CCPBVFHIRaFHIRemoteService class]] getPackage])) getName];
    NSString *s = [((NSString *) nil_chk([[self getClass] getName])) substring:[((NSString *) nil_chk(pkg)) sequenceLength] + 1];
    ;
    s = [NSString stringWithFormat:@"%@/paging", [((NSString *) nil_chk([((NSString *) nil_chk(s)) lowercaseStringWithJRELocale:[JavaUtilLocale US]])) replace:'.' withChar:'/']];
    pagingPath_ = [NSString stringWithFormat:@"/hub/main/%@", s];
  }
  return pagingPath_;
}

- (NSString *)createPagingUrlWithNSString:(NSString *)href
                              withBoolean:(BOOL)json {
  RAREUTCharArray *ca = [[RAREUTCharArray alloc] initWithNSString:[self getPagingPath]];
  (void) [((RAREUTCharArray *) nil_chk([ca appendWithChar:'/'])) appendWithNSString:[self encodeLinkWithNSString:href]];
  if (json) {
    (void) [ca appendWithNSString:@".json"];
  }
  return [ca description];
}

- (id<JavaUtilMap>)createReferenceMapWithRAREUTJSONArray:(RAREUTJSONArray *)a {
  int len = (a == nil) ? 0 : [a length];
  JavaUtilLinkedHashMap *map = [[JavaUtilLinkedHashMap alloc] initWithInt:len];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *o = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
    NSString *id_ = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"id" withNSString:nil];
    if (id_ != nil) {
      (void) [map putWithId:id_ withId:o];
    }
  }
  return map;
}

- (void)sendTextAsHTMLWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                          withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
                                  withNSString:(NSString *)title
                                  withNSString:(NSString *)data {
  [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
  [headers mimeHtml];
  CCPBVContentWriter *w = [((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter];
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:title];
  [((CCPBVContentWriter *) nil_chk(w)) writeWithNSString:@"<pre>\n"];
  [w writeWithNSString:data];
  [w writeWithNSString:@"</pre>\n"];
  [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
}

- (void)sendImageAsHTMLWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                           withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
                                   withNSString:(NSString *)title
                                   withNSString:(NSString *)type
                                   withNSString:(NSString *)b64Data {
  [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
  [headers mimeHtml];
  CCPBVContentWriter *w = [((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter];
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:nil];
  [((CCPBVContentWriter *) nil_chk(w)) writeWithNSString:@"<div class=\"image_doc\">\n"];
  [w writeWithNSString:[NSString stringWithFormat:@"<img alt=\"%@\"", title]];
  [w writeWithNSString:[NSString stringWithFormat:@" src=\"data:%@;base64,", type]];
  [w writeWithNSString:b64Data];
  [w writeWithNSString:@"\"/>\n"];
  [w writeWithNSString:@"</div>\n"];
  [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
}

- (NSString *)getDateTimeWithRAREUTJSONObject:(RAREUTJSONObject *)o {
  NSString *date = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"effectiveDateTime" withNSString:nil];
  if (date == nil) {
    date = [o optStringWithNSString:@"issued"];
    if (date == nil) {
      RAREUTJSONObject *oo = [o optJSONObjectWithNSString:@"effectivePeriod"];
      if (oo != nil) {
        date = [oo optStringWithNSString:@"start" withNSString:nil];
        if (date == nil) {
          date = [oo optStringWithNSString:@"end" withNSString:nil];
        }
      }
    }
  }
  if ((date == nil) || ([date sequenceLength] == 0)) {
    date = [self getResourceAsStringWithNSString:@"bv.text.unspecified_date"];
  }
  return date;
}

- (NSString *)encodeLinkWithNSString:(NSString *)url {
  return [RAREFunctions base64NOLFWithNSString:url];
}

- (NSString *)decodeLinkWithNSString:(NSString *)link {
  int n = [((NSString *) nil_chk(link)) lastIndexOf:'.'];
  if (n != -1) {
    link = [link substring:0 endIndex:n];
  }
  return [RAREFunctions decodeBase64WithNSString:link];
}

- (CCPBVActionLinkEx *)createSearchLinkWithNSStringArray:(IOSObjectArray *)params {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:((CCPBVFHIRFHIRServer *) nil_chk(server_))->endPoint_];
  (void) [sb appendWithNSString:resourceName_];
  (void) [sb appendWithChar:'?'];
  int i = 0;
  if ((params != nil) && ((int) [params count] > 0)) {
    if ((params != nil) && ((int) [params count] > 0)) {
      int len = (int) [params count];
      while (i < len) {
        if (i > 0) {
          (void) [sb appendWithChar:'&'];
        }
        NSString *s = IOSObjectArray_Get(params, i++);
        if (!countSupported_ && [((NSString *) nil_chk(s)) isEqual:@"_count"]) {
          i++;
        }
        else {
          (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:s])) appendWithChar:'='])) appendWithNSString:IOSObjectArray_Get(params, i++)];
        }
      }
    }
  }
  if (summarySupported_) {
    if (i > 0) {
      (void) [sb appendWithChar:'&'];
    }
    (void) [sb appendWithNSString:@"_summary=true"];
    i++;
  }
  if (searchParams_ != nil && [searchParams_ sequenceLength] > 0) {
    if (i > 0) {
      (void) [sb appendWithChar:'&'];
    }
    (void) [sb appendWithNSString:searchParams_];
  }
  i = [sb sequenceLength];
  if ([sb charAtWithInt:i - 1] == '&') {
    [sb setLengthWithInt:i - 1];
  }
  CCPBVActionLinkEx *l = [server_ createLinkWithNSString:[sb description]];
  lastLink_ = l;
  return l;
}

- (CCPBVActionLinkEx *)createTextLinkWithNSString:(NSString *)id_ {
  id_ = [self removeExtensionWithNSString:id_];
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:((CCPBVFHIRFHIRServer *) nil_chk(server_))->endPoint_];
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:resourceName_])) appendWithChar:'/'])) appendWithNSString:id_];
  if (summarySupported_) {
    (void) [sb appendWithNSString:@"?_summary=text"];
  }
  CCPBVActionLinkEx *l = [server_ createLinkWithNSString:[sb description]];
  lastLink_ = l;
  if (!readSupported_) {
    @throw [[CCPBVNonFatalServiceException alloc] initWithNSString:@"This server does not support the READ interaction on the specified resource. Please notify the service administrator."];
  }
  return l;
}

- (CCPBVActionLinkEx *)createReadLinkWithNSString:(NSString *)id_ {
  return [self createReadLinkWithNSString:resourceName_ withNSString:id_];
}

- (NSString *)removeExtensionWithNSString:(NSString *)id_ {
  if (id_ != nil) {
    int n = [id_ lastIndexOf:'.'];
    if (n != -1) {
      NSString *s = [id_ substring:n + 1];
      if ([((JavaUtilHashSet *) nil_chk(CCPBVFHIRaFHIRemoteService_validExtensions_)) containsWithId:s]) {
        id_ = [id_ substring:0 endIndex:n];
      }
    }
  }
  if (nonConformant_ && [((NSString *) nil_chk(CCPBVFHIRaFHIRemoteService_BAD_ID_)) isEqual:id_]) {
    @throw [[CCPBVNonFatalServiceException alloc] initWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.text.bad_fhir_id"]];
  }
  return id_;
}

- (CCPBVActionLinkEx *)createReadLinkWithNSString:(NSString *)resourceName
                                     withNSString:(NSString *)id_ {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:((CCPBVFHIRFHIRServer *) nil_chk(server_))->endPoint_];
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:resourceName])) appendWithChar:'/'])) appendWithNSString:[self removeExtensionWithNSString:id_]];
  CCPBVActionLinkEx *l = [server_ createLinkWithNSString:[sb description]];
  lastLink_ = l;
  if (!readSupported_ && !nonConformant_) {
    @throw [[CCPBVNonFatalServiceException alloc] initWithNSString:@"This server does not support the READ interaction on the specified resource. Please notify the service administrator."];
  }
  return l;
}

- (CCPBVActionLinkEx *)createReferenceReadLinkWithNSString:(NSString *)reference {
  NSString *url = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) fixLinkWithNSString:reference];
  CCPBVActionLinkEx *l = [server_ createLinkWithNSString:url];
  lastLink_ = l;
  return l;
}

- (void)resolveReferencesWithRAREUTJSONArray:(RAREUTJSONArray *)refs
                             withJavaUtilMap:(id<JavaUtilMap>)map {
  int len = [((RAREUTJSONArray *) nil_chk(refs)) length];
  JavaUtilArrayList *links = nil;
  for (int i = len - 1; i > -1; i--) {
    NSString *ref = [((RAREUTJSONObject *) nil_chk([refs getJSONObjectWithInt:i])) getStringWithNSString:@"reference"];
    if ([((NSString *) nil_chk(ref)) hasPrefix:@"#"]) {
      if (map != nil) {
        RAREUTJSONObject *o = [map removeWithId:[ref substring:1]];
        if (o != nil) {
          (void) [refs setWithInt:i withId:o];
        }
        else {
          (void) [refs removeWithInt:i];
        }
      }
    }
    else {
      CCPBVActionLinkEx *l = [self createReferenceReadLinkWithNSString:ref];
      if (links == nil) {
        links = [[JavaUtilArrayList alloc] initWithInt:len];
      }
      [((CCPBVActionLinkEx *) nil_chk(l)) setLinkedIndexWithInt:i];
      [((JavaUtilArrayList *) nil_chk(links)) addWithId:l];
    }
  }
  if (links != nil) {
    len = [links size];
    CCPBVFHIRLinkWaiter *waiter = nil;
    if (len > 1) {
      waiter = [[CCPBVFHIRLinkWaiter alloc] initWithInt:len - 1];
      for (int i = 1; i < len; i++) {
        [waiter addLinkWithRAREActionLink:[links getWithInt:i]];
      }
    }
    CCPBVActionLinkEx *l = [links getWithInt:0];
    RAREUTJSONTokener *t = nil;
    @try {
      t = [[RAREUTJSONTokener alloc] initWithJavaIoReader:[((CCPBVActionLinkEx *) nil_chk(l)) getReader]];
      RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:t];
      (void) [refs setWithInt:[l getLinkedIndex] withId:o];
      if (waiter != nil) {
        [waiter startWaiting];
        if (![waiter hadError]) {
          for (int i = 1; i < len; i++) {
            CCPBVActionLinkEx *ln = [links getWithInt:i];
            (void) [refs setWithInt:[((CCPBVActionLinkEx *) nil_chk(ln)) getLinkedIndex] withId:[waiter getResultWithInt:i - 1]];
          }
        }
      }
    }
    @catch (JavaLangException *e) {
      if (waiter != nil) {
        [waiter cancelWithJavaLangException:nil withRAREActionLink:nil];
      }
    }
    @finally {
      [((CCPBVActionLinkEx *) nil_chk(l)) close];
      if (t != nil) {
        [t dispose];
      }
      if (waiter != nil) {
        [waiter dispose];
      }
    }
  }
}

- (RAREUTJSONObject *)getReferenceWithNSString:(NSString *)ref {
  CCPBVActionLinkEx *l = [self createReferenceReadLinkWithNSString:ref];
  RAREUTJSONTokener *t = nil;
  @try {
    t = [[RAREUTJSONTokener alloc] initWithJavaIoReader:[((CCPBVActionLinkEx *) nil_chk(l)) getReader]];
    RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:t];
    return o;
  }
  @finally {
    if (t != nil) {
      [t dispose];
    }
    [((CCPBVActionLinkEx *) nil_chk(l)) close];
  }
}

- (CCPBVActionLinkEx *)getLastLink {
  return lastLink_;
}

- (void)searchWithJavaIoReader:(JavaIoReader *)r
                        withId:(id)writer
          withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
             withNSObjectArray:(IOSObjectArray *)params {
  RAREUTJSONWriter *jw;
  JavaIoWriter *w;
  RAREUTCharArray *ca = [[RAREUTCharArray alloc] init];
  if ([writer isKindOfClass:[RAREUTJSONWriter class]]) {
    jw = (RAREUTJSONWriter *) check_class_cast(writer, [RAREUTJSONWriter class]);
    w = nil;
  }
  else {
    w = (JavaIoWriter *) check_class_cast(writer, [JavaIoWriter class]);
    jw = nil;
  }
  if (jw != nil) {
    (void) [jw object];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"_columns"])) array];
    {
      IOSObjectArray *a__ = columnNames_;
      id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *name = (*b__++);
        (void) [jw valueWithId:name];
      }
    }
    (void) [jw endArray];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"_rows"])) array];
  }
  RAREUTJSONTokener *t = [[RAREUTJSONTokener alloc] initWithJavaIoReader:r];
  id<CCPBVFHIRFHIRJSONWatcher_iCallback> cb = [[CCPBVFHIRaFHIRemoteService_$1 alloc] initWithCCPBVFHIRaFHIRemoteService:self withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withNSObjectArray:params withCCPBVHttpHeaders:headers];
  [t setWatcherWithRAREUTJSONTokener_iWatcher:[[CCPBVFHIRFHIRJSONWatcher alloc] initWithCCPBVFHIRFHIRJSONWatcher_iCallback:cb]];
  RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:t];
  [t dispose];
  [self parsingCompleteWithRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withNSObjectArray:params];
  if (jw != nil) {
    (void) [jw endArray];
    (void) [jw endObject];
  }
}

- (void)readWithJavaIoReader:(JavaIoReader *)r
                      withId:(id)writer
        withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
           withNSObjectArray:(IOSObjectArray *)params {
  RAREUTJSONObject *o = [CCPBVFHIRaFHIRemoteService getReadEntryWithJavaIoReader:r];
  if (o != nil) {
    RAREUTJSONWriter *jw;
    JavaIoWriter *w;
    if ([writer isKindOfClass:[RAREUTJSONWriter class]]) {
      jw = (RAREUTJSONWriter *) check_class_cast(writer, [RAREUTJSONWriter class]);
      (void) [((RAREUTJSONWriter *) nil_chk(jw)) object];
      w = nil;
    }
    else {
      w = (JavaIoWriter *) check_class_cast(writer, [JavaIoWriter class]);
      jw = nil;
    }
    [self readEntryWithRAREUTJSONObject:o withRAREUTJSONWriter:jw withJavaIoWriter:w withNSObjectArray:params];
    if (jw != nil) {
      (void) [jw endObject];
    }
  }
}

+ (RAREUTJSONObject *)getReadEntryWithJavaIoReader:(JavaIoReader *)r {
  RAREUTJSONTokener *t = [[RAREUTJSONTokener alloc] initWithJavaIoReader:r];
  @try {
    RAREUTJSONObject *o = [[RAREUTJSONObject alloc] initWithRAREUTJSONTokener:t];
    [t dispose];
    RAREUTJSONObject *entry_ = o;
    if ([((NSString *) nil_chk([o optStringWithNSString:@"resourceType"])) isEqual:@"Bundle"]) {
      RAREUTJSONArray *a = [o optJSONArrayWithNSString:@"entry"];
      int len = (a == nil) ? 0 : [a length];
      if (len > 0) {
        entry_ = [((RAREUTJSONObject *) nil_chk([((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:0])) optJSONObjectWithNSString:@"resource"];
      }
    }
    if ([((NSString *) nil_chk([((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"resourceType"])) isEqual:@"OperationOutcome"]) {
      RAREUTJSONArray *issue = [entry_ optJSONArrayWithNSString:@"issue"];
      if (issue != nil) {
        @throw [[RAREApplicationException alloc] initWithNSString:[issue description]];
      }
    }
    return entry_;
  }
  @finally {
    [t dispose];
  }
}

- (void)writeLinkedDataWithRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                               withNSString:(NSString *)key
                               withNSString:(NSString *)linkedData
                               withNSString:(NSString *)value {
  if (linkedData == nil) {
    (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk(jw)) keyWithNSString:key])) valueWithId:value];
  }
  else {
    (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk(jw)) keyWithNSString:key])) object];
    if (linkedData != nil) {
      (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:linkedData];
    }
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"value"])) valueWithId:value];
    (void) [jw endObject];
  }
}

- (NSString *)cleanLinkWithNSString:(NSString *)href {
  int n = [((NSString *) nil_chk(href)) indexOf:':'];
  if (n != -1) {
    int p = [href indexOf:'/'];
    if (p != -1) {
      if (n < p) {
        NSString *ep = ((CCPBVFHIRFHIRServer *) nil_chk(server_))->endPointNoSlash_;
        if (![href hasPrefix:ep]) {
          if (server_->commandLine_) {
            return href;
          }
          @throw [[RAREApplicationException alloc] initWithNSString:[server_ getStringWithNSString:@"bv.text.bad_fhir_link" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ ep, href } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
        }
        else {
          href = [href substring:[((NSString *) nil_chk(ep)) sequenceLength]];
        }
      }
    }
  }
  return href;
}

- (void)parsingCompleteWithRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                           withJavaIoWriter:(JavaIoWriter *)w
                        withRAREUTCharArray:(RAREUTCharArray *)ca
                          withNSObjectArray:(IOSObjectArray *)params {
}

- (void)processResourceWithRAREUTJSONObject:(RAREUTJSONObject *)resource
                       withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                           withJavaIoWriter:(JavaIoWriter *)w
                        withRAREUTCharArray:(RAREUTCharArray *)ca
                          withNSObjectArray:(IOSObjectArray *)params {
  if (nonConformant_) {
    RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(resource)) getJSONObjectWithNSString:@"resource"];
    (void) [((RAREUTJSONObject *) nil_chk(o)) putWithNSString:@"_link" withJavaUtilCollection:[resource optJSONArrayWithNSString:@"link"]];
    [self processEntryWithRAREUTJSONObject:o withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withNSObjectArray:params];
  }
  else {
    [self processEntryWithRAREUTJSONObject:[((RAREUTJSONObject *) nil_chk(resource)) getJSONObjectWithNSString:@"resource"] withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withNSObjectArray:params];
  }
}

- (NSString *)getIDWithRAREUTJSONObject:(RAREUTJSONObject *)entry_ {
  NSString *id_ = [((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"id" withNSString:nil];
  if ((id_ == nil) && nonConformant_) {
    RAREUTJSONArray *link = [entry_ optJSONArrayWithNSString:@"_link"];
    RAREUTJSONObject *o = (link == nil) ? nil : [link findJSONObjectWithNSString:@"relation" withNSString:@"self"];
    if (o != nil) {
      id_ = [o optStringWithNSString:@"url" withNSString:nil];
    }
  }
  if (id_ != nil) {
    int n = [id_ lastIndexOf:'/'];
    if (n != -1) {
      id_ = [id_ substring:n + 1];
    }
  }
  if (nonConformant_) {
    if ((id_ == nil) || ([id_ sequenceLength] == 0) || [id_ isEqual:@"0"]) {
      id_ = @"__BV_BAD_ID__";
    }
  }
  return id_;
}

- (NSString *)getIDWithNSString:(NSString *)id_ {
  if (id_ != nil) {
    int n = [id_ lastIndexOf:'/'];
    if (n != -1) {
      id_ = [id_ substring:n + 1];
    }
  }
  return id_;
}

- (void)pagingWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                   withCCPBVActionPath:(CCPBVActionPath *)path
                 withJavaIoInputStream:(JavaIoInputStream *)data
                  withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  NSString *href = [self decodeLinkWithNSString:[((CCPBVActionPath *) nil_chk(path)) description]];
  CCPBVActionLinkEx *l = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) createResourceLinkWithNSString:href withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((CCPBVActionLinkEx *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((CCPBVActionLinkEx *) nil_chk(l)) close];
  }
}

- (void)processEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                        withJavaIoWriter:(JavaIoWriter *)w
                     withRAREUTCharArray:(RAREUTCharArray *)ca
                       withNSObjectArray:(IOSObjectArray *)params {
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)debugLogWithNSString:(NSString *)msg {
  if (((CCPBVFHIRFHIRServer *) nil_chk(server_))->debug_) {
    [super debugLogWithNSString:msg];
  }
  else {
    [server_ debugLogWithNSString:msg];
  }
}

- (void)ignoreExceptionWithJavaLangException:(JavaLangException *)e {
  if (((CCPBVFHIRFHIRServer *) nil_chk(server_))->debug_) {
    [super ignoreExceptionWithJavaLangException:e];
  }
  else {
    [server_ ignoreExceptionWithJavaLangException:e];
  }
}

- (NSString *)getResourceAsStringWithNSString:(NSString *)name {
  return [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:name];
}

- (JavaLangRuntimeException *)missingRequiredDataWithNSString:(NSString *)name
                                                 withNSString:(NSString *)id_ {
  return [self missingRequiredDataWithNSString:name withNSString:id_ withNSString:resourceName_];
}

- (JavaLangRuntimeException *)missingRequiredDataWithNSString:(NSString *)name
                                                 withNSString:(NSString *)id_
                                                 withNSString:(NSString *)resourceName {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"Required element '"])) appendWithNSString:name];
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"' is missing from FHIR '"])) appendWithNSString:resourceName])) appendWithNSString:@"'"];
  if (id_ != nil) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" with id:"])) appendWithNSString:id_];
  }
  return [[CCPBVMessageException alloc] initWithNSString:[sb description] withBoolean:YES];
}

- (JavaLangRuntimeException *)invalidDataWithNSString:(NSString *)name
                                         withNSString:(NSString *)id_ {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] initWithNSString:@"Invalid/missing data "];
  if (name != nil) {
    ;
  }
  {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"for element '"])) appendWithNSString:name])) appendWithNSString:@"' "];
  }
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" in FHIR '"])) appendWithNSString:resourceName_])) appendWithNSString:@"'"];
  if (id_ != nil) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" with id:"])) appendWithNSString:id_];
  }
  return [[CCPBVMessageException alloc] initWithNSString:[sb description] withBoolean:YES];
}

+ (void)initialize {
  if (self == [CCPBVFHIRaFHIRemoteService class]) {
    CCPBVFHIRaFHIRemoteService_validExtensions_ = [[JavaUtilHashSet alloc] init];
    CCPBVFHIRaFHIRemoteService_missingInvalid_ = [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:CCPBVFHIRaFHIRemoteService_BAD_ID_ withNSString:nil withNSString:CCPBVFHIRaFHIRemoteService_MISSING_INVALID_ withNSString:nil];
    {
      [CCPBVFHIRaFHIRemoteService_validExtensions_ addWithId:@"json"];
      [CCPBVFHIRaFHIRemoteService_validExtensions_ addWithId:@"txt"];
      [CCPBVFHIRaFHIRemoteService_validExtensions_ addWithId:@"html"];
    }
  }
}

- (void)copyAllFieldsTo:(CCPBVFHIRaFHIRemoteService *)other {
  [super copyAllFieldsTo:other];
  other->columnNames_ = columnNames_;
  other->countSupported_ = countSupported_;
  other->lastLink_ = lastLink_;
  other->nonConformant_ = nonConformant_;
  other->pagingPath_ = pagingPath_;
  other->prefixSearchSupported_ = prefixSearchSupported_;
  other->readSupported_ = readSupported_;
  other->resourceName_ = resourceName_;
  other->searchParams_ = searchParams_;
  other->server_ = server_;
  other->summarySupported_ = summarySupported_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getPagingPath", NULL, "LNSString", 0x4, NULL },
    { "createPagingUrlWithNSString:withBoolean:", NULL, "LNSString", 0x4, NULL },
    { "createReferenceMapWithRAREUTJSONArray:", NULL, "LJavaUtilMap", 0x1, NULL },
    { "sendTextAsHTMLWithCCPBViHttpConnection:withCCPBVHttpHeaders:withNSString:withNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "sendImageAsHTMLWithCCPBViHttpConnection:withCCPBVHttpHeaders:withNSString:withNSString:withNSString:", NULL, "V", 0x1, "JavaIoIOException" },
    { "getDateTimeWithRAREUTJSONObject:", NULL, "LNSString", 0x4, NULL },
    { "encodeLinkWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "decodeLinkWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "createSearchLinkWithNSStringArray:", NULL, "LCCPBVActionLinkEx", 0x84, NULL },
    { "createTextLinkWithNSString:", NULL, "LCCPBVActionLinkEx", 0x4, NULL },
    { "createReadLinkWithNSString:", NULL, "LCCPBVActionLinkEx", 0x4, NULL },
    { "removeExtensionWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "createReadLinkWithNSString:withNSString:", NULL, "LCCPBVActionLinkEx", 0x4, NULL },
    { "createReferenceReadLinkWithNSString:", NULL, "LCCPBVActionLinkEx", 0x4, NULL },
    { "resolveReferencesWithRAREUTJSONArray:withJavaUtilMap:", NULL, "V", 0x4, "JavaIoIOException" },
    { "getReferenceWithNSString:", NULL, "LRAREUTJSONObject", 0x4, "JavaIoIOException" },
    { "getLastLink", NULL, "LCCPBVActionLinkEx", 0x1, NULL },
    { "searchWithJavaIoReader:withId:withCCPBVHttpHeaders:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "readWithJavaIoReader:withId:withCCPBVHttpHeaders:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "getReadEntryWithJavaIoReader:", NULL, "LRAREUTJSONObject", 0x9, NULL },
    { "writeLinkedDataWithRAREUTJSONWriter:withNSString:withNSString:withNSString:", NULL, "V", 0x4, "JavaIoIOException" },
    { "cleanLinkWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "parsingCompleteWithRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "processResourceWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "getIDWithRAREUTJSONObject:", NULL, "LNSString", 0x4, NULL },
    { "getIDWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "pagingWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "processEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x481, "JavaIoIOException" },
    { "debugLogWithNSString:", NULL, "V", 0x4, NULL },
    { "ignoreExceptionWithJavaLangException:", NULL, "V", 0x4, NULL },
    { "getResourceAsStringWithNSString:", NULL, "LNSString", 0x4, NULL },
    { "missingRequiredDataWithNSString:withNSString:", NULL, "LJavaLangRuntimeException", 0x4, NULL },
    { "missingRequiredDataWithNSString:withNSString:withNSString:", NULL, "LJavaLangRuntimeException", 0x4, NULL },
    { "invalidDataWithNSString:withNSString:", NULL, "LJavaLangRuntimeException", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "server_", NULL, 0x4, "LCCPBVFHIRFHIRServer" },
    { "columnNames_", NULL, 0x4, "LIOSObjectArray" },
    { "summarySupported_", NULL, 0x4, "Z" },
    { "readSupported_", NULL, 0x4, "Z" },
    { "prefixSearchSupported_", NULL, 0x4, "Z" },
    { "countSupported_", NULL, 0x4, "Z" },
    { "resourceName_", NULL, 0x4, "LNSString" },
    { "lastLink_", NULL, 0x4, "LCCPBVActionLinkEx" },
    { "searchParams_", NULL, 0x4, "LNSString" },
    { "validExtensions_", NULL, 0x8, "LJavaUtilHashSet" },
    { "nonConformant_", NULL, 0x0, "Z" },
    { "pagingPath_", NULL, 0x4, "LNSString" },
    { "MISSING_INVALID_", NULL, 0x9, "LNSString" },
    { "MISSING_INVALID_HTML_", NULL, 0x9, "LNSString" },
    { "BAD_ID_", NULL, 0x9, "LNSString" },
    { "missingInvalid_", NULL, 0x9, "LCCPBVFHIRFHIRUtils_MedicalCode" },
  };
  static J2ObjcClassInfo _CCPBVFHIRaFHIRemoteService = { "aFHIRemoteService", "com.sparseware.bellavista.external.fhir", NULL, 0x401, 35, methods, 16, fields, 0, NULL};
  return &_CCPBVFHIRaFHIRemoteService;
}

@end
@implementation CCPBVFHIRaFHIRemoteService_$1

- (id)entryEncounteredWithRAREUTJSONObject:(RAREUTJSONObject *)entry_ {
  @try {
    [this$0_ processResourceWithRAREUTJSONObject:entry_ withRAREUTJSONWriter:val$jw_ withJavaIoWriter:val$w_ withRAREUTCharArray:val$ca_ withNSObjectArray:val$params_];
  }
  @catch (JavaLangException *e) {
    @throw [RAREApplicationException runtimeExceptionWithJavaLangThrowable:e];
  }
  return nil;
}

- (id)linkEncounteredWithNSString:(NSString *)arrayName
                     withNSString:(NSString *)type
                     withNSString:(NSString *)url {
  if ([@"link" isEqual:arrayName]) {
    if ([((NSString *) nil_chk(type)) isEqual:@"next"]) {
      [((CCPBVHttpHeaders *) nil_chk(val$headers_)) hasMoreWithNSString:[this$0_ createPagingUrlWithNSString:[this$0_ cleanLinkWithNSString:url] withBoolean:val$jw_ != nil]];
    }
    else if ([type isEqual:@"self"]) {
      [((CCPBVHttpHeaders *) nil_chk(val$headers_)) setLinkInfoWithNSString:[this$0_ createPagingUrlWithNSString:[this$0_ cleanLinkWithNSString:url] withBoolean:val$jw_ != nil]];
    }
  }
  return nil;
}

- (id)initWithCCPBVFHIRaFHIRemoteService:(CCPBVFHIRaFHIRemoteService *)outer$
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)capture$0
                        withJavaIoWriter:(JavaIoWriter *)capture$1
                     withRAREUTCharArray:(RAREUTCharArray *)capture$2
                       withNSObjectArray:(IOSObjectArray *)capture$3
                    withCCPBVHttpHeaders:(CCPBVHttpHeaders *)capture$4 {
  this$0_ = outer$;
  val$jw_ = capture$0;
  val$w_ = capture$1;
  val$ca_ = capture$2;
  val$params_ = capture$3;
  val$headers_ = capture$4;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "entryEncounteredWithRAREUTJSONObject:", NULL, "LNSObject", 0x1, NULL },
    { "linkEncounteredWithNSString:withNSString:withNSString:", NULL, "LNSObject", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVFHIRaFHIRemoteService" },
    { "val$jw_", NULL, 0x1012, "LRAREUTJSONWriter" },
    { "val$w_", NULL, 0x1012, "LJavaIoWriter" },
    { "val$ca_", NULL, 0x1012, "LRAREUTCharArray" },
    { "val$params_", NULL, 0x1012, "LIOSObjectArray" },
    { "val$headers_", NULL, 0x1012, "LCCPBVHttpHeaders" },
  };
  static J2ObjcClassInfo _CCPBVFHIRaFHIRemoteService_$1 = { "$1", "com.sparseware.bellavista.external.fhir", "aFHIRemoteService", 0x8000, 2, methods, 6, fields, 0, NULL};
  return &_CCPBVFHIRaFHIRemoteService_$1;
}

@end
