//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/Orders.java
//
//  Created by decoteaud on 11/18/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/FHIRUtils.h"
#include "com/sparseware/bellavista/external/fhir/Orders.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/aRemoteService.h"
#include "com/sparseware/bellavista/service/iHttpConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"

@implementation ComSparsewareBellavistaExternalFhirOrders

static NSString * ComSparsewareBellavistaExternalFhirOrders_TYPE_MEDS_ = @"meds";

+ (NSString *)TYPE_MEDS {
  return ComSparsewareBellavistaExternalFhirOrders_TYPE_MEDS_;
}

+ (void)setTYPE_MEDS:(NSString *)TYPE_MEDS {
  ComSparsewareBellavistaExternalFhirOrders_TYPE_MEDS_ = TYPE_MEDS;
}

- (id)init {
  if (self = [super initWithNSString:@"MedicationPrescription"]) {
    columnNames_ = [IOSObjectArray arrayWithObjects:(id[]){ @"type", @"ordered_item", @"infusion_rate", @"start_date", @"stop_date", @"refills", @"quantity", @"unit_per_dose", @"status", @"lastfill", @"directions", @"notes", @"prn", @"category", @"clinical_category", @"provider", @"signed", @"flagged" } count:18 type:[IOSClass classWithClass:[NSString class]]];
  }
  return self;
}

- (void)listWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  RAREActionLink *l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((ComSparsewareBellavistaExternalFhirFHIRServer *) nil_chk(server_)) getPatientID] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  @try {
    id w = [ComSparsewareBellavistaExternalFhirFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)medicationsWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                        withCCPBVActionPath:(CCPBVActionPath *)path
                      withJavaIoInputStream:(JavaIoInputStream *)data
                       withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [self demoWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
}

- (void)orderWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                  withCCPBVActionPath:(CCPBVActionPath *)path
                withJavaIoInputStream:(JavaIoInputStream *)data
                 withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [self demoWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
}

- (void)processEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                        withJavaIoWriter:(JavaIoWriter *)w
                     withRAREUTCharArray:(RAREUTCharArray *)ca
                       withNSObjectArray:(IOSObjectArray *)parms {
  if ([((NSString *) nil_chk([((RAREUTJSONObject *) nil_chk(entry_)) getStringWithNSString:@"resourceType"])) isEqual:resourceName_]) {
    [self processMedicationEntryWithRAREUTJSONObject:entry_ withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca];
  }
  else {
    [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Could not parse entry:\n%@", [entry_ toStringWithInt:2]]];
  }
}

- (void)processMedicationEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                              withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                                  withJavaIoWriter:(JavaIoWriter *)w
                               withRAREUTCharArray:(RAREUTCharArray *)ca {
  id v;
  RAREUTJSONObject *o;
  RAREUTJSONObject *oo;
  BOOL parsed = NO;
  do {
    NSString *typeld = [self getIDWithRAREUTJSONObject:entry_];
    o = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"medication"];
    NSString *type = ComSparsewareBellavistaExternalFhirOrders_TYPE_MEDS_;
    NSString *ordered_item = o == nil ? nil : [o getStringWithNSString:@"display"];
    NSString *ordered_itemld = o == nil ? nil : [((ComSparsewareBellavistaExternalFhirFHIRServer *) nil_chk(server_)) getIDWithNSString:[o getStringWithNSString:@"reference"] withBoolean:NO];
    NSString *infusion_rate = [ComSparsewareBellavistaExternalFhirFHIRUtils getRateWithRAREUTJSONObject:[entry_ optJSONObjectWithNSString:@"rate"] withRAREUTCharArray:ca];
    NSString *start_date = nil;
    NSString *stop_date = nil;
    NSString *refills = nil;
    NSString *quantity = nil;
    NSString *unit_per_dose = nil;
    NSString *status = [entry_ optStringWithNSString:@"display" withNSString:nil];
    NSString *directions = nil;
    NSString *notes = [entry_ optStringWithNSString:@"note" withNSString:nil];
    NSString *prn = @"false";
    NSString *providerld = nil;
    NSString *provider = nil;
    RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"dosageInstruction"];
    int len = a == nil ? 0 : [a length];
    for (int i = 0; i < len; i++) {
      o = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
      NSString *text = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"text" withNSString:nil];
      if (directions == nil) {
        directions = text;
      }
      else {
        directions = [NSString stringWithFormat:@"%@%@", directions, [NSString stringWithFormat:@"; %@", text]];
      }
      NSString *s = (NSString *) check_class_cast([o optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"additionalInstructions", @"text" } count:2 type:[IOSClass classWithClass:[NSString class]]]], [NSString class]);
      if (s != nil) {
        if (directions == nil) {
          directions = s;
        }
        else {
          directions = [NSString stringWithFormat:@"%@%@", directions, [NSString stringWithFormat:@"; %@", s]];
        }
      }
      oo = [o optJSONObjectWithNSString:@"scheduledPeriod"];
      if (oo != nil) {
        if (start_date == nil) {
          start_date = [oo optStringWithNSString:@"start" withNSString:nil];
        }
        if (stop_date == nil) {
          stop_date = [oo optStringWithNSString:@"end" withNSString:nil];
        }
      }
      if (prn == nil) {
        oo = [o optJSONObjectWithNSString:@"asNeededCodeableConcept"];
        if (oo != nil) {
          prn = @"true";
        }
        else if ([o optBooleanWithNSString:@"asNeededBoolean"]) {
          prn = @"true";
        }
      }
      if (unit_per_dose == nil) {
        v = [o optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"doseQuantity", @"value" } count:2 type:[IOSClass classWithClass:[NSString class]]]];
        if (v != nil) {
          unit_per_dose = [v description];
        }
        else {
          unit_per_dose = [ComSparsewareBellavistaExternalFhirFHIRUtils getRangeWithRAREUTJSONObject:[o optJSONObjectWithNSString:@"doseRange"] withBoolean:YES withRAREUTCharArray:ca];
        }
      }
    }
    o = [entry_ optJSONObjectWithNSString:@"prescriber"];
    if (o != nil) {
      providerld = [((ComSparsewareBellavistaExternalFhirFHIRServer *) nil_chk(server_)) getIDWithNSString:[o getStringWithNSString:@"reference"] withBoolean:NO];
      provider = [o optStringWithNSString:@"display"];
    }
    o = [entry_ optJSONObjectWithNSString:@"dispense"];
    if (o != nil) {
      v = [o optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"quantity", @"value" } count:2 type:[IOSClass classWithClass:[NSString class]]]];
      quantity = v == nil ? nil : [v description];
      refills = [o optStringWithNSString:@"numberOfRepeatsAllowed"];
      if (ordered_item == nil) {
        oo = [o optJSONObjectWithNSString:@"medication"];
        ordered_item = oo == nil ? nil : [oo getStringWithNSString:@"display"];
        ordered_itemld = oo == nil ? nil : [((ComSparsewareBellavistaExternalFhirFHIRServer *) nil_chk(server_)) getIDWithNSString:[oo getStringWithNSString:@"reference"] withBoolean:NO];
      }
    }
    if (jw != nil) {
      (void) [jw object];
      if (type != nil) {
        if (typeld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"type"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:typeld])) keyWithNSString:@"value"])) valueWithId:type];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"type"])) valueWithId:type];
        }
      }
      if (ordered_item != nil) {
        if (ordered_itemld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:ordered_itemld])) keyWithNSString:@"value"])) valueWithId:ordered_item];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) valueWithId:ordered_item];
        }
      }
      if (infusion_rate != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"infusion_rate"])) valueWithId:infusion_rate];
      }
      if (start_date != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"start_date"])) valueWithId:start_date];
      }
      if (stop_date != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"stop_date"])) valueWithId:stop_date];
      }
      if (refills != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"refills"])) valueWithId:refills];
      }
      if (quantity != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"quantity"])) valueWithId:quantity];
      }
      if (unit_per_dose != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"unit_per_dose"])) valueWithId:unit_per_dose];
      }
      if (status != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:status];
      }
      if (directions != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"directions"])) valueWithId:directions];
      }
      if (notes != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"notes"])) valueWithId:notes];
      }
      if (prn != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"prn"])) valueWithId:prn];
      }
      if (provider != nil) {
        if (providerld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:providerld])) keyWithNSString:@"value"])) valueWithId:provider];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) valueWithId:provider];
        }
      }
      (void) [jw endObject];
    }
    else {
      if (type != nil) {
        if (typeld != nil) {
          [((JavaIoWriter *) nil_chk(w)) writeWithNSString:typeld];
          [w writeWithInt:(unichar) '|'];
        }
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:type withRAREUTCharArray:ca];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) '^'];
      if (ordered_item != nil) {
        if (ordered_itemld != nil) {
          [w writeWithNSString:ordered_itemld];
          [w writeWithInt:(unichar) '|'];
        }
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:ordered_item withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (infusion_rate != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:infusion_rate withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (start_date != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:start_date withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (stop_date != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:stop_date withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (refills != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:refills withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (quantity != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:quantity withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (unit_per_dose != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:unit_per_dose withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (status != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:status withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      if (directions != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:directions withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (notes != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:notes withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (prn != nil) {
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:prn withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      if (provider != nil) {
        if (providerld != nil) {
          [w writeWithNSString:providerld];
          [w writeWithInt:(unichar) '|'];
        }
        [ComSparsewareBellavistaExternalFhirFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:provider withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) 0x000a];
    }
    parsed = YES;
  }
  while (NO);
  if (!parsed) {
    [RAREPlatform debugLogWithNSString:[NSString stringWithFormat:@"Could not parse entry:\n%@", [((RAREUTJSONObject *) nil_chk(entry_)) toStringWithInt:2]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "listWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "medicationsWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "orderWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "processEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "processMedicationEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:", NULL, "V", 0x4, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "TYPE_MEDS_", NULL, 0x9, "LNSString" },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaExternalFhirOrders = { "Orders", "com.sparseware.bellavista.external.fhir", NULL, 0x1, 5, methods, 1, fields, 0, NULL};
  return &_ComSparsewareBellavistaExternalFhirOrders;
}

@end
