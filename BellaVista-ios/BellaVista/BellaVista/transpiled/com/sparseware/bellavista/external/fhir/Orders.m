//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/Orders.java
//
//  Created by decoteaud on 2/17/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/FHIRUtils.h"
#include "com/sparseware/bellavista/external/fhir/Orders.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/iHttpConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"

@implementation CCPBVFHIROrders_DosageInstructions

- (void)getTextWithRAREUTCharArray:(RAREUTCharArray *)ca
                       withBoolean:(BOOL)generate {
  if ((text_ == nil) || generate) {
    [self generateTextWithRAREUTCharArray:ca];
  }
  else {
    (void) [((RAREUTCharArray *) nil_chk(ca)) appendWithNSString:text_];
  }
}

- (void)generateTextWithRAREUTCharArray:(RAREUTCharArray *)ca {
  if ([((RAREUTCharArray *) nil_chk(directions_)) sequenceLength] > 0) {
    (void) [((RAREUTCharArray *) nil_chk(ca)) appendWithRAREUTCharArray:directions_];
  }
  int len = [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk(ca)) trim])) sequenceLength];
  if (len > 1) {
    unichar c = [ca charAtWithInt:len - 1];
    if ((c == ',') || (c == ';')) {
      (void) [ca setLengthWithInt:len - 1];
    }
  }
  if (asNeeded_) {
    (void) [ca appendWithNSString:@", PRN"];
    if (asNeededText_ != nil) {
      (void) [((RAREUTCharArray *) nil_chk([ca appendWithNSString:@": "])) appendWithNSString:asNeededText_];
    }
  }
  if (additionalDirections_ != nil) {
    (void) [ca appendWithNSString:@", "];
    (void) [ca appendWithNSString:additionalDirections_];
  }
}

- (id)init {
  if (self = [super init]) {
    directions_ = [[RAREUTCharArray alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(CCPBVFHIROrders_DosageInstructions *)other {
  [super copyAllFieldsTo:other];
  other->additionalDirections_ = additionalDirections_;
  other->asNeeded_ = asNeeded_;
  other->asNeededText_ = asNeededText_;
  other->bodySite_ = bodySite_;
  other->directions_ = directions_;
  other->dose_ = dose_;
  other->maxDoses_ = maxDoses_;
  other->method_ = method_;
  other->rate_ = rate_;
  other->route_ = route_;
  other->startDate_ = startDate_;
  other->stopDate_ = stopDate_;
  other->text_ = text_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "asNeeded_", NULL, 0x0, "Z" },
    { "asNeededText_", NULL, 0x0, "LNSString" },
    { "directions_", NULL, 0x0, "LRAREUTCharArray" },
    { "additionalDirections_", NULL, 0x0, "LNSString" },
    { "bodySite_", NULL, 0x0, "LNSString" },
    { "dose_", NULL, 0x0, "LNSString" },
    { "route_", NULL, 0x0, "LNSString" },
    { "method_", NULL, 0x0, "LNSString" },
    { "rate_", NULL, 0x0, "LNSString" },
    { "maxDoses_", NULL, 0x0, "LNSString" },
    { "startDate_", NULL, 0x0, "LNSString" },
    { "stopDate_", NULL, 0x0, "LNSString" },
    { "text_", NULL, 0x0, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIROrders_DosageInstructions = { "DosageInstructions", "com.sparseware.bellavista.external.fhir", "Orders", 0x8, 0, NULL, 13, fields, 0, NULL};
  return &_CCPBVFHIROrders_DosageInstructions;
}

@end
@implementation CCPBVFHIROrders

static NSString * CCPBVFHIROrders_TYPE_MEDS_ = @"meds";
static NSString * CCPBVFHIROrders_TYPE_NUTRITION_ = @"nutrition";
static NSString * CCPBVFHIROrders_TYPE_DIAGNOSTIC_ = @"diagnostic";
static IOSObjectArray * CCPBVFHIROrders_COLUMN_NAMES_;

+ (NSString *)TYPE_MEDS {
  return CCPBVFHIROrders_TYPE_MEDS_;
}

+ (void)setTYPE_MEDS:(NSString *)TYPE_MEDS {
  CCPBVFHIROrders_TYPE_MEDS_ = TYPE_MEDS;
}

+ (NSString *)TYPE_NUTRITION {
  return CCPBVFHIROrders_TYPE_NUTRITION_;
}

+ (void)setTYPE_NUTRITION:(NSString *)TYPE_NUTRITION {
  CCPBVFHIROrders_TYPE_NUTRITION_ = TYPE_NUTRITION;
}

+ (NSString *)TYPE_DIAGNOSTIC {
  return CCPBVFHIROrders_TYPE_DIAGNOSTIC_;
}

+ (void)setTYPE_DIAGNOSTIC:(NSString *)TYPE_DIAGNOSTIC {
  CCPBVFHIROrders_TYPE_DIAGNOSTIC_ = TYPE_DIAGNOSTIC;
}

+ (IOSObjectArray *)COLUMN_NAMES {
  return CCPBVFHIROrders_COLUMN_NAMES_;
}

+ (void)setCOLUMN_NAMES:(IOSObjectArray *)COLUMN_NAMES {
  CCPBVFHIROrders_COLUMN_NAMES_ = COLUMN_NAMES;
}

- (id)init {
  return [self initCCPBVFHIROrdersWithNSString:@"MedicationOrder"];
}

- (id)initCCPBVFHIROrdersWithNSString:(NSString *)resourceName {
  if (self = [super initWithNSString:resourceName]) {
    generateMedicationReport_ = YES;
    generateDisgnosticRreport_ = YES;
    generateNutritionReport_ = YES;
    generateMedicationDirections_ = NO;
    columnNames_ = [IOSObjectArray arrayWithObjects:(id[]){ @"type", @"ordered_item", @"start_date", @"stop_date", @"refills", @"quantity", @"unit_per_dose", @"status", @"lastfill", @"directions", @"notes", @"prn", @"category", @"clinical_category", @"provider", @"signed", @"flagged" } count:17 type:[IOSClass classWithClass:[NSString class]]];
    if (((CCPBVFHIRFHIRServer *) nil_chk(server_))->serverConfig_ != nil) {
      RAREUTJSONObject *o = (RAREUTJSONObject *) check_class_cast([server_->serverConfig_ optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"fhir", @"orders" } count:2 type:[IOSClass classWithClass:[NSString class]]]], [RAREUTJSONObject class]);
      if (o != nil) {
        generateMedicationReport_ = [server_->serverConfig_ optBooleanWithNSString:@"generateMedicationReport" withBoolean:generateMedicationReport_];
        generateDisgnosticRreport_ = [server_->serverConfig_ optBooleanWithNSString:@"generateDisgnosticRreport" withBoolean:generateDisgnosticRreport_];
        generateNutritionReport_ = [server_->serverConfig_ optBooleanWithNSString:@"generateNutritionReport" withBoolean:generateNutritionReport_];
        generateMedicationDirections_ = [server_->serverConfig_ optBooleanWithNSString:@"generateMedicationDirections" withBoolean:generateMedicationDirections_];
        searchParams_ = [o optStringWithNSString:@"search_params" withNSString:nil];
      }
    }
  }
  return self;
}

- (id)initWithNSString:(NSString *)resourceName {
  return [self initCCPBVFHIROrdersWithNSString:resourceName];
}

- (void)listWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  RAREActionLink *l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID], @"status", @"active" } count:4 type:[IOSClass classWithClass:[NSString class]]]];
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)medicationsWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                        withCCPBVActionPath:(CCPBVActionPath *)path
                      withJavaIoInputStream:(JavaIoInputStream *)data
                       withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  RAREActionLink *l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID], @"status", @"active" } count:4 type:[IOSClass classWithClass:[NSString class]]]];
  JavaLangBoolean *summary = [JavaLangBoolean valueOfWithBoolean:[((CCPBVActionPath *) nil_chk(path)) shift] != nil];
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ summary } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)categoryWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                     withCCPBVActionPath:(CCPBVActionPath *)path
                   withJavaIoInputStream:(JavaIoInputStream *)data
                    withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  NSString *cat = [((CCPBVActionPath *) nil_chk(path)) shift];
  if ([((NSString *) nil_chk(cat)) isEqual:CCPBVFHIROrders_TYPE_DIAGNOSTIC_]) {
    CCPBVFHIROrders_DiagnosticOrders *diagnosticOrders = [[CCPBVFHIROrders_DiagnosticOrders alloc] init];
    [diagnosticOrders listWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
    return;
  }
  if ([cat isEqual:CCPBVFHIROrders_TYPE_NUTRITION_]) {
    CCPBVFHIROrders_NutritionOrders *nutritionOrders = [[CCPBVFHIROrders_NutritionOrders alloc] init];
    [nutritionOrders listWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
    return;
  }
  RAREActionLink *l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [path pop] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)parsingCompleteWithRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                           withJavaIoWriter:(JavaIoWriter *)w
                        withRAREUTCharArray:(RAREUTCharArray *)ca
                          withNSObjectArray:(IOSObjectArray *)params {
  if (((params == nil) || ((int) [params count] == 0)) && [((NSString *) nil_chk(resourceName_)) isEqual:@"MedicationOrder"]) {
    NSString *type = nil;
    NSString *desc = nil;
    if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceWithNSString:@"NutritionOrder"] != nil) {
      type = CCPBVFHIROrders_TYPE_NUTRITION_;
      desc = [self getResourceAsStringWithNSString:@"bv.text.nutrition_orders"];
      if (desc == nil) {
        desc = @"Nutrition Orders";
      }
      [CCPBVFHIROrders writeCategoryWithNSString:type withNSString:desc withRAREUTJSONWriter:jw withJavaIoWriter:w];
    }
    if ([server_ getResourceWithNSString:@"DiagnosticOrder"] != nil) {
      type = CCPBVFHIROrders_TYPE_DIAGNOSTIC_;
      desc = [self getResourceAsStringWithNSString:@"bv.text.diagnostic_orders"];
      if (desc == nil) {
        desc = @"Diagnostic Orders";
      }
      [CCPBVFHIROrders writeCategoryWithNSString:type withNSString:desc withRAREUTJSONWriter:jw withJavaIoWriter:w];
    }
  }
  [super parsingCompleteWithRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withNSObjectArray:params];
}

- (CCPBVFHIRFHIRUtils_MedicalCode *)getMedicationWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                                                          withBoolean:(BOOL)forRead {
  RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"medicationCodeableConcept"];
  NSString *ordered_item = nil;
  NSString *ordered_itemld = nil;
  if (o == nil) {
    o = [entry_ optJSONObjectWithNSString:@"medicationReference"];
    if (o != nil) {
      ordered_item = [o optStringWithNSString:@"display"];
      if ([((NSString *) nil_chk(ordered_item)) sequenceLength] == 0) {
        @try {
          o = [self getReferenceWithNSString:[o optStringWithNSString:@"reference"]];
          o = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:@"code"];
        }
        @catch (JavaLangException *e) {
          if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) isDebugMode]) {
            o = [entry_ optJSONObjectWithNSString:@"medicationReference"];
            ordered_itemld = [CCPBVFHIRaFHIRemoteService BAD_ID];
            if (forRead) {
              ordered_item = [NSString stringWithFormat:@"BAD FHIR REF: %@", [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"reference"]];
            }
            else {
              ordered_item = [NSString stringWithFormat:@"{fgColor:badData}BAD FHIR REFERENCE: %@", [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"reference"]];
            }
            o = nil;
          }
          else {
            if ([e isKindOfClass:[JavaIoIOException class]]) {
              @throw (JavaIoIOException *) check_class_cast(e, [JavaIoIOException class]);
            }
            @throw [[JavaIoIOException alloc] initWithJavaLangThrowable:e];
          }
        }
      }
      else {
        ordered_itemld = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getIDWithNSString:[o optStringWithNSString:@"reference"] withBoolean:NO];
        o = nil;
      }
    }
  }
  if (o != nil) {
    return [CCPBVFHIRFHIRUtils getMedicalCodeWithRAREUTJSONObject:o];
  }
  return [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:ordered_itemld withNSString:nil withNSString:ordered_item withNSString:nil];
}

+ (void)writeCategoryWithNSString:(NSString *)type
                     withNSString:(NSString *)desc
             withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                 withJavaIoWriter:(JavaIoWriter *)w {
  if (jw != nil) {
    (void) [jw object];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"value"])) valueWithId:type];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:@"active"];
    (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"category"])) valueWithId:desc];
    (void) [jw endObject];
  }
  else {
    [((JavaIoWriter *) nil_chk(w)) writeWithInt:'|'];
    [w writeWithNSString:type];
    [w writeWithNSString:@"^^^^^^Active^^^^^"];
    [w writeWithNSString:desc];
    [w writeWithNSString:@"^\n"];
  }
}

- (void)orderWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                  withCCPBVActionPath:(CCPBVActionPath *)path
                withJavaIoInputStream:(JavaIoInputStream *)data
                 withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  NSString *id_ = [((CCPBVActionPath *) nil_chk(path)) shift];
  if ([((NSString *) nil_chk(id_)) hasPrefix:[NSString stringWithFormat:@"%@_", CCPBVFHIROrders_TYPE_DIAGNOSTIC_]]) {
    CCPBVFHIROrders_DiagnosticOrders *o = [[CCPBVFHIROrders_DiagnosticOrders alloc] init];
    [path unshiftWithNSString:[id_ substring:[((NSString *) nil_chk(CCPBVFHIROrders_TYPE_DIAGNOSTIC_)) sequenceLength] + 1]];
    [o orderWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
  }
  else if ([id_ hasPrefix:[NSString stringWithFormat:@"%@_", CCPBVFHIROrders_TYPE_NUTRITION_]]) {
    CCPBVFHIROrders_NutritionOrders *o = [[CCPBVFHIROrders_NutritionOrders alloc] init];
    [path unshiftWithNSString:[id_ substring:[((NSString *) nil_chk(CCPBVFHIROrders_TYPE_NUTRITION_)) sequenceLength] + 1]];
    [o orderWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers];
  }
  else {
    RAREActionLink *l = [self createReadLinkWithNSString:id_];
    @try {
      [((CCPBVHttpHeaders *) nil_chk(headers)) setDefaultResponseHeaders];
      [headers mimeHtml];
      [self readWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    @finally {
      [((RAREActionLink *) nil_chk(l)) close];
    }
  }
}

- (CCPBVFHIROrders_DosageInstructions *)getDosageInstructionsWithRAREUTJSONObject:(RAREUTJSONObject *)o
                                                              withRAREUTCharArray:(RAREUTCharArray *)ca
                                                                      withBoolean:(BOOL)summary {
  CCPBVFHIROrders_DosageInstructions *di = [[CCPBVFHIROrders_DosageInstructions alloc] init];
  NSString *s;
  RAREUTCharArray *directions = di->directions_;
  di->text_ = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"text" withNSString:nil];
  RAREUTJSONObject *oo = [o optJSONObjectWithNSString:@"additionalInstructions"];
  if (oo != nil) {
    CCPBVFHIRFHIRUtils_MedicalCode *mc = [CCPBVFHIRFHIRUtils getMedicalCodeWithRAREUTJSONObject:oo];
    s = nil;
    if (mc != nil) {
      s = [mc getBestText];
      if ((s == nil) || [s isEqual:[mc getBestCode]]) {
        s = [((JavaUtilHashMap *) nil_chk(((CCPBVFHIRFHIRServer *) nil_chk(server_))->timingWhen_)) getWithId:[mc getBestCode]];
      }
      if (s == nil) {
        s = [mc getBestText];
      }
    }
    else {
      s = [oo optStringWithNSString:@"text" withNSString:nil];
    }
    di->additionalDirections_ = s;
  }
  oo = [o optJSONObjectWithNSString:@"asNeededCodeableConcept"];
  if (oo != nil) {
    di->asNeededText_ = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
    di->asNeeded_ = [((JavaLangBoolean *) nil_chk([JavaLangBoolean getTRUE])) booleanValue];
  }
  else {
    di->asNeeded_ = [o optBooleanWithNSString:@"asNeededBoolean"];
  }
  oo = [o optJSONObjectWithNSString:@"doseQuantity"];
  if (oo != nil) {
    di->dose_ = [CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:oo withRAREUTCharArray:ca];
  }
  else {
    oo = [o optJSONObjectWithNSString:@"doseRange"];
    if (oo != nil) {
      di->dose_ = [CCPBVFHIRFHIRUtils getRangeWithRAREUTJSONObject:oo withBoolean:YES withRAREUTCharArray:ca];
    }
  }
  oo = [o optJSONObjectWithNSString:@"route"];
  if (oo != nil) {
    di->route_ = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
  }
  oo = [o optJSONObjectWithNSString:@"timing"];
  if (oo != nil) {
    if ([((RAREUTCharArray *) nil_chk(directions)) sequenceLength] > 0) {
      (void) [directions appendWithNSString:@"; "];
    }
    if (summary) {
      (void) [directions appendWithNSString:[CCPBVFHIRFHIRUtils getTimingWithRAREUTJSONObject:oo withNSString:di->dose_ withNSString:di->route_ withBoolean:YES withRAREUTCharArray:ca]];
    }
    else {
      (void) [directions appendWithNSString:[CCPBVFHIRFHIRUtils getTimingWithRAREUTJSONObject:oo withNSString:nil withNSString:nil withBoolean:NO withRAREUTCharArray:ca]];
    }
    di->startDate_ = [oo optStringWithNSString:@"_startDate" withNSString:nil];
    di->stopDate_ = [oo optStringWithNSString:@"_stopDate" withNSString:nil];
  }
  else {
    s = [o optStringWithNSString:@"text" withNSString:nil];
    if (s != nil) {
      if ([((RAREUTCharArray *) nil_chk(directions)) sequenceLength] > 0) {
        (void) [directions appendWithNSString:@"; "];
      }
      (void) [directions appendWithNSString:s];
    }
  }
  if (!summary) {
    oo = [o optJSONObjectWithNSString:@"siteCodeableConcept"];
    if (oo != nil) {
      di->bodySite_ = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
    }
    else {
      oo = [o optJSONObjectWithNSString:@"siteReference"];
      if (oo != nil) {
        s = [oo optStringWithNSString:@"description" withNSString:nil];
        if (s == nil) {
          oo = [oo optJSONObjectWithNSString:@"code"];
          if (oo != nil) {
            s = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
          }
        }
        if (s != nil) {
          di->bodySite_ = s;
        }
      }
    }
    oo = [o optJSONObjectWithNSString:@"method"];
    if (oo != nil) {
      di->method_ = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
    }
    oo = [o optJSONObjectWithNSString:@"rateRatio"];
    if (oo != nil) {
      di->rate_ = [CCPBVFHIRFHIRUtils getRatioWithRAREUTJSONObject:oo withRAREUTCharArray:ca];
    }
    else {
      oo = [o optJSONObjectWithNSString:@"rateRange"];
      if (oo != nil) {
        di->rate_ = [CCPBVFHIRFHIRUtils getRangeWithRAREUTJSONObject:oo withBoolean:YES withRAREUTCharArray:ca];
      }
    }
    oo = [o optJSONObjectWithNSString:@"maxDosePerPeriod"];
    if (oo != nil) {
      di->maxDoses_ = [CCPBVFHIRFHIRUtils getRatioWithRAREUTJSONObject:oo withRAREUTCharArray:ca];
    }
  }
  return di;
}

- (void)writeDosageInstructionsWithJavaIoWriter:(JavaIoWriter *)w
         withCCPBVFHIROrders_DosageInstructions:(CCPBVFHIROrders_DosageInstructions *)di
                            withRAREUTCharArray:(RAREUTCharArray *)sb {
  [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
  NSString *s;
  (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
  if ([((RAREUTCharArray *) nil_chk(((CCPBVFHIROrders_DosageInstructions *) nil_chk(di))->directions_)) sequenceLength] > 0) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.schedule"] withNSString:[di->directions_ description]];
  }
  if (di->asNeeded_) {
    if (di->asNeededText_ != nil) {
      s = [NSString formatWithNSString:[self getResourceAsStringWithNSString:@"bv.text.prn_value"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ di->asNeededText_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    else {
      s = [self getResourceAsStringWithNSString:@"bv.text.prn_yes"];
    }
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.prn"] withNSString:s];
  }
  if (di->additionalDirections_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.additional_instructions"] withNSString:di->additionalDirections_];
  }
  if (di->bodySite_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.body_site"] withNSString:di->bodySite_];
  }
  if (di->route_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.route"] withNSString:di->route_];
  }
  if (di->method_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.method"] withNSString:di->method_];
  }
  if (di->dose_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.dosage"] withNSString:di->dose_];
  }
  if (di->rate_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.rate"] withNSString:di->rate_];
  }
  if (di->maxDoses_ != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.max_dose_per_period"] withNSString:di->maxDoses_];
  }
  s = nil;
  if (di->startDate_ != nil) {
    if (di->stopDate_ != nil) {
      s = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_start_stop"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ di->startDate_, di->stopDate_ } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
    }
    else {
      s = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_start"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ di->startDate_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
    }
  }
  else if (di->stopDate_ != nil) {
    s = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_stop"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ di->stopDate_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  if (s != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.validity_period"] withNSString:s];
  }
  [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:nil];
  RAREUTJSONObject *text = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"text"];
  NSString *div = (text == nil) ? nil : [text optStringWithNSString:@"div" withNSString:nil];
  NSString *status = (text == nil) ? @"" : [text optStringWithNSString:@"status"];
  if ([status isEqual:@"empty"]) {
    div = nil;
  }
  BOOL generated = (div == nil) ? NO : [status isEqual:@"generated"];
  if ((div != nil) && !generated && ![status isEqual:@"additional"]) {
    [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:NO withBoolean:YES];
  }
  else {
    RAREUTCharArray *ca = [[RAREUTCharArray alloc] init];
    if ((div == nil) || generateMedicationReport_) {
      @try {
        RAREUTJSONObject *o;
        RAREUTJSONObject *oo;
        NSString *ordered_item = nil;
        CCPBVFHIRFHIRUtils_MedicalCode *mc = [self getMedicationWithRAREUTJSONObject:entry_ withBoolean:YES];
        ordered_item = [((CCPBVFHIRFHIRUtils_MedicalCode *) nil_chk(mc)) getBestText];
        NSString *startDate = nil;
        NSString *stopDate = nil;
        NSString *refills = nil;
        NSString *quantity = nil;
        RAREUTCharArray *directions = [[RAREUTCharArray alloc] init];
        NSString *provider = nil;
        o = [entry_ optJSONObjectWithNSString:@"prescriber"];
        if (o != nil) {
          provider = [o optStringWithNSString:@"display" withNSString:nil];
        }
        [CCPBVFHIRFHIRUtils writeDocumentTitleWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.medication_order"]];
        [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
        [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.medication"] withNSString:ordered_item];
        RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"dosageInstruction"];
        int len = (a == nil) ? 0 : [a length];
        IOSObjectArray *dia = [IOSObjectArray arrayWithLength:len type:[IOSClass classWithClass:[CCPBVFHIROrders_DosageInstructions class]]];
        for (int i = 0; i < len; i++) {
          oo = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
          CCPBVFHIROrders_DosageInstructions *di = [self getDosageInstructionsWithRAREUTJSONObject:oo withRAREUTCharArray:ca withBoolean:NO];
          (void) IOSObjectArray_Set(dia, i, di);
          if ([directions sequenceLength] > 0) {
            (void) [directions appendWithNSString:@"; "];
          }
          (void) [directions appendWithNSString:((CCPBVFHIROrders_DosageInstructions *) nil_chk(di))->text_];
        }
        if ((directions != nil) && ([directions sequenceLength] > 0)) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.directions"] withNSString:[directions description]];
        }
        NSString *s = [entry_ optStringWithNSString:@"status" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.status"] withNSString:s];
        }
        if (provider != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.prescriber"] withNSString:provider];
        }
        s = [entry_ optStringWithNSString:@"dateWritten" withNSString:nil];
        if (s != nil) {
          s = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:s];
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.date_written"] withNSString:s];
        }
        s = nil;
        oo = [entry_ optJSONObjectWithNSString:@"reasonCodeableConcept"];
        if (oo != nil) {
          s = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
        }
        else {
          oo = [entry_ optJSONObjectWithNSString:@"reasonReference"];
          if (oo != nil) {
            s = [oo optStringWithNSString:@"display" withNSString:nil];
          }
        }
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.reason"] withNSString:s];
        }
        s = [entry_ optStringWithNSString:@"dateEnded" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.date_stopped"] withNSString:s];
        }
        s = [entry_ optStringWithNSString:@"reasonEnded" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.date_stopped_reason"] withNSString:s];
        }
        o = [entry_ optJSONObjectWithNSString:@"dispenseRequest"];
        if (o != nil) {
          mc = [self getMedicationWithRAREUTJSONObject:o withBoolean:YES];
          NSString *dordered_item = [((CCPBVFHIRFHIRUtils_MedicalCode *) nil_chk(mc)) getBestText];
          quantity = [CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:[o optJSONObjectWithNSString:@"quantity"] withRAREUTCharArray:ca];
          refills = [o optStringWithNSString:@"numberOfRepeatsAllowed" withNSString:nil];
          oo = [o optJSONObjectWithNSString:@"validityPeriod"];
          if (oo != nil) {
            if (startDate == nil) {
              startDate = [oo optStringWithNSString:@"start" withNSString:nil];
            }
            if (stopDate == nil) {
              stopDate = [oo optStringWithNSString:@"end" withNSString:nil];
            }
          }
          if ((dordered_item != nil) && ![dordered_item isEqual:ordered_item]) {
            [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.medication"] withNSString:dordered_item];
          }
          if (quantity != nil) {
            [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.quantity"] withNSString:quantity];
          }
          if (refills != nil) {
            [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.refills"] withNSString:refills];
          }
          s = nil;
          if (startDate != nil) {
            startDate = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:startDate];
            if (stopDate != nil) {
              stopDate = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:stopDate];
              s = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_start_stop"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ startDate, stopDate } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
            }
            else {
              s = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_start"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ startDate } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
            }
          }
          else if (stopDate != nil) {
            stopDate = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:stopDate];
            s = [NSString formatWithNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.timing.format.bounds_stop"] withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ stopDate } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
          }
          if (s != nil) {
            [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.validity_period"] withNSString:s];
          }
        }
        [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
        len = (int) [dia count];
        if (len > 0) {
          [CCPBVFHIRFHIRUtils writeSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.dosage_detail"]];
          for (int i = 0; i < len; i++) {
            [self writeDosageInstructionsWithJavaIoWriter:w withCCPBVFHIROrders_DosageInstructions:IOSObjectArray_Get(dia, i) withRAREUTCharArray:ca];
          }
          if (len > 1) {
            [CCPBVFHIRFHIRUtils writeTableSectionFinishWithJavaIoWriter:w];
          }
          [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
        }
        if ((div != nil) && [status isEqual:@"additional"]) {
          [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:YES withBoolean:NO];
        }
      }
      @catch (JavaLangException *e) {
        [((CCPBVFHIRFHIRServer *) nil_chk(server_)) ignoreExceptionWithJavaLangException:e];
      }
    }
    else {
      [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:NO withBoolean:YES];
    }
  }
  [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
}

- (void)processEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                        withJavaIoWriter:(JavaIoWriter *)w
                     withRAREUTCharArray:(RAREUTCharArray *)ca
                       withNSObjectArray:(IOSObjectArray *)parms {
  if (![((NSString *) nil_chk([((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"resourceType"])) isEqual:resourceName_]) {
    return;
  }
  id v;
  RAREUTJSONObject *o;
  RAREUTJSONObject *oo;
  BOOL parsed = NO;
  BOOL summary = (parms != nil) && ((int) [parms count] > 0) && [IOSObjectArray_Get(parms, 0) isEqual:[JavaLangBoolean getTRUE]];
  do {
    NSString *typeld = [self getIDWithRAREUTJSONObject:entry_];
    NSString *type = CCPBVFHIROrders_TYPE_MEDS_;
    NSString *ordered_item = nil;
    NSString *ordered_itemld = nil;
    CCPBVFHIRFHIRUtils_MedicalCode *mc = [self getMedicationWithRAREUTJSONObject:entry_ withBoolean:NO];
    ordered_item = [((CCPBVFHIRFHIRUtils_MedicalCode *) nil_chk(mc)) getBestText];
    ordered_itemld = [mc getBestCode];
    NSString *start_date = nil;
    NSString *stop_date = nil;
    NSString *refills = nil;
    NSString *quantity = nil;
    NSString *unit_per_dose = nil;
    NSString *status = [entry_ optStringWithNSString:@"status" withNSString:nil];
    NSString *directions = nil;
    NSString *prn = nil;
    NSString *providerld = nil;
    NSString *provider = nil;
    RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"dosageInstruction"];
    int len = (a == nil) ? 0 : [a length];
    for (int i = 0; i < len; i++) {
      oo = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
      CCPBVFHIROrders_DosageInstructions *di = [self getDosageInstructionsWithRAREUTJSONObject:oo withRAREUTCharArray:ca withBoolean:YES];
      prn = ((CCPBVFHIROrders_DosageInstructions *) nil_chk(di))->asNeeded_ ? @"true" : nil;
      if (summary) {
        break;
      }
      (void) [((RAREUTCharArray *) nil_chk(ca)) setLengthWithInt:0];
      if (directions != nil) {
        (void) [((RAREUTCharArray *) nil_chk([ca setWithNSString:directions])) appendWithNSString:@"; "];
      }
      [di getTextWithRAREUTCharArray:ca withBoolean:generateMedicationDirections_];
      directions = [ca description];
      if (start_date != nil) {
        start_date = di->startDate_;
      }
      if (stop_date == nil) {
        stop_date = di->stopDate_;
      }
      if (unit_per_dose != nil) {
        unit_per_dose = di->dose_;
      }
    }
    if (summary) {
      if (prn != nil) {
        ordered_item = [NSString stringWithFormat:@"%@ (PRN)", ordered_item];
      }
    }
    else {
      o = [entry_ optJSONObjectWithNSString:@"prescriber"];
      if (o != nil) {
        providerld = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getIDWithNSString:[o optStringWithNSString:@"reference"] withBoolean:NO];
        provider = [o optStringWithNSString:@"display"];
      }
      o = [entry_ optJSONObjectWithNSString:@"dispenseRequest"];
      if (o != nil) {
        v = [o optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"quantity", @"value" } count:2 type:[IOSClass classWithClass:[NSString class]]]];
        quantity = (v == nil) ? nil : [v description];
        refills = [o optStringWithNSString:@"numberOfRepeatsAllowed"];
        oo = [o optJSONObjectWithNSString:@"validityPeriod"];
        if (oo != nil) {
          if (start_date == nil) {
            start_date = [oo optStringWithNSString:@"start" withNSString:nil];
          }
          if (stop_date == nil) {
            stop_date = [oo optStringWithNSString:@"end" withNSString:nil];
          }
        }
      }
    }
    if ((ordered_item == nil) || ([ordered_item sequenceLength] == 0)) {
      if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) isDebugMode]) {
        ordered_item = [CCPBVFHIRaFHIRemoteService MISSING_INVALID];
        if (ordered_itemld == nil) {
          ordered_itemld = [CCPBVFHIRaFHIRemoteService BAD_ID];
        }
      }
      else {
        @throw [self missingRequiredDataWithNSString:@"medication" withNSString:typeld];
      }
    }
    if (jw != nil) {
      (void) [jw object];
      if (summary) {
        if (typeld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:typeld])) keyWithNSString:@"value"])) valueWithId:ordered_item];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) valueWithId:ordered_item];
        }
        if (status != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:status];
        }
      }
      else {
        if ((type != nil)) {
          if (typeld != nil) {
            (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"type"])) object];
            (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:typeld])) keyWithNSString:@"value"])) valueWithId:type];
            (void) [jw endObject];
          }
          else {
            (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"type"])) valueWithId:type];
          }
        }
        if (ordered_item != nil) {
          if (ordered_itemld != nil) {
            (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) object];
            (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:ordered_itemld])) keyWithNSString:@"value"])) valueWithId:ordered_item];
            (void) [jw endObject];
          }
          else {
            (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) valueWithId:ordered_item];
          }
        }
        if (status != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:status];
        }
        if (start_date != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"start_date"])) valueWithId:start_date];
        }
        if (stop_date != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"stop_date"])) valueWithId:stop_date];
        }
        if (refills != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"refills"])) valueWithId:refills];
        }
        if (quantity != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"quantity"])) valueWithId:quantity];
        }
        if (unit_per_dose != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"unit_per_dose"])) valueWithId:unit_per_dose];
        }
        if (status != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:status];
        }
        if (directions != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"directions"])) valueWithId:directions];
        }
        if (prn != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"prn"])) valueWithId:prn];
        }
        if (provider != nil) {
          if (providerld != nil) {
            (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) object];
            (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:providerld])) keyWithNSString:@"value"])) valueWithId:provider];
            (void) [jw endObject];
          }
          else {
            (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) valueWithId:provider];
          }
        }
      }
      (void) [jw endObject];
    }
    else {
      if (summary) {
        if (typeld != nil) {
          [((JavaIoWriter *) nil_chk(w)) writeWithNSString:typeld];
          [w writeWithInt:(unichar) '|'];
        }
        if (ordered_item != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:ordered_item withRAREUTCharArray:ca];
        }
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) '^'];
        if (status != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:status withRAREUTCharArray:ca];
        }
      }
      else {
        if (type != nil) {
          if (typeld != nil) {
            [((JavaIoWriter *) nil_chk(w)) writeWithNSString:typeld];
            [w writeWithInt:(unichar) '|'];
          }
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:type withRAREUTCharArray:ca];
        }
        [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) '^'];
        if (ordered_item != nil) {
          if (ordered_itemld != nil) {
            [w writeWithNSString:ordered_itemld];
            [w writeWithInt:(unichar) '|'];
          }
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:ordered_item withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (start_date != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:start_date withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (stop_date != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:stop_date withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (refills != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:refills withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (quantity != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:quantity withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (unit_per_dose != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:unit_per_dose withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (status != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:status withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        [w writeWithInt:(unichar) '^'];
        if (directions != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:directions withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        if (prn != nil) {
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:prn withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        [w writeWithInt:(unichar) '^'];
        [w writeWithInt:(unichar) '^'];
        if (provider != nil) {
          if (providerld != nil) {
            [w writeWithNSString:providerld];
            [w writeWithInt:(unichar) '|'];
          }
          [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:provider withRAREUTCharArray:ca];
        }
        [w writeWithInt:(unichar) '^'];
        [w writeWithInt:(unichar) '^'];
        [w writeWithInt:(unichar) '^'];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) 0x000a];
    }
    parsed = YES;
  }
  while (NO);
  if (!parsed) {
    [self debugLogWithNSString:[NSString stringWithFormat:@"Could not parse entry:\n%@", [entry_ toStringWithInt:2]]];
  }
}

- (void)copyAllFieldsTo:(CCPBVFHIROrders *)other {
  [super copyAllFieldsTo:other];
  other->generateDisgnosticRreport_ = generateDisgnosticRreport_;
  other->generateMedicationDirections_ = generateMedicationDirections_;
  other->generateMedicationReport_ = generateMedicationReport_;
  other->generateNutritionReport_ = generateNutritionReport_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "listWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "medicationsWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "categoryWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "parsingCompleteWithRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "getMedicationWithRAREUTJSONObject:withBoolean:", NULL, "LCCPBVFHIRFHIRUtils_MedicalCode", 0x2, "JavaIoIOException" },
    { "writeCategoryWithNSString:withNSString:withRAREUTJSONWriter:withJavaIoWriter:", NULL, "V", 0xa, "JavaIoIOException" },
    { "orderWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "getDosageInstructionsWithRAREUTJSONObject:withRAREUTCharArray:withBoolean:", NULL, "LCCPBVFHIROrders_DosageInstructions", 0x4, "JavaIoIOException" },
    { "writeDosageInstructionsWithJavaIoWriter:withCCPBVFHIROrders_DosageInstructions:withRAREUTCharArray:", NULL, "V", 0x0, "JavaIoIOException" },
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "processEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "TYPE_MEDS_", NULL, 0x9, "LNSString" },
    { "TYPE_NUTRITION_", NULL, 0x9, "LNSString" },
    { "TYPE_DIAGNOSTIC_", NULL, 0x9, "LNSString" },
    { "generateMedicationReport_", NULL, 0x0, "Z" },
    { "generateDisgnosticRreport_", NULL, 0x0, "Z" },
    { "generateNutritionReport_", NULL, 0x0, "Z" },
    { "generateMedicationDirections_", NULL, 0x0, "Z" },
    { "COLUMN_NAMES_", NULL, 0xc, "LIOSObjectArray" },
  };
  static J2ObjcClassInfo _CCPBVFHIROrders = { "Orders", "com.sparseware.bellavista.external.fhir", NULL, 0x1, 11, methods, 8, fields, 0, NULL};
  return &_CCPBVFHIROrders;
}

@end
@implementation CCPBVFHIROrders_DiagnosticOrders

static NSString * CCPBVFHIROrders_DiagnosticOrders_category_;

+ (NSString *)category {
  return CCPBVFHIROrders_DiagnosticOrders_category_;
}

+ (void)setCategory:(NSString *)category {
  CCPBVFHIROrders_DiagnosticOrders_category_ = category;
}

- (id)init {
  if (self = [super initWithNSString:@"DiagnosticOrder"]) {
    summarySupported_ = NO;
    if (CCPBVFHIROrders_DiagnosticOrders_category_ == nil) {
      CCPBVFHIROrders_DiagnosticOrders_category_ = [self getResourceAsStringWithNSString:@"bv.text.diagnostic_orders"];
      if (CCPBVFHIROrders_DiagnosticOrders_category_ == nil) {
        CCPBVFHIROrders_DiagnosticOrders_category_ = @"Diagnostic Orders";
      }
    }
  }
  return self;
}

- (void)listWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  RAREActionLink *l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:nil];
  [CCPBVFHIRFHIRUtils writeDocumentTitleWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.diagnostic_order"]];
  RAREUTJSONObject *text = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"text"];
  NSString *div = (text == nil) ? nil : [text optStringWithNSString:@"div" withNSString:nil];
  NSString *status = (text == nil) ? @"" : [text optStringWithNSString:@"status"];
  if ([status isEqual:@"empty"]) {
    div = nil;
  }
  BOOL generated = (div == nil) ? NO : [status isEqual:@"generated"];
  if ((div != nil) && !generated && ![status isEqual:@"additional"]) {
    [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:NO withBoolean:NO];
  }
  else {
    [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
    RAREUTJSONObject *o = [entry_ optJSONObjectWithNSString:@"orderer"];
    if (o != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.requestor"] withNSString:[o optStringWithNSString:@"display"]];
    }
    RAREUTCharArray *sb = [[RAREUTCharArray alloc] init];
    RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"reason"];
    if (o != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.reason"] withNSString:[((RAREUTCharArray *) nil_chk([CCPBVFHIRFHIRUtils concatBestMedicalTextWithRAREUTJSONArray:a withNSString:nil withRAREUTCharArray:sb])) description]];
    }
    NSString *s = [entry_ optStringWithNSString:@"status" withNSString:nil];
    if (s != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.status"] withNSString:s];
    }
    [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
    a = [entry_ optJSONArrayWithNSString:@"item"];
    int len = (a == nil) ? 0 : [a length];
    if ((div == nil) || (generateDisgnosticRreport_ && (len > 0))) {
      (void) [((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk([((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"<h3>"])) appendWithJavaLangCharSequence:[self getResourceAsStringWithNSString:@"bv.text.ordered_items"]])) appendWithJavaLangCharSequence:@"</h3>\n"];
      for (int i = 0; i < len; i++) {
        (void) [w appendWithJavaLangCharSequence:@"<div class='item_div'>\n"];
        sb = [self writeItemWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i] withRAREUTCharArray:sb];
        (void) [w appendWithJavaLangCharSequence:@"\n</div>\n"];
      }
    }
    else {
      [((JavaIoWriter *) nil_chk(w)) writeWithNSString:div];
    }
    RAREUTJSONArray *events = [entry_ optJSONArrayWithNSString:@"event"];
    if (events != nil) {
      [CCPBVFHIRFHIRUtils writeEventsWithJavaIoWriter:w withRAREUTJSONArray:events];
    }
    RAREUTJSONArray *notes = [entry_ optJSONArrayWithNSString:@"note"];
    if (notes != nil) {
      [CCPBVFHIRFHIRUtils writeNotesWithJavaIoWriter:w withRAREUTJSONArray:notes];
    }
    if ((div != nil) && [status isEqual:@"additional"]) {
      [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:YES withBoolean:NO];
    }
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"\n</body></html>"];
}

- (RAREUTCharArray *)writeItemWithJavaIoWriter:(JavaIoWriter *)w
                          withRAREUTJSONObject:(RAREUTJSONObject *)item
                           withRAREUTCharArray:(RAREUTCharArray *)sb {
  [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
  [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.item"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[((RAREUTJSONObject *) nil_chk(item)) optJSONObjectWithNSString:@"code"]]];
  RAREUTJSONArray *a = [item optJSONArrayWithNSString:@"specimen"];
  int len = (a == nil) ? 0 : [a length];
  if (len > 0) {
    if (sb == nil) {
      sb = [[RAREUTCharArray alloc] init];
    }
    (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
    (void) [CCPBVFHIRFHIRUtils concatStringWithRAREUTJSONArray:a withNSString:@"display" withRAREUTCharArray:sb];
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.specimen"] withNSString:[sb description]];
  }
  NSString *s = [item optStringWithNSString:@"status" withNSString:nil];
  if (s != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.status"] withNSString:s];
  }
  RAREUTJSONObject *o = [item optJSONObjectWithNSString:@"bodySite"];
  if (o != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.body_site"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:o]];
  }
  [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
  return sb;
}

- (void)processEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                        withJavaIoWriter:(JavaIoWriter *)w
                     withRAREUTCharArray:(RAREUTCharArray *)ca
                       withNSObjectArray:(IOSObjectArray *)parms {
  RAREUTJSONObject *o;
  BOOL parsed = NO;
  do {
    NSString *type = [CCPBVFHIROrders TYPE_DIAGNOSTIC];
    NSString *typeld = [NSString stringWithFormat:@"%@_%@", type, [self getIDWithRAREUTJSONObject:entry_]];
    NSString *ordered_item = nil;
    RAREUTJSONArray *a = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONArrayWithNSString:@"item"];
    int len = (a == nil) ? 0 : [a length];
    if (len > 0) {
      if (len == 1) {
        ordered_item = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:0]];
      }
      else {
        ordered_item = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getStringWithNSString:@"bv.format.text.diagnostic_order" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [JavaLangInteger valueOfWithInt:len] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
      }
    }
    else {
      ordered_item = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.text.diagnostic_order"];
    }
    NSString *status = [entry_ optStringWithNSString:@"status" withNSString:nil];
    NSString *providerld = nil;
    NSString *provider = nil;
    o = [entry_ optJSONObjectWithNSString:@"orderer"];
    if (o != nil) {
      providerld = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getIDWithNSString:[o optStringWithNSString:@"reference"] withBoolean:NO];
      provider = [o optStringWithNSString:@"display"];
    }
    if (jw != nil) {
      (void) [jw object];
      (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"type"])) object];
      (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:typeld])) keyWithNSString:@"value"])) valueWithId:type];
      (void) [jw endObject];
      if (ordered_item != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) valueWithId:ordered_item];
      }
      if (status != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:status];
      }
      if (provider != nil) {
        if (providerld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:providerld])) keyWithNSString:@"value"])) valueWithId:provider];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) valueWithId:provider];
        }
      }
      (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"category"])) valueWithId:CCPBVFHIROrders_DiagnosticOrders_category_];
      (void) [jw endObject];
    }
    else {
      if (type != nil) {
        if (typeld != nil) {
          [((JavaIoWriter *) nil_chk(w)) writeWithNSString:typeld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:type withRAREUTCharArray:ca];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) '^'];
      if (ordered_item != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:ordered_item withRAREUTCharArray:ca];
      }
      [w writeWithNSString:@"^^^^^^^"];
      if (status != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:status withRAREUTCharArray:ca];
      }
      [w writeWithNSString:@"^^^"];
      [w writeWithNSString:CCPBVFHIROrders_DiagnosticOrders_category_];
      [w writeWithNSString:@"^^^^"];
      if (provider != nil) {
        if (providerld != nil) {
          [w writeWithNSString:providerld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:provider withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) 0x000a];
    }
    parsed = YES;
  }
  while (NO);
  if (!parsed) {
    [self debugLogWithNSString:[NSString stringWithFormat:@"Could not parse entry:\n%@", [((RAREUTJSONObject *) nil_chk(entry_)) toStringWithInt:2]]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "listWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "writeItemWithJavaIoWriter:withRAREUTJSONObject:withRAREUTCharArray:", NULL, "LRAREUTCharArray", 0x4, "JavaIoIOException" },
    { "processEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "category_", NULL, 0x8, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIROrders_DiagnosticOrders = { "DiagnosticOrders", "com.sparseware.bellavista.external.fhir", "Orders", 0x9, 4, methods, 1, fields, 0, NULL};
  return &_CCPBVFHIROrders_DiagnosticOrders;
}

@end
@implementation CCPBVFHIROrders_NutritionOrders

static NSString * CCPBVFHIROrders_NutritionOrders_category_;

+ (NSString *)category {
  return CCPBVFHIROrders_NutritionOrders_category_;
}

+ (void)setCategory:(NSString *)category {
  CCPBVFHIROrders_NutritionOrders_category_ = category;
}

- (id)init {
  if (self = [super initWithNSString:@"NutritionOrder"]) {
    summarySupported_ = NO;
    if (CCPBVFHIROrders_NutritionOrders_category_ == nil) {
      CCPBVFHIROrders_NutritionOrders_category_ = [self getResourceAsStringWithNSString:@"bv.text.nutrition_orders"];
      if (CCPBVFHIROrders_NutritionOrders_category_ == nil) {
        CCPBVFHIROrders_NutritionOrders_category_ = @"Nutrition Orders";
      }
    }
  }
  return self;
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:nil];
  [CCPBVFHIRFHIRUtils writeDocumentTitleWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.nutrition_order"]];
  RAREUTJSONObject *text = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"text"];
  NSString *div = (text == nil) ? nil : [text optStringWithNSString:@"div" withNSString:nil];
  NSString *status = (text == nil) ? @"" : [text optStringWithNSString:@"status"];
  if ([status isEqual:@"empty"]) {
    div = nil;
  }
  BOOL generated = (div == nil) ? NO : [status isEqual:@"generated"];
  if ((div != nil) && !generated && ![status isEqual:@"additional"]) {
    [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:NO withBoolean:YES];
  }
  else {
    [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
    RAREUTJSONArray *a;
    RAREUTJSONObject *oo, *so;
    RAREUTJSONObject *o = [entry_ optJSONObjectWithNSString:@"orderer"];
    if (o != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.requestor"] withNSString:[o optStringWithNSString:@"display"]];
    }
    NSString *s = [entry_ optStringWithNSString:@"dateTime" withNSString:nil];
    if (s != nil) {
      s = [CCPBVFHIRFHIRServer convertDateTimeWithNSString:s];
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.date"] withNSString:s];
    }
    s = [entry_ optStringWithNSString:@"status" withNSString:nil];
    if (s != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.status"] withNSString:s];
    }
    RAREUTCharArray *sb = [[RAREUTCharArray alloc] init];
    (void) [CCPBVFHIRFHIRUtils concatBestMedicalTextWithRAREUTJSONArray:[entry_ optJSONArrayWithNSString:@"foodPreferenceModifier"] withNSString:nil withRAREUTCharArray:sb];
    if ([sb sequenceLength] > 0) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.food_preference_modifier"] withNSString:[sb description]];
    }
    (void) [sb setLengthWithInt:0];
    (void) [CCPBVFHIRFHIRUtils concatBestMedicalTextWithRAREUTJSONArray:[entry_ optJSONArrayWithNSString:@"excludeFoodModifier"] withNSString:nil withRAREUTCharArray:sb];
    if ([sb sequenceLength] > 0) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.exclude_food_modifier"] withNSString:[sb description]];
    }
    [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
    if ((div == nil) || generateNutritionReport_) {
      o = [entry_ optJSONObjectWithNSString:@"oralDiet"];
      if (o != nil) {
        [CCPBVFHIRFHIRUtils writeSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.diet"]];
        [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
        (void) [sb setLengthWithInt:0];
        (void) [CCPBVFHIRFHIRUtils concatBestMedicalTextWithRAREUTJSONArray:[o optJSONArrayWithNSString:@"type"] withNSString:nil withRAREUTCharArray:sb];
        if ([sb sequenceLength] > 0) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.type"] withNSString:[sb description]];
        }
        [self writeScheduleWithJavaIoWriter:w withRAREUTJSONArray:[o optJSONArrayWithNSString:@"schedule"] withRAREUTCharArray:sb];
        a = [o optJSONArrayWithNSString:@"fluidConsistencyType"];
        if ((a != nil) && ([a length] > 0)) {
          (void) [sb setLengthWithInt:0];
          (void) [CCPBVFHIRFHIRUtils concatBestMedicalTextWithRAREUTJSONArray:a withNSString:nil withRAREUTCharArray:sb];
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.fluid_consistency"] withNSString:[sb description]];
        }
        s = [o optStringWithNSString:@"instruction" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.instructions"] withNSString:s];
        }
        [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
        for (int n = 0; n < 2; n++) {
          a = [o optJSONArrayWithNSString:(n == 0) ? @"nutrient" : @"texture"];
          int len = (a == nil) ? 0 : [a length];
          if (len > 1) {
            [CCPBVFHIRFHIRUtils writeSubSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:(n == 0) ? @"bv.text.nutrients" : @"bv.text.textures"]];
            for (int i = 0; i < len; i++) {
              [self writeNutruentOrTextureWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i] withRAREUTCharArray:sb withBoolean:n == 0 withBoolean:len == 1];
            }
            [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
          }
          else if (len == 1) {
            [self writeNutruentOrTextureWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:0] withRAREUTCharArray:sb withBoolean:n == 0 withBoolean:len == 1];
          }
        }
        [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
      }
      a = [entry_ optJSONArrayWithNSString:@"supplement"];
      int len = (a == nil) ? 0 : [a length];
      if (len > 0) {
        [CCPBVFHIRFHIRUtils writeSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.supplements"]];
        for (int i = 0; i < len; i++) {
          [self writeSupplimentWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i] withRAREUTCharArray:sb withBoolean:len == 1];
        }
        [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
      }
      o = [entry_ optJSONObjectWithNSString:@"enteralFormula"];
      if (o != nil) {
        [CCPBVFHIRFHIRUtils writeSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.external_formula"]];
        [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
        oo = [o optJSONObjectWithNSString:@"baseFormulaType"];
        if (o != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.formula_type"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
        }
        s = [o optStringWithNSString:@"baseFormulaProductName" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.formula"] withNSString:s];
        }
        oo = [o optJSONObjectWithNSString:@"additiveType"];
        if (o != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.additive_type"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
        }
        s = [o optStringWithNSString:@"additiveProductName" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.additive"] withNSString:s];
        }
        so = [o optJSONObjectWithNSString:@"caloricDensity"];
        if (so != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.caloric_density"] withNSString:[CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:so withRAREUTCharArray:sb]];
        }
        oo = [o optJSONObjectWithNSString:@"routeofAdministration"];
        if (o != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.route_of_administration"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
        }
        a = [o optJSONArrayWithNSString:@"administration"];
        len = (a == nil) ? 0 : [a length];
        if (len > 0) {
          [CCPBVFHIRFHIRUtils writeTableSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.administration"]];
          for (int i = 0; i < len; i++) {
            [self writeAdministrationWithJavaIoWriter:w withRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i] withRAREUTCharArray:sb];
          }
          [CCPBVFHIRFHIRUtils writeTableSectionFinishWithJavaIoWriter:w];
        }
        oo = [o optJSONObjectWithNSString:@"maxVolumeToDeliver"];
        if (oo != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.max_volume_to_deliver"] withNSString:[CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:oo withRAREUTCharArray:sb]];
        }
        s = [o optStringWithNSString:@"administrationInstruction" withNSString:nil];
        if (s != nil) {
          [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.instructions"] withNSString:s];
        }
        [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
        [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
      }
      if ((div != nil) && [status isEqual:@"additional"]) {
        [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:YES withBoolean:NO];
      }
    }
    else {
      [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:YES withBoolean:YES];
    }
  }
  (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:@"\n</body></html>"];
}

- (void)writeScheduleWithJavaIoWriter:(JavaIoWriter *)w
                  withRAREUTJSONArray:(RAREUTJSONArray *)a
                  withRAREUTCharArray:(RAREUTCharArray *)sb {
  int len = (a == nil) ? 0 : [a length];
  if (len == 1) {
    (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
    (void) [CCPBVFHIRFHIRUtils getTimingWithRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:0] withRAREUTCharArray:sb];
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.schedule"] withNSString:[sb description]];
  }
  else if (len > 1) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.schedule"] withNSString:@""];
    [CCPBVFHIRFHIRUtils writeListStartWithJavaIoWriter:w];
    for (int i = 0; i < len; i++) {
      (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
      (void) [CCPBVFHIRFHIRUtils getTimingWithRAREUTJSONObject:[((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i] withRAREUTCharArray:sb];
      [CCPBVFHIRFHIRUtils writeListValueWithJavaIoWriter:w withNSString:[sb description]];
    }
    [CCPBVFHIRFHIRUtils writeListFinishWithJavaIoWriter:w];
  }
}

- (void)writeNutruentOrTextureWithJavaIoWriter:(JavaIoWriter *)w
                          withRAREUTJSONObject:(RAREUTJSONObject *)o
                           withRAREUTCharArray:(RAREUTCharArray *)sb
                                   withBoolean:(BOOL)nutrient
                                   withBoolean:(BOOL)onlyOne {
  if (onlyOne) {
    [CCPBVFHIRFHIRUtils writeSubSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:nutrient ? @"bv.text.nutrients" : @"bv.text.textures"]];
  }
  else {
    [CCPBVFHIRFHIRUtils writeSubSubSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:nutrient ? @"bv.text.nutrient" : @"bv.text.texture"]];
  }
  [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
  RAREUTJSONObject *oo = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:@"modifier"];
  if (oo != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.modifier"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
  }
  if (nutrient) {
    oo = [o optJSONObjectWithNSString:@"amount"];
    if (oo != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.quantity"] withNSString:[CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:oo withRAREUTCharArray:sb]];
    }
  }
  else {
    oo = [o optJSONObjectWithNSString:@"foodType"];
    if (oo != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.food_type"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
    }
  }
  [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
  [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
}

- (void)writeSupplimentWithJavaIoWriter:(JavaIoWriter *)w
                   withRAREUTJSONObject:(RAREUTJSONObject *)o
                    withRAREUTCharArray:(RAREUTCharArray *)sb
                            withBoolean:(BOOL)onlyOne {
  if (!onlyOne) {
    [CCPBVFHIRFHIRUtils writeSubSubSectionStartWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.supplement"]];
  }
  [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
  (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
  RAREUTJSONObject *oo = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:@"type"];
  if (oo != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.type"] withNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo]];
  }
  NSString *s = [o optStringWithNSString:@"productName" withNSString:nil];
  if (s != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.product_name"] withNSString:s];
  }
  [self writeScheduleWithJavaIoWriter:w withRAREUTJSONArray:[o optJSONArrayWithNSString:@"schedule"] withRAREUTCharArray:sb];
  oo = [o optJSONObjectWithNSString:@"quantity"];
  if (oo != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.quantity"] withNSString:[CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:oo withRAREUTCharArray:sb]];
  }
  s = [o optStringWithNSString:@"instruction" withNSString:nil];
  if (s != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.instructions"] withNSString:s];
  }
  [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
  [CCPBVFHIRFHIRUtils writeSectionEndWithJavaIoWriter:w];
}

- (void)writeAdministrationWithJavaIoWriter:(JavaIoWriter *)w
                       withRAREUTJSONObject:(RAREUTJSONObject *)o
                        withRAREUTCharArray:(RAREUTCharArray *)sb {
  [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
  (void) [((RAREUTCharArray *) nil_chk(sb)) setLengthWithInt:0];
  RAREUTJSONObject *oo = [((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:@"schedule"];
  if (oo != nil) {
    (void) [sb setLengthWithInt:0];
    (void) [CCPBVFHIRFHIRUtils getTimingWithRAREUTJSONObject:oo withRAREUTCharArray:sb];
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.schedule"] withNSString:[sb description]];
  }
  oo = [o optJSONObjectWithNSString:@"quantity"];
  if (oo != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.quantity"] withNSString:[CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:oo withRAREUTCharArray:sb]];
  }
  NSString *s = nil;
  oo = [o optJSONObjectWithNSString:@"rateQuantity"];
  if (oo != nil) {
    s = [CCPBVFHIRFHIRUtils getQuantityWithRAREUTJSONObject:oo withRAREUTCharArray:sb];
  }
  else {
    oo = [o optJSONObjectWithNSString:@"rateRatio"];
    if (oo != nil) {
      s = [CCPBVFHIRFHIRUtils getRatioWithRAREUTJSONObject:oo withRAREUTCharArray:sb];
    }
  }
  if (s != nil) {
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[self getResourceAsStringWithNSString:@"bv.text.rate"] withNSString:s];
  }
  [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
}

- (void)listWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  RAREActionLink *l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID] } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)processEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                        withJavaIoWriter:(JavaIoWriter *)w
                     withRAREUTCharArray:(RAREUTCharArray *)ca
                       withNSObjectArray:(IOSObjectArray *)parms {
  RAREUTJSONObject *o;
  BOOL parsed = NO;
  do {
    NSString *type = [CCPBVFHIROrders TYPE_NUTRITION];
    NSString *typeld = [NSString stringWithFormat:@"%@_%@", type, [self getIDWithRAREUTJSONObject:entry_]];
    NSString *ordered_item = [self getOrderedItemWithRAREUTJSONObject:entry_ withRAREUTCharArray:ca];
    if (ordered_item == nil) {
      if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) isDebugMode]) {
        ordered_item = [CCPBVFHIRaFHIRemoteService MISSING_INVALID];
      }
      else {
        @throw [self missingRequiredDataWithNSString:@"oralDiet|enteralFormula||supplement" withNSString:[self getIDWithRAREUTJSONObject:entry_]];
      }
    }
    NSString *directions = @"";
    o = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"oralDiet"];
    if (o != nil) {
      directions = [o optStringWithNSString:@"instruction"];
      if (o != nil) {
        NSString *s = [o optStringWithNSString:@"instruction" withNSString:nil];
        if (s != nil) {
          (void) [((RAREUTCharArray *) nil_chk(ca)) setLengthWithInt:0];
          (void) [ca appendWithNSString:directions];
          if ([ca sequenceLength] > 0) {
            (void) [ca appendWithNSString:@"; "];
          }
          (void) [ca appendWithNSString:s];
          directions = [ca description];
        }
      }
    }
    NSString *status = [entry_ optStringWithNSString:@"status" withNSString:nil];
    NSString *providerld = nil;
    NSString *provider = nil;
    o = [entry_ optJSONObjectWithNSString:@"orderer"];
    if (o != nil) {
      providerld = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getIDWithNSString:[o optStringWithNSString:@"reference"] withBoolean:NO];
      provider = [o optStringWithNSString:@"display"];
    }
    if (jw != nil) {
      (void) [jw object];
      (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"type"])) object];
      (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:typeld])) keyWithNSString:@"value"])) valueWithId:type];
      (void) [jw endObject];
      (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"ordered_item"])) valueWithId:ordered_item];
      if (status != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"status"])) valueWithId:status];
      }
      if (directions != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"directions"])) valueWithId:directions];
      }
      if (provider != nil) {
        if (providerld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:providerld])) keyWithNSString:@"value"])) valueWithId:provider];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"provider"])) valueWithId:provider];
        }
      }
      (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"category"])) valueWithId:CCPBVFHIROrders_NutritionOrders_category_];
      (void) [jw endObject];
    }
    else {
      if (type != nil) {
        if (typeld != nil) {
          [((JavaIoWriter *) nil_chk(w)) writeWithNSString:typeld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:type withRAREUTCharArray:ca];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) '^'];
      if (ordered_item != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:ordered_item withRAREUTCharArray:ca];
      }
      [w writeWithNSString:@"^^^^^^^"];
      if (status != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:status withRAREUTCharArray:ca];
      }
      [w writeWithNSString:@"^^"];
      if (directions != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:directions withRAREUTCharArray:ca];
      }
      [w writeWithNSString:@"^"];
      [w writeWithNSString:CCPBVFHIROrders_NutritionOrders_category_];
      [w writeWithNSString:@"^^^"];
      if (provider != nil) {
        if (providerld != nil) {
          [w writeWithNSString:providerld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:provider withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) 0x000a];
    }
    parsed = YES;
  }
  while (NO);
  if (!parsed) {
    [self debugLogWithNSString:[NSString stringWithFormat:@"Could not parse entry:\n%@", [((RAREUTJSONObject *) nil_chk(entry_)) toStringWithInt:2]]];
  }
}

- (NSString *)getOrderedItemWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                             withRAREUTCharArray:(RAREUTCharArray *)ca {
  RAREUTJSONObject *o = [((RAREUTJSONObject *) nil_chk(entry_)) optJSONObjectWithNSString:@"oralDiet"];
  if (o != nil) {
    (void) [((RAREUTCharArray *) nil_chk(ca)) setLengthWithInt:0];
    (void) [CCPBVFHIRFHIRUtils concatBestMedicalTextWithRAREUTJSONArray:[o optJSONArrayWithNSString:@"type"] withNSString:nil withRAREUTCharArray:ca];
    return [ca description];
  }
  o = [entry_ optJSONObjectWithNSString:@"enteralFormula"];
  if (o != nil) {
    NSString *s = [o optStringWithNSString:@"baseFormulaProductName" withNSString:nil];
    if (s != nil) {
      return s;
    }
    RAREUTJSONObject *oo = [o optJSONObjectWithNSString:@"baseFormulaType"];
    if (oo != nil) {
      return [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:oo];
    }
    return [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.text.external_formula"];
  }
  RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"supplement"];
  int len = (a == nil) ? 0 : [a length];
  if (len > 0) {
    (void) [((RAREUTCharArray *) nil_chk(ca)) setLengthWithInt:0];
    for (int i = 0; i < len; i++) {
      o = [((RAREUTJSONArray *) nil_chk(a)) getJSONObjectWithInt:i];
      if (ca->_length_ > 0) {
        (void) [ca appendWithNSString:@"; "];
      }
      NSString *s = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"productName"];
      if (s == nil) {
        s = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[o optJSONObjectWithNSString:@"type"]];
      }
      if (s != nil) {
        (void) [ca appendWithNSString:s];
      }
    }
    if (ca->_length_ > 0) {
      return [ca description];
    }
    return [self getResourceAsStringWithNSString:@"bv.text.nutritional_supplements"];
  }
  return [self getResourceAsStringWithNSString:@"bv.text.nutrition_order"];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "writeScheduleWithJavaIoWriter:withRAREUTJSONArray:withRAREUTCharArray:", NULL, "V", 0x0, "JavaIoIOException" },
    { "writeNutruentOrTextureWithJavaIoWriter:withRAREUTJSONObject:withRAREUTCharArray:withBoolean:withBoolean:", NULL, "V", 0x0, "JavaIoIOException" },
    { "writeSupplimentWithJavaIoWriter:withRAREUTJSONObject:withRAREUTCharArray:withBoolean:", NULL, "V", 0x0, "JavaIoIOException" },
    { "writeAdministrationWithJavaIoWriter:withRAREUTJSONObject:withRAREUTCharArray:", NULL, "V", 0x0, "JavaIoIOException" },
    { "listWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "processEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "getOrderedItemWithRAREUTJSONObject:withRAREUTCharArray:", NULL, "LNSString", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "category_", NULL, 0x8, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIROrders_NutritionOrders = { "NutritionOrders", "com.sparseware.bellavista.external.fhir", "Orders", 0x9, 8, methods, 1, fields, 0, NULL};
  return &_CCPBVFHIROrders_NutritionOrders;
}

@end
