//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/external/fhir/Vitals.java
//
//  Created by decoteaud on 2/17/16.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/exception/ApplicationException.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/scripting/Functions.h"
#include "com/appnativa/util/CharArray.h"
#include "com/appnativa/util/SNumber.h"
#include "com/appnativa/util/json/JSONArray.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/appnativa/util/json/JSONWriter.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/Settings.h"
#include "com/sparseware/bellavista/external/ActionLinkEx.h"
#include "com/sparseware/bellavista/external/fhir/FHIRServer.h"
#include "com/sparseware/bellavista/external/fhir/FHIRUtils.h"
#include "com/sparseware/bellavista/external/fhir/Vitals.h"
#include "com/sparseware/bellavista/external/fhir/aFHIRemoteService.h"
#include "com/sparseware/bellavista/service/ContentWriter.h"
#include "com/sparseware/bellavista/service/HttpHeaders.h"
#include "com/sparseware/bellavista/service/aRemoteService.h"
#include "com/sparseware/bellavista/service/iHttpConnection.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/PrintStream.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation CCPBVFHIRVitals

static BOOL CCPBVFHIRVitals_searchByDateSupported_;
static BOOL CCPBVFHIRVitals_searchByCategorySupported_;
static BOOL CCPBVFHIRVitals_hasVitals_;
static JavaUtilHashSet * CCPBVFHIRVitals_bpCodes_;
static JavaUtilHashMap * CCPBVFHIRVitals_bpSysCodes_;
static JavaUtilHashMap * CCPBVFHIRVitals_bpDysCodes_;
static JavaUtilHashSet * CCPBVFHIRVitals_bpComponents_;
static JavaUtilHashSet * CCPBVFHIRVitals_weightCodes_;
static JavaUtilHashSet * CCPBVFHIRVitals_heightCodes_;
static JavaUtilHashMap * CCPBVFHIRVitals_vitalCodes_;
static BOOL CCPBVFHIRVitals_ignoreObservWithMissingCode_ = YES;
static BOOL CCPBVFHIRVitals_ignoreObservWithoutLoncOrHL7Code_ = YES;
static IOSObjectArray * CCPBVFHIRVitals_COLUMN_NAMES_;
static NSString * CCPBVFHIRVitals_searchParamsEx_;

+ (BOOL)searchByDateSupported {
  return CCPBVFHIRVitals_searchByDateSupported_;
}

+ (BOOL *)searchByDateSupportedRef {
  return &CCPBVFHIRVitals_searchByDateSupported_;
}

+ (BOOL)searchByCategorySupported {
  return CCPBVFHIRVitals_searchByCategorySupported_;
}

+ (BOOL *)searchByCategorySupportedRef {
  return &CCPBVFHIRVitals_searchByCategorySupported_;
}

+ (BOOL)hasVitals {
  return CCPBVFHIRVitals_hasVitals_;
}

+ (BOOL *)hasVitalsRef {
  return &CCPBVFHIRVitals_hasVitals_;
}

+ (JavaUtilHashSet *)bpCodes {
  return CCPBVFHIRVitals_bpCodes_;
}

+ (void)setBpCodes:(JavaUtilHashSet *)bpCodes {
  CCPBVFHIRVitals_bpCodes_ = bpCodes;
}

+ (JavaUtilHashMap *)bpSysCodes {
  return CCPBVFHIRVitals_bpSysCodes_;
}

+ (void)setBpSysCodes:(JavaUtilHashMap *)bpSysCodes {
  CCPBVFHIRVitals_bpSysCodes_ = bpSysCodes;
}

+ (JavaUtilHashMap *)bpDysCodes {
  return CCPBVFHIRVitals_bpDysCodes_;
}

+ (void)setBpDysCodes:(JavaUtilHashMap *)bpDysCodes {
  CCPBVFHIRVitals_bpDysCodes_ = bpDysCodes;
}

+ (JavaUtilHashSet *)bpComponents {
  return CCPBVFHIRVitals_bpComponents_;
}

+ (void)setBpComponents:(JavaUtilHashSet *)bpComponents {
  CCPBVFHIRVitals_bpComponents_ = bpComponents;
}

+ (JavaUtilHashSet *)weightCodes {
  return CCPBVFHIRVitals_weightCodes_;
}

+ (void)setWeightCodes:(JavaUtilHashSet *)weightCodes {
  CCPBVFHIRVitals_weightCodes_ = weightCodes;
}

+ (JavaUtilHashSet *)heightCodes {
  return CCPBVFHIRVitals_heightCodes_;
}

+ (void)setHeightCodes:(JavaUtilHashSet *)heightCodes {
  CCPBVFHIRVitals_heightCodes_ = heightCodes;
}

+ (JavaUtilHashMap *)vitalCodes {
  return CCPBVFHIRVitals_vitalCodes_;
}

+ (void)setVitalCodes:(JavaUtilHashMap *)vitalCodes {
  CCPBVFHIRVitals_vitalCodes_ = vitalCodes;
}

+ (BOOL)ignoreObservWithMissingCode {
  return CCPBVFHIRVitals_ignoreObservWithMissingCode_;
}

+ (BOOL *)ignoreObservWithMissingCodeRef {
  return &CCPBVFHIRVitals_ignoreObservWithMissingCode_;
}

+ (BOOL)ignoreObservWithoutLoncOrHL7Code {
  return CCPBVFHIRVitals_ignoreObservWithoutLoncOrHL7Code_;
}

+ (BOOL *)ignoreObservWithoutLoncOrHL7CodeRef {
  return &CCPBVFHIRVitals_ignoreObservWithoutLoncOrHL7Code_;
}

+ (IOSObjectArray *)COLUMN_NAMES {
  return CCPBVFHIRVitals_COLUMN_NAMES_;
}

+ (void)setCOLUMN_NAMES:(IOSObjectArray *)COLUMN_NAMES {
  CCPBVFHIRVitals_COLUMN_NAMES_ = COLUMN_NAMES;
}

+ (NSString *)searchParamsEx {
  return CCPBVFHIRVitals_searchParamsEx_;
}

+ (void)setSearchParamsEx:(NSString *)searchParamsEx {
  CCPBVFHIRVitals_searchParamsEx_ = searchParamsEx;
}

- (id)init {
  if (self = [super initWithNSString:@"Observation"]) {
    if (CCPBVFHIRVitals_COLUMN_NAMES_ == nil) {
      CCPBVFHIRVitals_COLUMN_NAMES_ = [IOSObjectArray arrayWithObjects:(id[]){ @"date", @"vital", @"result", @"unit", @"range", @"sort_order", @"result_id" } count:7 type:[IOSClass classWithClass:[NSString class]]];
      CCPBVFHIRFHIRServer_FHIRResource *r = [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceWithNSString:resourceName_];
      CCPBVFHIRVitals_hasVitals_ = r != nil;
      RAREUTJSONArray *a = (r == nil) ? nil : r->searchParams_;
      CCPBVFHIRVitals_searchByDateSupported_ = (a == nil) ? NO : [a findJSONObjectIndexWithNSString:@"name" withNSString:@"date" withInt:0] != -1;
      CCPBVFHIRVitals_searchByCategorySupported_ = (a == nil) ? NO : [a findJSONObjectIndexWithNSString:@"name" withNSString:@"category" withInt:0] != -1;
      CCPBVFHIRVitals_searchParamsEx_ = (NSString *) check_class_cast([((CCPBVSettings_Server *) nil_chk([server_ getServerConfig])) optWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"fhir", @"vitals", @"search_params" } count:3 type:[IOSClass classWithClass:[NSString class]]]], [NSString class]);
    }
    searchParams_ = CCPBVFHIRVitals_searchParamsEx_;
    columnNames_ = CCPBVFHIRVitals_COLUMN_NAMES_;
  }
  return self;
}

- (void)listWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [self listWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers withInt:-1];
}

- (void)listWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                 withCCPBVActionPath:(CCPBVActionPath *)path
               withJavaIoInputStream:(JavaIoInputStream *)data
                withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
                             withInt:(int)days {
  if (!CCPBVFHIRVitals_hasVitals_) {
    [self dataNotAvailableWithCCPBViHttpConnection:conn withCCPBVActionPath:path withBoolean:YES withCCPBVHttpHeaders:headers withNSStringArray:columnNames_ withInt:1];
    return;
  }
  NSString *from = nil;
  NSString *to = nil;
  if ((days > 0) && CCPBVFHIRVitals_searchByDateSupported_ && prefixSearchSupported_) {
    JavaUtilCalendar *c = [JavaUtilCalendar getInstance];
    JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"lt"])) appendWithNSString:[CCPBVFHIRFHIRServer convertToServerDateWithJavaUtilCalendar:c withBoolean:NO]];
    to = [sb description];
    [c setWithInt:JavaUtilCalendar_DAY_OF_MONTH withInt:[((JavaUtilCalendar *) nil_chk(c)) getWithInt:JavaUtilCalendar_DAY_OF_MONTH] - days];
    [c setWithInt:JavaUtilCalendar_HOUR_OF_DAY withInt:0];
    [sb setLengthWithInt:0];
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"gt"])) appendWithNSString:[CCPBVFHIRFHIRServer convertToServerDateWithJavaUtilCalendar:c withBoolean:NO]];
    from = [sb description];
  }
  RAREActionLink *l;
  if (from == nil) {
    l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID], @"_count", @"500" } count:4 type:[IOSClass classWithClass:[NSString class]]]];
  }
  else {
    l = [self createSearchLinkWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"patient", [((CCPBVFHIRFHIRServer *) nil_chk(server_)) getPatientID], @"date", from, @"date", to } count:6 type:[IOSClass classWithClass:[NSString class]]]];
  }
  @try {
    id w = [CCPBVFHIRFHIRUtils createWriterWithCCPBVActionPath:path withCCPBVContentWriter:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withBoolean:YES];
    [self searchWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:w withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)documentWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                     withCCPBVActionPath:(CCPBVActionPath *)path
                   withJavaIoInputStream:(JavaIoInputStream *)data
                    withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  RAREActionLink *l = [self createReadLinkWithNSString:[((CCPBVActionPath *) nil_chk(path)) shift]];
  @try {
    [self readWithJavaIoReader:[((RAREActionLink *) nil_chk(l)) getReader] withId:[((id<CCPBViHttpConnection>) nil_chk(conn)) getContentWriter] withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  }
  @finally {
    [((RAREActionLink *) nil_chk(l)) close];
  }
}

- (void)readEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                 withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                     withJavaIoWriter:(JavaIoWriter *)w
                    withNSObjectArray:(IOSObjectArray *)params {
  if ([((NSString *) nil_chk([((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"resourceType"])) isEqual:@"DiagnosticReport"]) {
    [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:nil];
    RAREUTJSONObject *text = [entry_ optJSONObjectWithNSString:@"text"];
    if (text != nil) {
      [CCPBVFHIRFHIRUtils writeTextWithJavaIoWriter:w withRAREUTJSONObject:text withBoolean:NO withBoolean:YES];
    }
    else {
      (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:[self getResourceAsStringWithNSString:@"bv.text.blank_report"]];
    }
    [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
  }
  RAREUTJSONObject *o = [entry_ optJSONObjectWithNSString:@"valueAttachment"];
  if (o != nil) {
    [CCPBVFHIRFHIRUtils writeAttachmentWithRAREUTJSONObject:o withJavaIoWriter:w withBoolean:NO];
    return;
  }
  o = [entry_ optJSONObjectWithNSString:@"valueSampledData"];
  [CCPBVFHIRFHIRUtils writeHTMLDocumentStartWithJavaIoWriter:w withNSString:nil];
  if (o != nil) {
    CCPBVFHIRFHIRUtils_MedicalCode *mc = [CCPBVFHIRFHIRUtils getMedicalCodeWithRAREUTJSONArray:[o optJSONArrayWithNSString:@"coding"]];
    if (mc == nil) {
      NSString *text = [o optStringWithNSString:@"text" withNSString:nil];
      if (text != nil) {
        mc = [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:@"UNK" withNSString:nil withNSString:text withNSString:nil];
      }
    }
    if (mc != nil) {
      [CCPBVFHIRFHIRUtils writeDocumentTitleWithJavaIoWriter:w withNSString:[mc getBestText]];
    }
    [CCPBVFHIRFHIRUtils writeTableStartWithJavaIoWriter:w];
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[((CCPBVFHIRFHIRServer *) nil_chk(server_)) getResourceAsStringWithNSString:@"bv.text.origin"] withNSString:[o optStringWithNSString:@"origin"]];
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[server_ getResourceAsStringWithNSString:@"bv.text.period"] withNSString:[o optStringWithNSString:@"period"]];
    NSString *s = [o optStringWithNSString:@"factor" withNSString:nil];
    if (s != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[server_ getResourceAsStringWithNSString:@"bv.text.factor"] withNSString:s];
    }
    s = [o optStringWithNSString:@"lowerLimit" withNSString:nil];
    if (s != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[server_ getResourceAsStringWithNSString:@"bv.text.lower_limit"] withNSString:s];
    }
    s = [o optStringWithNSString:@"upperLimit" withNSString:nil];
    if (s != nil) {
      [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[server_ getResourceAsStringWithNSString:@"bv.text.upper_limit"] withNSString:s];
    }
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[server_ getResourceAsStringWithNSString:@"bv.text.dimensions"] withNSString:[o optStringWithNSString:@"dimensions"]];
    [CCPBVFHIRFHIRUtils writeTableValueWithJavaIoWriter:w withNSString:[server_ getResourceAsStringWithNSString:@"bv.text.values"] withNSString:[o optStringWithNSString:@"data"]];
    [CCPBVFHIRFHIRUtils writeTableFinishWithJavaIoWriter:w];
  }
  else {
    (void) [((JavaIoWriter *) nil_chk(w)) appendWithJavaLangCharSequence:[self getResourceAsStringWithNSString:@"bv.text.blank_report"]];
  }
  [CCPBVFHIRFHIRUtils writeHTMLDocumentFinishWithJavaIoWriter:w];
}

- (void)searchWithJavaIoReader:(JavaIoReader *)r
                        withId:(id)writer
          withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers
             withNSObjectArray:(IOSObjectArray *)params {
  JavaUtilHashMap *bpcomponents = [[JavaUtilHashMap alloc] init];
  JavaUtilArrayList *bps = [[JavaUtilArrayList alloc] init];
  [super searchWithJavaIoReader:r withId:writer withCCPBVHttpHeaders:headers withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ bps, bpcomponents } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (void)parsingCompleteWithRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                           withJavaIoWriter:(JavaIoWriter *)w
                        withRAREUTCharArray:(RAREUTCharArray *)ca
                          withNSObjectArray:(IOSObjectArray *)params {
  id<JavaUtilMap> bpcomponents = (JavaUtilHashMap *) check_class_cast(IOSObjectArray_Get(nil_chk(params), 1), [JavaUtilHashMap class]);
  if (![((id<JavaUtilMap>) nil_chk(bpcomponents)) isEmpty]) {
    for (RAREUTJSONObject * __strong o in nil_chk([bpcomponents values])) {
      [self processEntryExWithRAREUTJSONObject:o withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withJavaUtilList:nil withJavaUtilMap:nil];
    }
  }
}

- (void)processEntryWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                    withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                        withJavaIoWriter:(JavaIoWriter *)w
                     withRAREUTCharArray:(RAREUTCharArray *)ca
                       withNSObjectArray:(IOSObjectArray *)params {
  if (![((NSString *) nil_chk([((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"resourceType"])) isEqual:resourceName_]) {
    return;
  }
  id<JavaUtilList> bps = (id<JavaUtilList>) check_protocol_cast(IOSObjectArray_Get(nil_chk(params), 0), @protocol(JavaUtilList));
  id<JavaUtilMap> bpcomponents = (JavaUtilHashMap *) check_class_cast(IOSObjectArray_Get(params, 1), [JavaUtilHashMap class]);
  [self processEntryExWithRAREUTJSONObject:entry_ withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withJavaUtilList:bps withJavaUtilMap:bpcomponents];
  int foundIndex = -1;
  int len = [((id<JavaUtilList>) nil_chk(bps)) size];
  for (int i = 0; i < len; i++) {
    CCPBVFHIRVitals_BloodPressure *bp = [bps getWithInt:i];
    RAREUTJSONObject *o = [((CCPBVFHIRVitals_BloodPressure *) nil_chk(bp)) updateEntryWithJavaUtilMap:bpcomponents withBoolean:NO withRAREUTCharArray:ca];
    if (o != nil) {
      [self processEntryExWithRAREUTJSONObject:o withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withJavaUtilList:nil withJavaUtilMap:nil];
      foundIndex = i;
      break;
    }
  }
  if (foundIndex != -1l) {
    (void) [bps removeWithInt:foundIndex];
  }
}

- (void)processEntryExWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                      withRAREUTJSONWriter:(RAREUTJSONWriter *)jw
                          withJavaIoWriter:(JavaIoWriter *)w
                       withRAREUTCharArray:(RAREUTCharArray *)ca
                          withJavaUtilList:(id<JavaUtilList>)bps
                           withJavaUtilMap:(id<JavaUtilMap>)bpcomponents {
  RAREUTJSONObject *o;
  NSString *status = [((RAREUTJSONObject *) nil_chk(entry_)) optStringWithNSString:@"status"];
  if ([((NSString *) nil_chk(status)) isEqual:@"entered-in-error"] || [status isEqual:@"cancelled"]) {
    return;
  }
  BOOL parsed = NO;
  NSString *msg = nil;
  do {
    NSString *dateld = nil;
    NSString *date = nil;
    NSString *vitalld = nil;
    NSString *vital = nil;
    NSString *resultld = nil;
    NSString *resultldtext = nil;
    NSString *result = nil;
    NSString *unit = nil;
    NSString *range = nil;
    dateld = [self getIDWithRAREUTJSONObject:entry_];
    o = [entry_ optJSONObjectWithNSString:@"code"];
    RAREUTJSONArray *coding = (o == nil) ? nil : [o optJSONArrayWithNSString:@"coding"];
    CCPBVFHIRFHIRUtils_MedicalCode *mc = [CCPBVFHIRFHIRUtils getMedicalCodeWithRAREUTJSONArray:coding];
    if (mc == nil) {
      if (CCPBVFHIRVitals_ignoreObservWithMissingCode_) {
        parsed = YES;
        break;
      }
      NSString *text = (o == nil) ? nil : [o optStringWithNSString:@"text" withNSString:nil];
      if (text != nil) {
        mc = [[CCPBVFHIRFHIRUtils_MedicalCode alloc] initWithNSString:@"UNK" withNSString:nil withNSString:text withNSString:nil];
      }
      else {
        if (mc == nil) {
          if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) isDebugMode]) {
            mc = [CCPBVFHIRaFHIRemoteService missingInvalid];
          }
          else {
            @throw [self missingRequiredDataWithNSString:@"code" withNSString:dateld];
          }
        }
      }
    }
    if ((bpcomponents != nil) && (CCPBVFHIRVitals_bpComponents_ != nil) && [((CCPBVFHIRFHIRUtils_MedicalCode *) nil_chk(mc)) isOneOfWithJavaUtilSet:CCPBVFHIRVitals_bpComponents_]) {
      (void) [bpcomponents putWithId:dateld withId:entry_];
      parsed = YES;
      break;
    }
    if ((bps != nil) && [((CCPBVFHIRFHIRUtils_MedicalCode *) nil_chk(mc)) isOneOfWithJavaUtilSet:CCPBVFHIRVitals_bpCodes_]) {
      RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"component"];
      if ((a != nil) && ([a length] == 2)) {
        RAREUTJSONObject *o1 = [a getJSONObjectWithInt:0];
        RAREUTJSONObject *o2 = [a getJSONObjectWithInt:1];
        (void) [entry_ putWithNSString:@"valueQuantity" withJavaUtilMap:[CCPBVFHIRVitals_BloodPressure createValueWithRAREUTJSONObject:o1 withRAREUTJSONObject:o2 withRAREUTCharArray:ca]];
        (void) [entry_ removeWithNSString:@"component"];
        date = [self getDateTimeWithRAREUTJSONObject:o1];
        (void) [entry_ putWithNSString:@"appliesDateTime" withId:date];
      }
      else {
        a = [entry_ optJSONArrayWithNSString:@"related"];
        if ((a != nil) && ([a length] == 2)) {
          NSString *ref1 = [((RAREUTJSONObject *) nil_chk([((RAREUTJSONObject *) nil_chk([a getJSONObjectWithInt:0])) getJSONObjectWithNSString:@"target"])) optStringWithNSString:@"reference"];
          NSString *ref2 = [((RAREUTJSONObject *) nil_chk([((RAREUTJSONObject *) nil_chk([a getJSONObjectWithInt:1])) getJSONObjectWithNSString:@"target"])) optStringWithNSString:@"reference"];
          int n = [((NSString *) nil_chk(ref1)) lastIndexOf:'/'];
          if (n != -1) {
            ref1 = [ref1 substring:n + 1];
          }
          n = [((NSString *) nil_chk(ref2)) lastIndexOf:'/'];
          if (n != -1) {
            ref2 = [ref2 substring:n + 1];
          }
          RAREUTJSONObject *o1 = [((id<JavaUtilMap>) nil_chk(bpcomponents)) getWithId:ref1];
          RAREUTJSONObject *o2 = [bpcomponents getWithId:ref2];
          if ((o1 != nil) && (o2 != nil)) {
            (void) [entry_ putWithNSString:@"valueQuantity" withJavaUtilMap:[CCPBVFHIRVitals_BloodPressure createValueWithRAREUTJSONObject:o1 withRAREUTJSONObject:o2 withRAREUTCharArray:ca]];
            (void) [bpcomponents removeWithId:ref1];
            (void) [bpcomponents removeWithId:ref2];
          }
          else {
            [bps addWithId:[[CCPBVFHIRVitals_BloodPressure alloc] initWithRAREUTJSONObject:entry_ withNSString:ref1 withNSString:ref2]];
            parsed = YES;
            break;
          }
        }
      }
    }
    RAREUTJSONArray *contained = [entry_ optJSONArrayWithNSString:@"contained"];
    if ((contained != nil) && ([contained length] > 0)) {
      int len = [contained length];
      for (int i = 0; i < len; i++) {
        [self processEntryExWithRAREUTJSONObject:[contained getJSONObjectWithInt:i] withRAREUTJSONWriter:jw withJavaIoWriter:w withRAREUTCharArray:ca withJavaUtilList:bps withJavaUtilMap:bpcomponents];
      }
      parsed = YES;
      break;
    }
    date = [self getDateTimeWithRAREUTJSONObject:entry_];
    vital = [((RAREUTJSONObject *) nil_chk(o)) optStringWithNSString:@"text" withNSString:nil];
    if (vital == nil) {
      vital = [((CCPBVFHIRFHIRUtils_MedicalCode *) nil_chk(mc)) getBestText];
    }
    vitalld = (mc == nil) ? @"" : [mc getBestCode];
    o = [entry_ optJSONObjectWithNSString:@"valueQuantity"];
    if (o != nil) {
      unit = [o optStringWithNSString:@"units" withNSString:nil];
      result = [o optStringWithNSString:@"value"];
      if ([@"cel" equalsIgnoreCase:[o optStringWithNSString:@"code"]]) {
        float f = [RAREFunctions floatValueWithNSString:result];
        if (f > 0) {
          f = f * 1.8f + 32.0f;
          RAREUTSNumber *num = [[RAREUTSNumber alloc] initWithDouble:f];
          (void) [num setScaleWithInt:2];
          result = [num description];
        }
        unit = @"DegF";
      }
      NSString *comparator = [o optStringWithNSString:@"comparator" withNSString:nil];
      if (comparator != nil) {
        result = [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk(ca)) setWithNSString:comparator])) appendWithNSString:result])) description];
      }
    }
    else {
      result = [CCPBVFHIRFHIRUtils getValueWithRAREUTJSONObject:entry_ withBoolean:NO withRAREUTCharArray:ca];
    }
    RAREUTJSONArray *a = [entry_ optJSONArrayWithNSString:@"component"];
    if (a != nil) {
      NSString *s = [self getComponentsWithRAREUTJSONArray:a withRAREUTCharArray:ca];
      if (result == nil) {
        result = s;
      }
      else {
        result = [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk(ca)) setWithNSString:result])) appendWithNSString:@"; "])) appendWithNSString:s])) description];
      }
    }
    if (result == nil) {
      if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) isDebugMode]) {
        result = [CCPBVFHIRaFHIRemoteService MISSING_INVALID];
      }
      else {
        @throw [self missingRequiredDataWithNSString:@"result" withNSString:dateld];
      }
    }
    o = [entry_ optJSONObjectWithNSString:@"interpretation"];
    if (o != nil) {
      resultld = [CCPBVFHIRFHIRUtils getHL7FHIRCodeWithRAREUTJSONArray:[o optJSONArrayWithNSString:@"coding"]];
      resultldtext = [o optStringWithNSString:@"text" withNSString:nil];
      if ((resultldtext == nil) || ([resultldtext sequenceLength] == 0)) {
        resultldtext = resultld;
      }
    }
    a = [entry_ optJSONArrayWithNSString:@"referenceRange"];
    range = (a == nil) ? nil : [CCPBVFHIRFHIRUtils getRangeWithRAREUTJSONArray:a withBoolean:YES withRAREUTCharArray:ca];
    NSString *s = [((JavaUtilHashMap *) nil_chk(CCPBVFHIRVitals_vitalCodes_)) getWithId:vitalld];
    if (s != nil) {
      vitalld = s;
    }
    NSString *icolor = (resultld == nil) ? nil : [CCPBVFHIRFHIRUtils getInterpretationColorWithNSString:resultld];
    if ((result != nil) && ((icolor != nil) || (resultld != nil))) {
      (void) [((RAREUTCharArray *) nil_chk(ca)) setLengthWithInt:0];
      if (icolor != nil) {
        (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([ca appendWithNSString:@"{fgColor:"])) appendWithNSString:icolor])) appendWithNSString:@"}"];
      }
      (void) [ca appendWithNSString:result];
      if (resultld != nil) {
        (void) [((RAREUTCharArray *) nil_chk([((RAREUTCharArray *) nil_chk([ca appendWithNSString:@" ("])) appendWithNSString:resultldtext])) appendWithChar:')'];
      }
      result = [ca description];
    }
    if (jw != nil) {
      (void) [jw object];
      if (date != nil) {
        if (dateld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"date"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:dateld])) keyWithNSString:@"value"])) valueWithId:date];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"date"])) valueWithId:date];
        }
      }
      if (vital != nil) {
        if (vitalld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"vital"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:vitalld])) keyWithNSString:@"value"])) valueWithId:vital];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"vital"])) valueWithId:vital];
        }
      }
      if (result != nil) {
        if (resultld != nil) {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"result"])) object];
          (void) [((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"linkedData"])) valueWithId:resultld])) keyWithNSString:@"value"])) valueWithId:result];
          (void) [jw endObject];
        }
        else {
          (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"result"])) valueWithId:result];
        }
      }
      if (unit != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"unit"])) valueWithId:unit];
      }
      if (range != nil) {
        (void) [((RAREUTJSONWriter *) nil_chk([jw keyWithNSString:@"range"])) valueWithId:range];
      }
      (void) [jw endObject];
    }
    else {
      if (date != nil) {
        if (dateld != nil) {
          [((JavaIoWriter *) nil_chk(w)) writeWithNSString:dateld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:date withRAREUTCharArray:ca];
      }
      [((JavaIoWriter *) nil_chk(w)) writeWithInt:(unichar) '^'];
      if (vital != nil) {
        if (vitalld != nil) {
          [w writeWithNSString:vitalld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:vital withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (result != nil) {
        if (resultld != nil) {
          [w writeWithNSString:resultld];
          [w writeWithInt:(unichar) '|'];
        }
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:result withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (unit != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:unit withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      if (range != nil) {
        [CCPBVFHIRFHIRUtils writeQuotedStringIfNecessaryWithJavaIoWriter:w withNSString:range withRAREUTCharArray:ca];
      }
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) '^'];
      [w writeWithInt:(unichar) 0x000a];
    }
    parsed = YES;
  }
  while (NO);
  if (!parsed) {
    if (msg == nil) {
      msg = @"Could not parse entry:";
    }
    if ([((CCPBVFHIRFHIRServer *) nil_chk(server_)) isDebugMode]) {
      [server_ debugLogWithNSString:msg];
      [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:[entry_ toStringWithInt:2]];
    }
    else {
      @throw [[RAREApplicationException alloc] initWithNSString:[NSString stringWithFormat:@"%@\n%@", msg, [entry_ description]]];
    }
  }
}

- (void)most_recentWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                        withCCPBVActionPath:(CCPBVActionPath *)path
                      withJavaIoInputStream:(JavaIoInputStream *)data
                       withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [self listWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers withInt:7];
}

- (void)realtimeWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                     withCCPBVActionPath:(CCPBVActionPath *)path
                   withJavaIoInputStream:(JavaIoInputStream *)data
                    withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [self noDataWithCCPBViHttpConnection:conn withCCPBVActionPath:path withBoolean:YES withCCPBVHttpHeaders:headers];
}

- (void)summaryWithCCPBViHttpConnection:(id<CCPBViHttpConnection>)conn
                    withCCPBVActionPath:(CCPBVActionPath *)path
                  withJavaIoInputStream:(JavaIoInputStream *)data
                   withCCPBVHttpHeaders:(CCPBVHttpHeaders *)headers {
  [self listWithCCPBViHttpConnection:conn withCCPBVActionPath:path withJavaIoInputStream:data withCCPBVHttpHeaders:headers withInt:7];
}

- (NSString *)getComponentsWithRAREUTJSONArray:(RAREUTJSONArray *)components
                           withRAREUTCharArray:(RAREUTCharArray *)ca {
  int len = [((RAREUTJSONArray *) nil_chk(components)) length];
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  for (int i = 0; i < len; i++) {
    RAREUTJSONObject *o = [components getJSONObjectWithInt:i];
    NSString *s = [CCPBVFHIRFHIRUtils getValueWithRAREUTJSONObject:o withBoolean:NO withRAREUTCharArray:ca];
    if (s == nil) {
      continue;
    }
    if (i > 0) {
      (void) [sb appendWithNSString:@";"];
    }
    (void) [sb appendWithNSString:[CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[((RAREUTJSONObject *) nil_chk(o)) optJSONObjectWithNSString:@"code"]]];
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:'='])) appendWithNSString:s];
  }
  return [sb description];
}

+ (void)initialize {
  if (self == [CCPBVFHIRVitals class]) {
    CCPBVFHIRVitals_bpCodes_ = [[JavaUtilHashSet alloc] initWithInt:2];
    CCPBVFHIRVitals_bpSysCodes_ = [[JavaUtilHashMap alloc] initWithInt:2];
    CCPBVFHIRVitals_bpDysCodes_ = [[JavaUtilHashMap alloc] initWithInt:2];
    CCPBVFHIRVitals_bpComponents_ = [[JavaUtilHashSet alloc] initWithInt:4];
    CCPBVFHIRVitals_weightCodes_ = [[JavaUtilHashSet alloc] initWithInt:2];
    CCPBVFHIRVitals_heightCodes_ = [[JavaUtilHashSet alloc] initWithInt:2];
    CCPBVFHIRVitals_vitalCodes_ = [[JavaUtilHashMap alloc] init];
    {
      [CCPBVFHIRVitals_bpCodes_ addWithId:@"75367002"];
      [CCPBVFHIRVitals_bpCodes_ addWithId:@"55284-4"];
      (void) [CCPBVFHIRVitals_bpSysCodes_ putWithId:@"271649006" withId:@"271650006"];
      (void) [CCPBVFHIRVitals_bpSysCodes_ putWithId:@"8480-6" withId:@"8462-4"];
      (void) [CCPBVFHIRVitals_bpSysCodes_ putWithId:@"8459-0" withId:@"8453-3"];
      (void) [CCPBVFHIRVitals_bpDysCodes_ putWithId:@"271650006" withId:@"271649006"];
      (void) [CCPBVFHIRVitals_bpDysCodes_ putWithId:@"8462-4" withId:@"8480-6"];
      (void) [CCPBVFHIRVitals_bpDysCodes_ putWithId:@"8453-3" withId:@"8459-0"];
      [CCPBVFHIRVitals_bpComponents_ addWithId:@"271649006"];
      [CCPBVFHIRVitals_bpComponents_ addWithId:@"8480-6"];
      [CCPBVFHIRVitals_bpComponents_ addWithId:@"271650006"];
      [CCPBVFHIRVitals_bpComponents_ addWithId:@"8462-4"];
      [CCPBVFHIRVitals_bpComponents_ addWithId:@"8459-0"];
      [CCPBVFHIRVitals_bpComponents_ addWithId:@"8453-3"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"75367002" withId:@"bp"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"55284-4" withId:@"bp"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"78564009" withId:@"pulse"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"54718008" withId:@"pulse"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8867-4" withId:@"pulse"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"415945006" withId:@"temp"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8310-5" withId:@"temp"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8331-1" withId:@"temp"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"27113001" withId:@"wt"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"3141-9" withId:@"wt"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"50373000" withId:@"ht"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8302-2" withId:@"ht"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8890-6" withId:@"hr"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8867-4" withId:@"hr"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"8478-0" withId:@"map"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"59408-5" withId:@"spo2"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"2710-2" withId:@"spo2"];
      (void) [CCPBVFHIRVitals_vitalCodes_ putWithId:@"9279-1" withId:@"resp"];
    }
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "listWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "listWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:withInt:", NULL, "V", 0x1, "JavaIoIOException" },
    { "documentWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "readEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "searchWithJavaIoReader:withId:withCCPBVHttpHeaders:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "parsingCompleteWithRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x84, "JavaIoIOException" },
    { "processEntryWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withNSObjectArray:", NULL, "V", 0x81, "JavaIoIOException" },
    { "processEntryExWithRAREUTJSONObject:withRAREUTJSONWriter:withJavaIoWriter:withRAREUTCharArray:withJavaUtilList:withJavaUtilMap:", NULL, "V", 0x4, "JavaIoIOException" },
    { "most_recentWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "realtimeWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "summaryWithCCPBViHttpConnection:withCCPBVActionPath:withJavaIoInputStream:withCCPBVHttpHeaders:", NULL, "V", 0x1, "JavaIoIOException" },
    { "getComponentsWithRAREUTJSONArray:withRAREUTCharArray:", NULL, "LNSString", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "searchByDateSupported_", NULL, 0xc, "Z" },
    { "searchByCategorySupported_", NULL, 0xc, "Z" },
    { "hasVitals_", NULL, 0xc, "Z" },
    { "bpCodes_", NULL, 0xc, "LJavaUtilHashSet" },
    { "bpSysCodes_", NULL, 0xc, "LJavaUtilHashMap" },
    { "bpDysCodes_", NULL, 0xc, "LJavaUtilHashMap" },
    { "bpComponents_", NULL, 0xc, "LJavaUtilHashSet" },
    { "weightCodes_", NULL, 0xc, "LJavaUtilHashSet" },
    { "heightCodes_", NULL, 0xc, "LJavaUtilHashSet" },
    { "vitalCodes_", NULL, 0xc, "LJavaUtilHashMap" },
    { "ignoreObservWithMissingCode_", NULL, 0xc, "Z" },
    { "ignoreObservWithoutLoncOrHL7Code_", NULL, 0xc, "Z" },
    { "COLUMN_NAMES_", NULL, 0xc, "LIOSObjectArray" },
    { "searchParamsEx_", NULL, 0xa, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIRVitals = { "Vitals", "com.sparseware.bellavista.external.fhir", NULL, 0x1, 12, methods, 14, fields, 0, NULL};
  return &_CCPBVFHIRVitals;
}

@end
@implementation CCPBVFHIRVitals_BloodPressure

- (id)initWithRAREUTJSONObject:(RAREUTJSONObject *)entry_
                  withNSString:(NSString *)reference1
                  withNSString:(NSString *)reference2 {
  if (self = [super init]) {
    self->entry__ = entry_;
    self->reference1_ = reference1;
    self->reference2_ = reference2;
  }
  return self;
}

- (RAREUTJSONObject *)updateEntryWithJavaUtilMap:(id<JavaUtilMap>)components
                                     withBoolean:(BOOL)finalPass
                             withRAREUTCharArray:(RAREUTCharArray *)ca {
  RAREUTJSONObject *e1 = [((id<JavaUtilMap>) nil_chk(components)) getWithId:reference1_];
  RAREUTJSONObject *e2 = [components getWithId:reference2_];
  if (!finalPass && ((e1 == nil) || (e2 == nil))) {
    return nil;
  }
  if ((e1 == nil) && (e2 == nil)) {
    [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) debugLogWithNSString:[NSString stringWithFormat:@"Could not find references for BP:%@", [((RAREUTJSONObject *) nil_chk(entry__)) optStringWithNSString:@"id"]]];
    return nil;
  }
  if (e1 == nil) {
    [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) debugLogWithNSString:[NSString stringWithFormat:@"Could not find reference: %@for BP:%@", reference1_, [((RAREUTJSONObject *) nil_chk(entry__)) optStringWithNSString:@"id"]]];
    return e2;
  }
  if (e2 == nil) {
    [((CCPBVFHIRFHIRServer *) nil_chk([CCPBVFHIRFHIRServer getInstance])) debugLogWithNSString:[NSString stringWithFormat:@"Could not find reference: %@for BP:%@", reference2_, [((RAREUTJSONObject *) nil_chk(entry__)) optStringWithNSString:@"id"]]];
    return e1;
  }
  (void) [components removeWithId:reference1_];
  (void) [components removeWithId:reference2_];
  (void) [((RAREUTJSONObject *) nil_chk(entry__)) putWithNSString:@"valueQuantity" withJavaUtilMap:[CCPBVFHIRVitals_BloodPressure createValueWithRAREUTJSONObject:e1 withRAREUTJSONObject:e2 withRAREUTCharArray:ca]];
  return entry__;
}

+ (RAREUTJSONObject *)createValueWithRAREUTJSONObject:(RAREUTJSONObject *)e1
                                 withRAREUTJSONObject:(RAREUTJSONObject *)e2
                                  withRAREUTCharArray:(RAREUTCharArray *)ca {
  RAREUTJSONObject *o = [[RAREUTJSONObject alloc] init];
  RAREUTJSONObject *sys = nil;
  RAREUTJSONObject *dys = nil;
  RAREUTJSONArray *coding = [((RAREUTJSONObject *) nil_chk([((RAREUTJSONObject *) nil_chk(e1)) getJSONObjectWithNSString:@"code"])) optJSONArrayWithNSString:@"coding"];
  NSString *code = [CCPBVFHIRFHIRUtils getBestMedicalCodeWithRAREUTJSONArray:coding];
  if ([((JavaUtilHashMap *) nil_chk([CCPBVFHIRVitals bpSysCodes])) containsKeyWithId:code]) {
    sys = e1;
  }
  else {
    dys = e1;
  }
  coding = [((RAREUTJSONObject *) nil_chk([((RAREUTJSONObject *) nil_chk(e2)) getJSONObjectWithNSString:@"code"])) optJSONArrayWithNSString:@"coding"];
  code = [CCPBVFHIRFHIRUtils getBestMedicalCodeWithRAREUTJSONArray:coding];
  if ([((JavaUtilHashMap *) nil_chk([CCPBVFHIRVitals bpDysCodes])) containsKeyWithId:code]) {
    dys = e2;
  }
  else {
    sys = e2;
  }
  NSString *s = [CCPBVFHIRFHIRUtils getValueWithRAREUTJSONObject:sys withBoolean:NO withRAREUTCharArray:ca];
  NSString *d = [CCPBVFHIRFHIRUtils getValueWithRAREUTJSONObject:dys withBoolean:NO withRAREUTCharArray:ca];
  if (s == nil) {
    s = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[((RAREUTJSONObject *) nil_chk(sys)) optJSONObjectWithNSString:@"dataAbsentReason"]];
  }
  if (d == nil) {
    d = [CCPBVFHIRFHIRUtils getBestMedicalTextWithRAREUTJSONObject:[((RAREUTJSONObject *) nil_chk(dys)) optJSONObjectWithNSString:@"dataAbsentReason"]];
  }
  (void) [o putWithNSString:@"value" withId:[NSString stringWithFormat:@"%@/%@", s, d]];
  return o;
}

- (void)copyAllFieldsTo:(CCPBVFHIRVitals_BloodPressure *)other {
  [super copyAllFieldsTo:other];
  other->entry__ = entry__;
  other->reference1_ = reference1_;
  other->reference2_ = reference2_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "updateEntryWithJavaUtilMap:withBoolean:withRAREUTCharArray:", NULL, "LRAREUTJSONObject", 0x1, "JavaIoIOException" },
    { "createValueWithRAREUTJSONObject:withRAREUTJSONObject:withRAREUTCharArray:", NULL, "LRAREUTJSONObject", 0x9, "JavaIoIOException" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "entry__", "entry", 0x1, "LRAREUTJSONObject" },
    { "reference1_", NULL, 0x1, "LNSString" },
    { "reference2_", NULL, 0x1, "LNSString" },
  };
  static J2ObjcClassInfo _CCPBVFHIRVitals_BloodPressure = { "BloodPressure", "com.sparseware.bellavista.external.fhir", "Vitals", 0x8, 2, methods, 3, fields, 0, NULL};
  return &_CCPBVFHIRVitals_BloodPressure;
}

@end
