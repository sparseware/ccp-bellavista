//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/Vitals.java
//
//  Created by decoteaud on 3/12/15.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/iPlatformAppContext.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/spot/Chart.h"
#include "com/appnativa/rare/spot/Plot.h"
#include "com/appnativa/rare/ui/ColorUtils.h"
#include "com/appnativa/rare/ui/RenderableDataItem.h"
#include "com/appnativa/rare/ui/UIColor.h"
#include "com/appnativa/rare/ui/UIScreen.h"
#include "com/appnativa/rare/ui/chart/ChartDataItem.h"
#include "com/appnativa/rare/ui/chart/ChartDefinition.h"
#include "com/appnativa/rare/util/SubItemComparator.h"
#include "com/appnativa/rare/viewer/ChartViewer.h"
#include "com/appnativa/rare/viewer/StackPaneViewer.h"
#include "com/appnativa/rare/viewer/TableViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/viewer/iViewer.h"
#include "com/appnativa/rare/widget/aGroupableButton.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/util/MutableInteger.h"
#include "com/appnativa/util/json/JSONObject.h"
#include "com/sparseware/bellavista/ActionPath.h"
#include "com/sparseware/bellavista/SummaryVitalsHandler.h"
#include "com/sparseware/bellavista/Utils.h"
#include "com/sparseware/bellavista/Vitals.h"
#include "com/sparseware/bellavista/aChartHandler.h"
#include "com/sparseware/bellavista/aResultsManager.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation ComSparsewareBellavistaVitals

- (id)init {
  if (self = [super initWithNSString:@"vitals" withNSString:@"Vitals"]) {
    id<RAREiPlatformAppContext> app = [RAREPlatform getAppContext];
    RAREUTJSONObject *info = (RAREUTJSONObject *) check_class_cast([((id<RAREiPlatformAppContext>) nil_chk(app)) getDataWithId:@"vitalsInfo"], [RAREUTJSONObject class]);
    itemCounts_ = [[JavaUtilLinkedHashMap alloc] init];
    itemDatesSet_ = [[JavaUtilLinkedHashSet alloc] init];
    dataPageSize_ = [((RAREUTJSONObject *) nil_chk(info)) optIntWithNSString:@"dataPageSize" withInt:dataPageSize_];
    spreadSheetPageSize_ = [info optIntWithNSString:@"spreadSheetPageSize" withInt:spreadSheetPageSize_];
    chartHandler_ = [[ComSparsewareBellavistaVitals_ChartHandler alloc] initWithComSparsewareBellavistaVitals:self withRAREUTJSONObject:[info getJSONObjectWithNSString:@"charts"]];
    if ([info optBooleanWithNSString:@"hasReferenceRange" withBoolean:NO]) {
      (*[ComSparsewareBellavistaaResultsManager RANGE_POSITIONRef]) = 4;
    }
  }
  return self;
}

- (NSString *)getSpeeedSheetColumnTitle {
  return [RAREPlatform getResourceAsStringWithNSString:@"bv.text.vitals"];
}

- (void)onSummaryClickWithNSString:(NSString *)eventName
                   withRAREiWidget:(id<RAREiWidget>)widget
           withJavaUtilEventObject:(JavaUtilEventObject *)event {
  ComSparsewareBellavistaActionPath *path = [[ComSparsewareBellavistaActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"vitals", @"combo" } count:2 type:[IOSClass classWithClass:[NSString class]]]];
  [ComSparsewareBellavistaUtils handleActionPathWithComSparsewareBellavistaActionPath:path];
}

- (void)changeViewWithNSString:(NSString *)eventName
               withRAREiWidget:(id<RAREiWidget>)widget
       withJavaUtilEventObject:(JavaUtilEventObject *)event {
  NSString *name = [((RAREaGroupableButton *) check_class_cast(widget, [RAREaGroupableButton class])) getSelectedButtonName];
  if (name == nil) {
    name = [((id<RAREiWidget>) nil_chk(widget)) getName];
  }
  if ([RAREUIScreen isLargeScreen] && [@"spreadsheet" isEqual:name]) {
    NSString *key = [self getSelectedChartableKey];
    if (key != nil) {
      keyPath_ = [[ComSparsewareBellavistaActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ key } count:1 type:[IOSClass classWithClass:[NSString class]]]];
    }
  }
  [super changeViewWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
}

- (void)onShowComboChartWithNSString:(NSString *)eventName
                     withRAREiWidget:(id<RAREiWidget>)widget
             withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self showComboChartWithRAREStackPaneViewer:(RAREStackPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"chartPaneStack"], [RAREStackPaneViewer class])];
}

- (BOOL)checkRowWithRARERenderableDataItem:(RARERenderableDataItem *)row
                                   withInt:(int)index
                                   withInt:(int)expandableColumn
                                   withInt:(int)rowCount {
  @try {
    do {
      RARERenderableDataItem *name = [((RARERenderableDataItem *) nil_chk(row)) getItemExWithInt:[ComSparsewareBellavistaaResultsManager NAME_POSITION]];
      JavaUtilDate *date = (JavaUtilDate *) check_class_cast([((RARERenderableDataItem *) nil_chk([row getWithInt:[ComSparsewareBellavistaaResultsManager DATE_POSITION]])) getValue], [JavaUtilDate class]);
      if (name == nil || date == nil) {
        continue;
      }
      NSString *key = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(name)) getLinkedData], [NSString class]);
      if (key == nil) {
        continue;
      }
      RARERenderableDataItem *valueItem = [row getWithInt:[ComSparsewareBellavistaaResultsManager VALUE_POSITION]];
      NSString *value = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(valueItem)) getValue], [NSString class]);
      if ([ComSparsewareBellavistaUtils isChartableWithNSString:value]) {
        [((JavaUtilLinkedHashSet *) nil_chk(itemDatesSet_)) addWithId:date];
        RAREUTMutableInteger *count = [((JavaUtilLinkedHashMap *) nil_chk(itemCounts_)) getWithId:key];
        if (count == nil) {
          count = [[RAREUTMutableInteger alloc] initWithInt:0];
          (void) [itemCounts_ putWithId:key withId:count];
        }
        [((RAREUTMutableInteger *) nil_chk(count)) incrementAndGet];
      }
    }
    while (NO);
  }
  @catch (JavaLangException *e) {
    [RAREPlatform ignoreExceptionWithNSString:nil withJavaLangThrowable:e];
  }
  return YES;
}

- (void)onFinishedLoadingWithNSString:(NSString *)eventName
                      withRAREiWidget:(id<RAREiWidget>)widget
              withJavaUtilEventObject:(JavaUtilEventObject *)event {
}

- (void)onChartsPanelLoadedWithNSString:(NSString *)eventName
                        withRAREiWidget:(id<RAREiWidget>)widget
                withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [super onChartsPanelLoadedWithNSString:eventName withRAREiWidget:widget withJavaUtilEventObject:event];
  if (dataLoaded_ && ![((RARETableViewer *) nil_chk(dataTable_)) hasSelection]) {
    [self showComboChartWithRAREStackPaneViewer:(RAREStackPaneViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getFormViewer])) getWidgetWithNSString:@"chartPaneStack"], [RAREStackPaneViewer class])];
  }
}

- (void)selectVitalsWithNSString:(NSString *)eventName
                 withRAREiWidget:(id<RAREiWidget>)widget
         withJavaUtilEventObject:(JavaUtilEventObject *)event {
}

- (id<JavaUtilList>)createSpreadsheetRowsWithRARETableViewer:(RARETableViewer *)table {
  IOSObjectArray *dates = itemDates_;
  id<JavaUtilList> list = originalRows_;
  JavaUtilLinkedHashMap *counts = itemCounts_;
  JavaUtilLinkedHashMap *categories = [[JavaUtilLinkedHashMap alloc] init];
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] initWithInt:[((JavaUtilLinkedHashMap *) nil_chk(counts)) size]];
  JavaUtilArrayList *rows = [[JavaUtilArrayList alloc] initWithInt:[counts size]];
  int len = [((id<JavaUtilList>) nil_chk(list)) size];
  int clen = (int) [((IOSObjectArray *) nil_chk(dates)) count];
  BOOL found;
  RARERenderableDataItem *row, *test, *orow;
  for (int i = 0; i < len; i++) {
    orow = [list getWithInt:i];
    test = [((RARERenderableDataItem *) nil_chk(orow)) getWithInt:[ComSparsewareBellavistaaResultsManager NAME_POSITION]];
    NSString *s = (NSString *) check_class_cast([((RARERenderableDataItem *) nil_chk(test)) getLinkedData], [NSString class]);
    if (![counts containsKeyWithId:s]) {
      continue;
    }
    JavaUtilDate *date = (JavaUtilDate *) check_class_cast([((RARERenderableDataItem *) nil_chk([orow getWithInt:[ComSparsewareBellavistaaResultsManager DATE_POSITION]])) getValue], [JavaUtilDate class]);
    s = (NSString *) check_class_cast([test getValue], [NSString class]);
    row = [map getWithId:s];
    if (row == nil) {
      row = [((RARETableViewer *) nil_chk(table)) createRowWithInt:clen + 1 withBoolean:NO];
      [((RARERenderableDataItem *) nil_chk(row)) setItemCountWithInt:clen + 1];
      (void) [map putWithId:s withId:row];
      (void) [row setItemWithInt:0 withRARERenderableDataItem:test];
      [rows addWithId:row];
    }
    long long int time = [((JavaUtilDate *) nil_chk(date)) getTime];
    found = NO;
    for (int col = 0; col < clen; col++) {
      if ([((JavaUtilDate *) IOSObjectArray_Get(dates, col)) getTime] == time) {
        found = YES;
        (void) [((RARERenderableDataItem *) nil_chk(row)) setItemWithInt:col + 1 withRARERenderableDataItem:[orow getWithInt:[ComSparsewareBellavistaaResultsManager VALUE_POSITION]]];
      }
    }
    if (!found) {
      [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithId:orow];
    }
  }
  RARESubItemComparator *c = [[RARESubItemComparator alloc] init];
  [c setOptionsWithInt:0 withBoolean:NO];
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([categories entrySet])) iterator];
  [rows clear];
  RAREUIColor *bg = [RAREColorUtils getColorWithNSString:@"vitalsCategoryBackground"];
  RARERenderableDataItem *emptyCatRow = [[RARERenderableDataItem alloc] init];
  [emptyCatRow setBackgroundWithRAREUIColor:bg];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<JavaUtilMap_Entry> e = [it next];
    NSString *category = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    id<JavaUtilList> clist = [e getValue];
    [JavaUtilCollections sortWithJavaUtilList:clist withJavaUtilComparator:c];
    row = [((RARETableViewer *) nil_chk(table)) createRowWithInt:clen + 3 withBoolean:NO];
    [((RARERenderableDataItem *) nil_chk(row)) setSelectableWithBoolean:NO];
    for (int i = 0; i < clen + 3; i++) {
      [row addWithId:emptyCatRow];
    }
    test = [[RARERenderableDataItem alloc] initWithId:category];
    [test setBackgroundWithRAREUIColor:bg];
    [test setColumnSpanWithInt:-1];
    [test setHorizontalAlignmentWithRARERenderableDataItem_HorizontalAlignEnum:[RARERenderableDataItem_HorizontalAlignEnum CENTER]];
    (void) [row setWithInt:1 withId:test];
    [row setLinkedDataWithId:category];
    [rows addWithId:row];
    [rows addAllWithJavaUtilCollection:clist];
  }
  return rows;
}

- (void)processDataWithRARETableViewer:(RARETableViewer *)table
                      withJavaUtilList:(id<JavaUtilList>)rows {
  [ComSparsewareBellavistaUtils checkRowsAndOptimizeDatesWithJavaUtilList:rows withInt:[ComSparsewareBellavistaaResultsManager DATE_POSITION] withInt:RARERenderableDataItem_TYPE_DATETIME withComSparsewareBellavistaiValueChecker:self];
  itemDates_ = [itemDatesSet_ toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((JavaUtilLinkedHashSet *) nil_chk(itemDatesSet_)) size] type:[IOSClass classWithClass:[JavaUtilDate class]]]];
  [JavaUtilArrays sortWithNSObjectArray:itemDates_];
  int len = (int) [((IOSObjectArray *) nil_chk(itemDates_)) count];
  spreadsheetPosition_ = [JavaLangMath maxWithInt:0 withInt:len - spreadSheetPageSize_];
  rows = [ComSparsewareBellavistaUtils groupByDateWithRARETableViewer:table withJavaUtilList:rows];
  [((RARETableViewer *) nil_chk(table)) handleGroupedCollectionWithJavaUtilCollection:rows withBoolean:NO];
  dataLoaded_ = YES;
  ComSparsewareBellavistaActionPath *path = [ComSparsewareBellavistaUtils getActionPathWithBoolean:YES];
  NSString *key = path == nil ? nil : [path pop];
  if (key == nil && [RAREUIScreen isLargeScreen]) {
    key = @"combo";
  }
  if (key != nil) {
    if ([RAREUIScreen isLargeScreen] && !chartsLoaded_) {
      keyPath_ = [[ComSparsewareBellavistaActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ key } count:1 type:[IOSClass classWithClass:[NSString class]]]];
    }
    else {
      [self handlePathKeyWithRARETableViewer:table withNSString:key withInt:0 withBoolean:YES];
    }
  }
}

- (void)showComboChartWithRAREStackPaneViewer:(RAREStackPaneViewer *)sp {
  [self clearSelection];
  @try {
    if (sp == nil) {
      NSString *url = [NSString stringWithFormat:@"%@_charts.rml", namePrefix_];
      [ComSparsewareBellavistaUtils pushWorkspaceViewerWithNSString:url];
      keyPath_ = [[ComSparsewareBellavistaActionPath alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"combo" } count:1 type:[IOSClass classWithClass:[NSString class]]]];
    }
    else {
      RAREChartDataItem *series = [RAREaChartViewer createSeriesWithNSString:@"Combo"];
      RAREChartViewer *cv = [((ComSparsewareBellavistaaChartHandler *) nil_chk(chartHandler_)) createChartWithRAREiFormViewer:[sp getFormViewer] withNSString:@"combo" withInt:1 withRAREChartDataItem:series];
      [((RAREChartDefinition *) nil_chk([((RAREChartViewer *) nil_chk(cv)) getChartDefinition])) setShowLegendsWithBoolean:YES];
      ComSparsewareBellavistaSummaryVitalsHandler *parser = [[ComSparsewareBellavistaSummaryVitalsHandler alloc] init];
      [cv removeWithId:series];
      [parser calculateRangesAndUpdateUIWithRAREiFormViewer:[cv getFormViewer] withRAREChartViewer:cv withJavaUtilList:originalRows_ withBoolean:NO];
      [ComSparsewareBellavistaUtils setViewerInStackPaneViewerWithRAREStackPaneViewer:sp withRAREiViewer:cv withRAREiTransitionAnimator:nil withBoolean:YES withBoolean:YES withBoolean:YES];
    }
  }
  @catch (JavaLangException *e) {
    [ComSparsewareBellavistaUtils handleErrorWithJavaLangThrowable:e];
  }
}

- (void)handlePathKeyWithRARETableViewer:(RARETableViewer *)table
                            withNSString:(NSString *)key
                                 withInt:(int)column
                             withBoolean:(BOOL)fireAction {
  if ([@"combo" isEqual:key]) {
    [self showComboChartWithRAREStackPaneViewer:(RAREStackPaneViewer *) check_class_cast([((RAREWindowViewer *) nil_chk([RAREPlatform getWindowViewer])) getViewerWithNSString:@"chartPaneStack"], [RAREStackPaneViewer class])];
  }
  else {
    [super handlePathKeyWithRARETableViewer:table withNSString:key withInt:column withBoolean:fireAction];
  }
}

- (void)dataParsedWithRAREiWidget:(id<RAREiWidget>)widget
                 withJavaUtilList:(id<JavaUtilList>)rows
               withRAREActionLink:(RAREActionLink *)link {
  originalRows_ = rows;
  RARETableViewer *table = (RARETableViewer *) check_class_cast(widget, [RARETableViewer class]);
  [((RARETableViewer *) nil_chk(table)) setWidgetDataLinkWithRAREActionLink:link];
  [((JavaUtilLinkedHashMap *) nil_chk(itemCounts_)) clear];
  [((JavaUtilLinkedHashSet *) nil_chk(itemDatesSet_)) clear];
  int len = [((id<JavaUtilList>) nil_chk(rows)) size];
  if ((len == 1) && ![((RARERenderableDataItem *) nil_chk([rows getWithInt:0])) isEnabled]) {
    hasNoData_ = YES;
    [table addParsedRowWithRARERenderableDataItem:[rows getWithInt:0]];
    [table finishedParsing];
    [table finishedLoading];
    itemDates_ = nil;
    dataLoaded_ = YES;
    (void) [ComSparsewareBellavistaUtils getActionPathWithBoolean:YES];
    return;
  }
  [self processDataWithRARETableViewer:table withJavaUtilList:rows];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getSpeeedSheetColumnTitle", NULL, "LNSString", 0x4, NULL },
    { "checkRowWithRARERenderableDataItem:withInt:withInt:withInt:", NULL, "Z", 0x1, NULL },
    { "createSpreadsheetRowsWithRARETableViewer:", NULL, "LJavaUtilList", 0x4, NULL },
    { "processDataWithRARETableViewer:withJavaUtilList:", NULL, "V", 0x4, NULL },
    { "showComboChartWithRAREStackPaneViewer:", NULL, "V", 0x4, NULL },
    { "handlePathKeyWithRARETableViewer:withNSString:withInt:withBoolean:", NULL, "V", 0x4, NULL },
    { "dataParsedWithRAREiWidget:withJavaUtilList:withRAREActionLink:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaVitals = { "Vitals", "com.sparseware.bellavista", NULL, 0x1, 7, methods, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaVitals;
}

@end
@implementation ComSparsewareBellavistaVitals_ChartHandler

- (id)initWithComSparsewareBellavistaVitals:(ComSparsewareBellavistaVitals *)outer$
                       withRAREUTJSONObject:(RAREUTJSONObject *)chartsInfo {
  return [super initWithNSString:@"Vitals" withRAREUTJSONObject:chartsInfo withInt:[ComSparsewareBellavistaaResultsManager NAME_POSITION] withInt:[ComSparsewareBellavistaaResultsManager DATE_POSITION] withInt:[ComSparsewareBellavistaaResultsManager VALUE_POSITION]];
}

- (void)configureChartWithRAREiWidget:(id<RAREiWidget>)context
                    withRARESPOTChart:(RARESPOTChart *)cfg
                         withNSString:(NSString *)key
                withRAREChartDataItem:(RAREChartDataItem *)series {
  [super configureChartWithRAREiWidget:context withRARESPOTChart:cfg withNSString:key withRAREChartDataItem:series];
  if ([((NSString *) nil_chk(key)) isEqual:@"combo"]) {
    [((SPOTPrintableString *) nil_chk(((RARESPOTPlot *) nil_chk([((RARESPOTChart *) nil_chk(cfg)) getPlotReference]))->bgColor_)) setValueWithNSString:@"defaultBackground,defaultBackground-15"];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "configureChartWithRAREiWidget:withRARESPOTChart:withNSString:withRAREChartDataItem:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcClassInfo _ComSparsewareBellavistaVitals_ChartHandler = { "ChartHandler", "com.sparseware.bellavista", "Vitals", 0x0, 1, methods, 0, NULL, 0, NULL};
  return &_ComSparsewareBellavistaVitals_ChartHandler;
}

@end
