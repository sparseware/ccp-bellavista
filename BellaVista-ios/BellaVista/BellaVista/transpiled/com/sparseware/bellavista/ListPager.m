//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/ListPager.java
//
//  Created by decoteaud on 11/18/15.
//

#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/util/CharScanner.h"
#include "com/sparseware/bellavista/ListPager.h"
#include "java/util/ArrayList.h"
#include "java/util/Map.h"

@implementation CCPBVListPager

- (id)init {
  return [super init];
}

- (RAREActionLink *)next {
  RAREActionLink *link = next__;
  next__ = nil;
  return link;
}

- (RAREActionLink *)previous {
  RAREActionLink *link = nil;
  if (stack_ != nil) {
    int pos = [stack_ size] - 2;
    link = (pos > -1) ? [stack_ getWithInt:pos] : nil;
    if (link != nil) {
      (void) [stack_ removeWithInt:pos];
      (void) [stack_ removeWithInt:pos];
    }
  }
  next__ = nil;
  return link;
}

+ (RAREActionLink *)createPagingLinkWithRAREActionLink:(RAREActionLink *)source
                                          withNSString:(NSString *)href {
  RAREActionLink *l = (RAREActionLink *) check_class_cast([((RAREActionLink *) nil_chk(source)) clone], [RAREActionLink class]);
  if ([((NSString *) nil_chk(href)) indexOf:':'] == -1) {
    [((id<JavaUtilMap>) nil_chk([((RAREActionLink *) nil_chk(l)) getAttributes])) putAllWithJavaUtilMap:[RAREUTCharScanner parseOptionStringWithNSString:href withChar:([href indexOf:'^'] != -1) ? '^' : '&']];
  }
  else {
    [((id<JavaUtilMap>) nil_chk([((RAREActionLink *) nil_chk(l)) getAttributes])) clear];
    int n = [href indexOf:'?'];
    if (n != -1) {
      [((id<JavaUtilMap>) nil_chk([l getAttributes])) putAllWithJavaUtilMap:[RAREUTCharScanner parseOptionStringWithNSString:[href substring:n + 1] withChar:'&']];
      href = [href substring:0 endIndex:n];
    }
    (void) [((id<JavaUtilMap>) nil_chk([l getAttributes])) putWithId:@"href" withId:href];
  }
  return l;
}

- (void)setNextWithRAREActionLink:(RAREActionLink *)next {
  self->next__ = next;
}

- (void)clear {
  next__ = nil;
  if (stack_ != nil) {
    [stack_ clear];
  }
}

- (void)addWithRAREActionLink:(RAREActionLink *)link {
  [((JavaUtilArrayList *) nil_chk([self getStack])) addWithId:link];
}

- (BOOL)hasNext {
  return next__ != nil;
}

- (BOOL)hasPrevious {
  return (stack_ == nil) ? NO : [stack_ size] > 1;
}

- (JavaUtilArrayList *)getStack {
  if (stack_ == nil) {
    stack_ = [[JavaUtilArrayList alloc] initWithInt:5];
  }
  return stack_;
}

- (void)copyAllFieldsTo:(CCPBVListPager *)other {
  [super copyAllFieldsTo:other];
  other->next__ = next__;
  other->stack_ = stack_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "next", NULL, "LRAREActionLink", 0x1, NULL },
    { "previous", NULL, "LRAREActionLink", 0x1, NULL },
    { "createPagingLinkWithRAREActionLink:withNSString:", NULL, "LRAREActionLink", 0x9, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL },
    { "hasPrevious", NULL, "Z", 0x1, NULL },
    { "getStack", NULL, "LJavaUtilArrayList", 0x4, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "stack_", NULL, 0x4, "LJavaUtilArrayList" },
    { "next__", "next", 0x4, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _CCPBVListPager = { "ListPager", "com.sparseware.bellavista", NULL, 0x1, 6, methods, 2, fields, 0, NULL};
  return &_CCPBVListPager;
}

@end
