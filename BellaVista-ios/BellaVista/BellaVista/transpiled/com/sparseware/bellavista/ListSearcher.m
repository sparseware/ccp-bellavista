//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/sparseware/bellavista/ListSearcher.java
//
//  Created by decoteaud on 3/14/16.
//

#include "com/appnativa/rare/Platform.h"
#include "com/appnativa/rare/net/ActionLink.h"
#include "com/appnativa/rare/spot/ListBox.h"
#include "com/appnativa/rare/ui/UISoundHelper.h"
#include "com/appnativa/rare/ui/event/DataEvent.h"
#include "com/appnativa/rare/viewer/ListBoxViewer.h"
#include "com/appnativa/rare/viewer/WindowViewer.h"
#include "com/appnativa/rare/viewer/iContainer.h"
#include "com/appnativa/rare/viewer/iFormViewer.h"
#include "com/appnativa/rare/widget/aGroupableButton.h"
#include "com/appnativa/rare/widget/iWidget.h"
#include "com/appnativa/spot/SPOTPrintableString.h"
#include "com/appnativa/util/iCancelable.h"
#include "com/sparseware/bellavista/ListPager.h"
#include "com/sparseware/bellavista/ListSearcher.h"
#include "com/sparseware/bellavista/Utils.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/util/EventObject.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation CCPBVListSearcher

- (id)init {
  return [super init];
}

- (void)changePageWithBoolean:(BOOL)next
              withRAREiWidget:(id<RAREiWidget>)nextPageWidget
              withRAREiWidget:(id<RAREiWidget>)previousPageWidget {
  RAREListBoxViewer *lb = [self getListBoxWithRAREiWidget:nextPageWidget];
  CCPBVListPager *pager = (CCPBVListPager *) check_class_cast([((RAREListBoxViewer *) nil_chk(lb)) getAttributeWithNSString:@"_pager"], [CCPBVListPager class]);
  RAREActionLink *link = nil;
  if (next) {
    link = [((CCPBVListPager *) nil_chk(pager)) next];
  }
  else {
    link = [((CCPBVListPager *) nil_chk(pager)) previous];
  }
  if (link == nil) {
    if (next) {
      [((id<RAREiWidget>) nil_chk(nextPageWidget)) setEnabledWithBoolean:NO];
    }
    else {
      [((id<RAREiWidget>) nil_chk(previousPageWidget)) setEnabledWithBoolean:NO];
    }
    [RAREUISoundHelper beep];
  }
  else {
    [self load__WithRAREListBoxViewer:lb withRAREActionLink:link];
  }
}

- (void)onEventWithNSString:(NSString *)eventName
            withRAREiWidget:(id<RAREiWidget>)widget
    withJavaUtilEventObject:(JavaUtilEventObject *)event {
}

- (void)onListCreatedWithNSString:(NSString *)eventName
                  withRAREiWidget:(id<RAREiWidget>)widget
          withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RARESPOTListBox *cfg = (RARESPOTListBox *) check_class_cast([((RAREDataEvent *) check_class_cast(event, [RAREDataEvent class])) getData], [RARESPOTListBox class]);
  [((id<RAREiWidget>) nil_chk(widget)) setAttributeWithNSString:@"_pager" withId:[[CCPBVListPager alloc] init]];
  [widget setAttributeWithNSString:@"_url" withId:[((SPOTPrintableString *) nil_chk(((RARESPOTListBox *) nil_chk(cfg))->dataURL_)) getValue]];
  [cfg->dataURL_ spot_clear];
}

- (void)onNextOrPreviousPageWithNSString:(NSString *)eventName
                         withRAREiWidget:(id<RAREiWidget>)widget
                 withJavaUtilEventObject:(JavaUtilEventObject *)event {
  [self changePageWithBoolean:[((NSString *) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getName])) isEqual:@"_nextPage"] withRAREiWidget:widget withRAREiWidget:[((id<RAREiContainer>) nil_chk([widget getParent])) getWidgetWithNSString:@"_previousPage"]];
}

- (void)onSearchFieldActionWithNSString:(NSString *)eventName
                        withRAREiWidget:(id<RAREiWidget>)widget
                withJavaUtilEventObject:(JavaUtilEventObject *)event {
  RAREListBoxViewer *lb = [self getListBoxWithRAREiWidget:widget];
  NSString *value = [((NSString *) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getValueAsString])) trim];
  CCPBVListPager *pager = (CCPBVListPager *) check_class_cast([((RAREListBoxViewer *) nil_chk(lb)) getAttributeWithNSString:@"_pager"], [CCPBVListPager class]);
  NSString *url = (NSString *) check_class_cast([lb getAttributeWithNSString:@"_url"], [NSString class]);
  id o = [lb getAttributeWithNSString:@"pageSize"];
  JavaLangInteger *pageSize = nil;
  if ([o isKindOfClass:[NSString class]]) {
    pageSize = [JavaLangInteger valueOfWithNSString:(NSString *) check_class_cast(o, [NSString class])];
    [lb setAttributeWithNSString:@"pageSize" withId:pageSize];
  }
  else if ([o isKindOfClass:[JavaLangInteger class]]) {
    pageSize = (JavaLangInteger *) check_class_cast(o, [JavaLangInteger class]);
  }
  [((CCPBVListPager *) nil_chk(pager)) clear];
  if ([((NSString *) nil_chk(value)) sequenceLength] == 0) {
    [lb clear];
    [self updateButtonsWithRAREListBoxViewer:lb withCCPBVListPager:pager];
    return;
  }
  RAREActionLink *link = [CCPBVUtils createLinkWithRAREiWidget:lb withNSString:url withBoolean:YES];
  JavaUtilHashMap *attributes = [[JavaUtilHashMap alloc] initWithInt:2];
  (void) [attributes putWithId:[widget getName] withId:value];
  if ((pageSize != nil) && ([pageSize intValue] > 0)) {
    (void) [attributes putWithId:@"max" withId:[pageSize description]];
  }
  [((RAREActionLink *) nil_chk(link)) setAttributesWithJavaUtilMap:attributes];
  [link setRequestMethodWithRAREActionLink_RequestMethodEnum:[RAREActionLink_RequestMethodEnum POST]];
  [self load__WithRAREListBoxViewer:lb withRAREActionLink:link];
}

- (RAREListBoxViewer *)getListBoxWithRAREiWidget:(id<RAREiWidget>)widget {
  return (RAREListBoxViewer *) check_class_cast([((id<RAREiFormViewer>) nil_chk([((id<RAREiWidget>) nil_chk(widget)) getFormViewer])) getWidgetWithNSString:@"list"], [RAREListBoxViewer class]);
}

- (void)load__WithRAREListBoxViewer:(RAREListBoxViewer *)lb
                 withRAREActionLink:(RAREActionLink *)link {
  RAREWindowViewer *w = [RAREPlatform getWindowViewer];
  (void) [((RAREListBoxViewer *) nil_chk(lb)) parseDataLinkWithRAREActionLink:link withBoolean:NO withRAREiFunctionCallback:[[CCPBVListSearcher_$1 alloc] initWithCCPBVListSearcher:self withRAREWindowViewer:w withRAREListBoxViewer:lb withRAREActionLink:link]];
  [((RAREWindowViewer *) nil_chk(w)) showWaitCursor];
}

- (void)updateButtonsWithRAREListBoxViewer:(RAREListBoxViewer *)lb
                        withCCPBVListPager:(CCPBVListPager *)pager {
  id<RAREiFormViewer> fv = [((RAREListBoxViewer *) nil_chk(lb)) getFormViewer];
  RAREaGroupableButton *pb = (RAREaGroupableButton *) check_class_cast([((id<RAREiFormViewer>) nil_chk(fv)) getWidgetWithNSString:@"_nextPage"], [RAREaGroupableButton class]);
  if (pb != nil) {
    [pb setEnabledWithBoolean:[((CCPBVListPager *) nil_chk(pager)) hasNext]];
  }
  pb = (RAREaGroupableButton *) check_class_cast([fv getWidgetWithNSString:@"_previousPage"], [RAREaGroupableButton class]);
  if (pb != nil) {
    [pb setEnabledWithBoolean:[((CCPBVListPager *) nil_chk(pager)) hasPrevious]];
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getListBoxWithRAREiWidget:", NULL, "LRAREListBoxViewer", 0x4, NULL },
    { "load__WithRAREListBoxViewer:withRAREActionLink:", NULL, "V", 0x4, NULL },
    { "updateButtonsWithRAREListBoxViewer:withCCPBVListPager:", NULL, "V", 0x4, NULL },
  };
  static J2ObjcClassInfo _CCPBVListSearcher = { "ListSearcher", "com.sparseware.bellavista", NULL, 0x1, 3, methods, 0, NULL, 0, NULL};
  return &_CCPBVListSearcher;
}

@end
@implementation CCPBVListSearcher_$1

- (void)finishedWithBoolean:(BOOL)canceled
                     withId:(id)returnValue {
  [((RAREWindowViewer *) nil_chk(val$w_)) hideWaitCursor];
  if ([returnValue isKindOfClass:[JavaLangThrowable class]]) {
    [CCPBVUtils handleErrorWithJavaLangThrowable:(JavaLangThrowable *) check_class_cast(returnValue, [JavaLangThrowable class])];
  }
  [((RAREListBoxViewer *) nil_chk(val$lb_)) setAllWithJavaUtilCollection:(id<JavaUtilList>) check_protocol_cast(returnValue, @protocol(JavaUtilList))];
  CCPBVListPager *pager = (CCPBVListPager *) check_class_cast([val$lb_ getAttributeWithNSString:@"_pager"], [CCPBVListPager class]);
  NSString *pn = nil;
  if ([((RAREActionLink *) nil_chk(val$link_)) getAttributes] != nil) {
    [((CCPBVListPager *) nil_chk(pager)) addWithRAREActionLink:val$link_];
    pn = [val$link_ getPagingNext];
    if (pn != nil) {
      [pager setNextWithRAREActionLink:[CCPBVListPager createPagingLinkWithRAREActionLink:val$link_ withNSString:pn]];
    }
  }
  else {
    [((CCPBVListPager *) nil_chk(pager)) clear];
  }
  [this$0_ updateButtonsWithRAREListBoxViewer:val$lb_ withCCPBVListPager:pager];
}

- (id)initWithCCPBVListSearcher:(CCPBVListSearcher *)outer$
           withRAREWindowViewer:(RAREWindowViewer *)capture$0
          withRAREListBoxViewer:(RAREListBoxViewer *)capture$1
             withRAREActionLink:(RAREActionLink *)capture$2 {
  this$0_ = outer$;
  val$w_ = capture$0;
  val$lb_ = capture$1;
  val$link_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "LCCPBVListSearcher" },
    { "val$w_", NULL, 0x1012, "LRAREWindowViewer" },
    { "val$lb_", NULL, 0x1012, "LRAREListBoxViewer" },
    { "val$link_", NULL, 0x1012, "LRAREActionLink" },
  };
  static J2ObjcClassInfo _CCPBVListSearcher_$1 = { "$1", "com.sparseware.bellavista", "ListSearcher", 0x8000, 0, NULL, 4, fields, 0, NULL};
  return &_CCPBVListSearcher_$1;
}

@end
